{"version":3,"sources":["components/MainMenu.tsx","components/NewGameSetup.tsx","types/PlayerRoutes.tsx","utils/dice/scene.js","utils/dice/physics.js","utils/dice/dice.js","utils/player/token.js","utils/dice/render.js","types/BoardCoordinates.tsx","utils/threeManager.js","utils/dice/floor.js","types/BoardPositionCategories.tsx","components/GameBoard/hooks/useGameLogic.ts","components/GameBoard/PlayerStats.tsx","components/GameBoard/QuestionCategories.tsx","components/RouletteWheel.tsx","components/GameBoard/WinnerModal.tsx","components/GameBoard/GameControls.tsx","components/QuestionCard.tsx","components/GameBoard/QuestionModal.tsx","types/Question.tsx","components/GameBoard/utils/categories.ts","components/GameBoard/GameBoard.tsx","components/GameBoard/hooks/useQuestion.ts","App.tsx","reportWebVitals.ts","services/api.ts","redux/slices/gameSlice.ts","redux/slices/playersSlice.ts","redux/slices/questionsSlice.ts","redux/rootReducer.ts","redux/store.ts","index.tsx"],"names":["MainMenu","_ref","onNewGame","onContinueGame","_jsxs","className","children","_jsx","onClick","possibleColors","NewGameSetup","onSetupComplete","onPlayerCount","numberOfPlayers","setNumberOfPlayers","useState","players","setPlayers","currentStep","setCurrentStep","useEffect","Array","fill","map","_","index","id","name","diceRoll","position","color","token3D","handleStartGame","value","onChange","event","parseInt","target","i","player","type","e","handlePlayerNameChange","updatedPlayers","randomizePlayersOrder","shuffledPlayers","sort","Math","random","disabled","every","validateStep2","concat","checked","handleColorChange","some","p","htmlFor","validateStep3","playerRoutes","red","blue","gray","black","white","green","scene","camera","renderer","controls","updateSceneSize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","physicsWorld","diceModel","diceArray","diceHasBeenThrown","createDice","console","error","diceMesh","clone","scale","set","castShadow","add","diceBody","CANNON","mass","shape","addBody","dice","mesh","body","push","addDiceEvents","scoreResult","onRollComplete","log","addEventListener","allowSleep","euler","quaternion","toEuler","eps","score","isZero","angle","abs","isHalfPi","PI","isMinusHalfPi","z","x","undefined","innerHTML","throwDice","length","forEach","velocity","setZero","angularVelocity","startX","startY","copy","rotation","force","randomDirection","impulseX","impulseY","impulseZ","applyImpulse","angularX","angularY","angularZ","loadPlayerTokenModel","playerColor","arguments","callback","GLTFLoader","load","gltf","tokenModel","material","THREE","traverse","node","isMesh","render","fixedStep","update","requestAnimationFrame","predefinedCoordinates","BoardCoordinates","initDiceSystem","canvasEl","rollBtn","floorMaterial","diceMaterial","gravity","contactMaterial","friction","restitution","addContactMaterial","defaultContactMaterial","initPhysics","alpha","antialias","canvas","shadowMap","enabled","setPixelRatio","devicePixelRatio","background","lookAt","OrbitControls","domElement","enableDamping","dampingFactor","minDistance","maxDistance","ambientLight","directionalLight","shadow","mapSize","width","height","topLight","near","far","initScene","transparent","opacity","floor","receiveShadow","y","floorBody","STATIC","setFromEuler","SVGLoader","data","paths","group","path","userData","style","fillOpacity","side","depthWrite","createShapes","geometry","boundingBox","setFromObject","boxCenter","getCenter","xhr","loaded","total","createFloor","boardPositionCategories","useGameLogic","selectNextQuestion","handleAnswer","playerIndexRef","useRef","playerPositionsRef","reduce","acc","lastMoveRef","currentPlayerIndex","setCurrentPlayerIndex","canThrowDice","setCanThrowDice","setDiceRoll","winner","setWinner","showRoulette","setShowRoulette","playerAnsweredCategories","updateFlag","setUpdateFlag","playerPositions","setPlayerPositions","current","currentQuestionCategory","setCurrentQuestionCategory","initialPositions","initialCategories","Set","moveToNextPlayer","nextPlayerIndex","movePlayerToken","currentIndex","newIndex","isReversed","onComplete","route","toLowerCase","endPositionKey","endPosition","startPositionKey","startPosition","animateTokenMovement","token","warn","interval","deltaX","deltaZ","animateStep","progress","heightFactor","sin","setTimeout","handleDiceRollComplete","diceScore","currentPlayer","currentPlayerColor","currentRoute","currentPositionIndex","nextPositionIndex","min","prev","_playerAnsweredCatego","badgeCount","size","category","handleRollDice","document","querySelector","handleRouletteSpinComplete","atEnd","answeredCategories","has","handleAnswerComplete","correct","lastMove","max","updatePlayerPosition","newPosition","fillBadgesForPlayer","playerId","handleTimeout","spacesMoved","PlayerStats","categoryColors","from","backgroundColor","title","QuestionCategories","difficulties","answeredQuestions","getCategoryQuestions","renderQuestionSquares","difficulty","categoryQuestions","filter","q","answeredCategoryQuestions","_answeredQuestions","String","includes","Object","keys","categories","RouletteWheel","onSpinComplete","spinning","setSpinning","selectedCategory","setSelectedCategory","setRotation","finalAngle","setFinalAngle","transform","spinWheel","randomAngle","categoryIndex","WinnerModal","GameControls","rollBtnRef","scoreRef","toggleDummyToken","updateDummyTokenPosition","isDummyEnabled","setIsDummyEnabled","dummyX","setDummyX","dummyZ","setDummyZ","currentPlayerStyle","ref","_Fragment","QuestionCard","question","onAnswer","timeLeft","selectedOption","setSelectedOption","buttonColor","textColor","options","option","isCorrect","answer","handleOptionClick","QuestionModal","algorithms","programmingLanguages","webDevelopment","dataBases","devOps","unixSystem","GameBoard","currentQuestion","resetQuestions","setTimeLeft","onTimeout","setCurrentQuestion","setAnsweredQuestions","initialAnsweredQuestions","timer","clearTimeout","questionKey","updated","availableQuestions","resetAnsweredQuestions","useQuestions","canvasRef","xPos","setXPos","zPos","setZPos","dummyToken","setDummyToken","playerToken","startPos","initPlayerTokens","dummy","remove","App","gameStarted","setGameStarted","continueGame","setContinueGame","handleNewGame","handleContinueGame","handleSetupComplete","sortedPlayers","initializedPlayers","handlePlayerCount","count","reportWebVitals","onPerfEntry","Function","onCLS","onFID","onFCP","onLCP","onTTFB","api","axios","create","baseURL","getGameSessions","createAsyncThunk","async","get","fetchGameSessions","gameSlice","createSlice","initialState","currentTurn","isStarted","sessions","status","reducers","startGame","state","endGame","nextTurn","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","_action$error$message","message","actions","getPlayers","fetchPlayers","playersSlice","getQuestions","fetchQuestions","questionsSlice","questions","rootReducer","combineReducers","game","store","configureStore","reducer","ReactDOM","React","StrictMode","Provider","getElementById"],"mappings":"wVAkBeA,MAV2BC,IAAoC,IAAnC,UAAEC,EAAS,eAAEC,GAAgBF,EACtE,OACEG,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BACJC,cAAA,UAAQC,QAASN,EAAW,oBAAkB,yBAAwBI,SAAC,aACvEC,cAAA,UAAQC,QAASL,EAAgB,oBAAkB,yBAAwBG,SAAC,oBACxE,E,MCLV,MAAMG,EAAiB,CAAC,MAAO,OAAQ,QAAS,QAAS,OAAQ,SAqKlDC,MAnKmCT,IAAyC,IAAxC,gBAAEU,EAAe,cAAEC,GAAeX,EACnF,MAAOY,EAAiBC,GAAsBC,mBAAS,IAChDC,EAASC,GAAcF,mBAAmB,KAC1CG,EAAaC,GAAkBJ,mBAAS,GAE/CK,qBAAU,KAERR,EAAcC,GAGdI,EACE,IAAII,MAAMR,GAAiBS,KAAK,MAAMC,KAAI,CAACC,EAAGC,KAAK,CACjDC,GAAID,EAAQ,EACZE,KAAM,GACNC,SAAU,EACVC,SAAU,EACVC,MAAO,GACPC,QAAS,SAEZ,GACA,CAAClB,EAAiBD,IAErB,MA6BMoB,EAAkBA,KACtBrB,EAAgBK,EAAQ,EAG1B,OACET,cAAA,OAAKF,UAAU,sBAAqBC,SAClCF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CACZ,IAAhBY,GACCd,eAAA,OAAKC,UAAU,0BAAyBC,SAAA,CACtCC,cAAA,MAAAD,SAAI,6BACJC,cAAA,UACE0B,MAAOpB,EACPqB,SAzCyBC,IACnCrB,EAAmBsB,SAASD,EAAME,OAAOJ,MAAO,IAAI,EAyC1C5B,UAAU,YAAWC,SAEpB,IAAIe,MAAM,IAAIE,KAAI,CAACC,EAAGc,IACrB/B,cAAA,UAAoB0B,MAAOK,EAAI,EAAEhC,SAC9BgC,EAAI,GADMA,EAAI,OAKrB/B,cAAA,UACEC,QAASA,IAAMW,EAAe,GAC9B,oBAAkB,yBAAwBb,SAC3C,YAMY,IAAhBY,GACCd,eAAA,OAAKC,UAAU,6BAA4BC,SAAA,CACzCC,cAAA,MAAAD,SAAI,2CACJC,cAAA,OAAKF,UAAU,eAAcC,SAC1BU,EAAQO,KAAI,CAACgB,EAAQd,IACpBrB,eAAA,OAAiBC,UAAU,eAAcC,SAAA,CACvCF,eAAA,SAAAE,SAAA,CAAO,UAAQmB,EAAQ,EAAE,YACzBlB,cAAA,SACEiC,KAAK,OACLP,MAAOM,EAAOZ,KACdO,SAAWO,GAjEEC,EAACjB,EAAeE,KAC7C,MAAMgB,EAAiB,IAAI3B,GAC3B2B,EAAelB,GAAOE,KAAOA,EAC7BV,EAAW0B,EAAe,EA8DOD,CAAuBjB,EAAOgB,EAAEJ,OAAOJ,OACxD,oBAAkB,qBANZR,OAWdlB,cAAA,UACEC,QAlEkBoC,KAC5B,MAAMC,EAAkB,IAAI7B,GAAS8B,MAAK,IAAMC,KAAKC,SAAW,KAChE/B,EAAW4B,EAAgB,EAiEjBI,UAAWjC,EAAQkC,OAAOX,GAA2B,KAAhBA,EAAOZ,OAC5C,oBAAkB,iBAAgBrB,SACnC,cAGDC,cAAA,UACEC,QA9DU2C,KACpBhC,EAAe,EAAE,EA8DP,oBAAkB,yBAAwBb,SAC3C,YAMY,IAAhBY,GACCd,eAAA,OAAKC,UAAU,6BAA4BC,SAAA,CACzCC,cAAA,MAAAD,SAAI,0BACJC,cAAA,OACEF,UAAU,mBACV,oBAAkB,2CAA0CC,SAE3DU,EAAQO,KAAI,CAACgB,EAAQd,IACpBrB,eAAA,OAAiBC,UAAU,eAAcC,SAAA,CACvCF,eAAA,SAAAE,SAAA,CAAO,UAAQiC,EAAOZ,KAAK,gBAC3BpB,cAAA,OAAKF,UAAU,oBAAmBC,SAC/BG,EAAec,KAAKO,GACnB1B,eAAA,OAAiBC,UAAU,UAASC,SAAA,CAClCC,cAAA,SACEiC,KAAK,QACLd,GAAE,SAAA0B,OAAW3B,EAAK,KAAA2B,OAAItB,GACtBH,KAAI,SAAAyB,OAAW3B,GACfQ,MAAOH,EACPuB,QAASd,EAAOT,QAAUA,EAC1BI,SAAWO,GA/FTa,EAAC7B,EAAeK,KACxC,MAAMa,EAAiB,IAAI3B,GAC3B2B,EAAelB,GAAOK,MAAQA,EAC9Bb,EAAW0B,EAAe,EA4FaW,CAAkB7B,EAAOgB,EAAEJ,OAAOJ,OACnDgB,SAAUjC,EAAQuC,MACfC,GAAMA,EAAE1B,QAAUA,GAAS0B,IAAMjB,MAGtChC,cAAA,SACEkD,QAAO,SAAAL,OAAW3B,EAAK,KAAA2B,OAAItB,GAC3BzB,UAAS,iBAAA+C,OAAmBtB,GAAQxB,SACrC,aAfOwB,SAJNL,OA4BdlB,cAAA,UACEC,QAvGUkD,KACpB1B,GAAiB,EAuGPiB,UAAWjC,EAAQkC,OAAOX,GAA4B,KAAjBA,EAAOT,QAC5C,oBAAkB,yCAAwCxB,SAC3D,sBAMH,E,MC/JH,MAAMqD,EAA4C,CACvDC,IAAK,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjLC,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAClLC,KAAM,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAClLC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3KC,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnLC,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,M,mBCdpL,IAAIC,EAAOC,EAAQC,EAAUC,EA6D7B,SAASC,IACdH,EAAOI,OAASC,OAAOC,WAAaD,OAAOE,YAC3CP,EAAOQ,yBACPP,EAASQ,QAAQJ,OAAOC,WAAYD,OAAOE,YAC7C,C,WClEO,IAAIG,E,wBCEX,IAAIC,EAAY,KACZC,EAAY,GACZC,GAAoB,EAuBjB,SAASC,EAAWf,EAAOW,GAChC,IAAKC,EAEH,OADAI,QAAQC,MAAM,0BACP,KAGT,MAAMC,EAAWN,EAAUO,QAC3BD,EAASE,MAAMC,IAAI,EAAG,EAAG,GACzBH,EAASI,YAAa,EACtBtB,EAAMuB,IAAIL,GAEV,MAAMM,EAAW,IAAIC,IAAY,CAC/BC,KAAM,EACNC,MAAO,IAAIF,IAAW,IAAIA,IAAY,EAAG,EAAG,MAE9CD,EAAS7D,SAAS0D,IAAI,EAAG,EAAG,GAC5BV,EAAaiB,QAAQJ,GAErB,MAAMK,EAAO,CAAEC,KAAMZ,EAAUa,KAAMP,GAGrC,OAFAX,EAAUmB,KAAKH,GAERA,CACT,CAEA,SAASI,EAAcJ,EAAMK,EAAaC,GACxCnB,QAAQoB,IAAI,yBAA0BP,EAAM,gBAAiBK,GAC/B,oBAAnBC,EAKXN,EAAKE,KAAKM,iBAAiB,SAAU9D,IAEnC,GADAyC,QAAQoB,IAAI,+BACPtB,EAAmB,OACxBA,GAAoB,EAEpBe,EAAKE,KAAKO,YAAa,EAEvB,MAAMC,EAAQ,IAAId,IAClBlD,EAAEJ,OAAOqE,WAAWC,QAAQF,GAE5B,MAAMG,EAAM,GACZ,IAMIC,EANAC,EAAUC,GAAUhE,KAAKiE,IAAID,GAASH,EACtCK,EAAYF,GAAUhE,KAAKiE,IAAID,EAAQ,GAAMhE,KAAKmE,IAAMN,EACxDO,EAAiBJ,GAAUhE,KAAKiE,IAAI,GAAMjE,KAAKmE,GAAKH,GAASH,EAC5CG,MAIjBD,EAAOL,EAAMW,GACXN,EAAOL,EAAMY,GACfR,EAAQ,EACCI,EAASR,EAAMY,GACxBR,EAAQ,EACCM,EAAcV,EAAMY,GAC7BR,EAAQ,GAVSE,EAWMN,EAAMY,GAV/BtE,KAAKiE,IAAIjE,KAAKmE,GAAKH,GAASH,GAAO7D,KAAKiE,IAAIjE,KAAKmE,GAAKH,GAASH,KAW7DC,EAAQ,IAEDI,EAASR,EAAMW,GACxBP,EAAQ,EACCM,EAAcV,EAAMW,KAC7BP,EAAQ,QAGIS,IAAVT,IAC4B,KAA1BT,EAAYmB,UACdnB,EAAYmB,WAAaV,EAEzBT,EAAYmB,WAAa,IAAMV,EAIjC3B,QAAQoB,IAAI,6BAA8BO,GAC1CR,EAAeQ,GACjB,IAhDA3B,QAAQC,MAAM,oCAAqCkB,EAkDvD,CAEO,SAASmB,EAAUpB,EAAaC,GACZ,IAArBtB,EAAU0C,QAKdzC,GAAoB,EACpBoB,EAAYmB,UAAY,GAExBxC,EAAU2C,SAAQ,CAAC3B,EAAMtE,KAEvBsE,EAAKE,KAAK0B,SAASC,UACnB7B,EAAKE,KAAK4B,gBAAgBD,UAG1B,MAAME,EAAS,EAAoB,EAAhB/E,KAAKC,SAClB+E,EAAS,GAAa,EAARtG,EAGpBsE,EAAKE,KAAKpE,SAAS0D,IAAIuC,EAAQC,EAFhB,GAGfhC,EAAKC,KAAKnE,SAASmG,KAAKjC,EAAKE,KAAKpE,UAElCqD,QAAQoB,IAAI,QAADlD,OACD3B,EAAQ,EAAC,yBAAA2B,OAAwB0E,EAAM,MAAA1E,OAAK2E,EAAM,MAAA3E,OAN7C,EAMwD,MAIvE2C,EAAKC,KAAKiC,SAAS1C,IACjBxC,KAAKmE,GAAKnE,KAAKC,SAAW,EAC1BD,KAAKmE,GAAKnE,KAAKC,SAAW,EAC1BD,KAAKmE,GAAKnE,KAAKC,SAAW,GAE5B+C,EAAKE,KAAKS,WAAWsB,KAAKjC,EAAKC,KAAKU,YAGpC,MAAMwB,EAAQ,GAAK,GAAKnF,KAAKC,SACvBmF,EAAkBpF,KAAKC,SAAW,GAAM,GAAK,EAC7CoF,EAAWD,EAAkBD,EAC7BG,EAAmB,EAARH,EACXI,EAAWH,EAAkBD,EAEnCnC,EAAKE,KAAKsC,aACR,IAAI5C,IAAYyC,EAAUC,EAAUC,GACpC,IAAI3C,IAAY,EAAG,EAAG,IAGxBT,QAAQoB,IAAI,sBAADlD,OAAuBgF,EAAQ,MAAAhF,OAAKiF,EAAQ,MAAAjF,OAAKkF,EAAQ,MAGpE,MAAME,EAAW,IAAMzF,KAAKC,SAAW,IACjCyF,EAAW,IAAM1F,KAAKC,SAAW,IACjC0F,EAAW,IAAM3F,KAAKC,SAAW,IAEvC+C,EAAKE,KAAK4B,gBAAgBtC,IAAIiD,EAAUC,EAAUC,GAElDxD,QAAQoB,IAAI,sBAADlD,OAAuBoF,EAAQ,MAAApF,OAAKqF,EAAQ,MAAArF,OAAKsF,EAAQ,MAEpE3C,EAAKE,KAAKO,YAAa,EACvBL,EAAcJ,EAAMK,EAAaC,EAAe,KAxDhDnB,QAAQC,MAAM,oBA0DlB,CC7JO,SAASwD,IAAyD,IAApCC,EAAWC,UAAApB,OAAA,QAAAH,IAAAuB,UAAA,GAAAA,UAAA,GAAG,UAAWC,EAAQD,UAAApB,OAAA,EAAAoB,UAAA,QAAAvB,EACpE,GAAwB,oBAAbwB,EAET,YADA5D,QAAQC,MAAM,uDAID,IAAI4D,KACZC,KACL,uBACCC,IACC,MAAMC,EAAaD,EAAK/E,MAGlBiF,EAAW,IAAIC,IAA2B,CAAEtH,MAAO8G,IAEzDM,EAAWG,UAAUC,IACfA,EAAKC,SACPD,EAAK9D,YAAa,EAClB8D,EAAKH,SAAWA,EAClB,IAIFjE,QAAQoB,IAAI,6BAA8B4C,GAE1CJ,EAASI,EAAW,QAEtB5B,GACCnC,IACCD,QAAQC,MAAM,oCAAqCA,EAAM,GAG/D,CCxCO,SAASqE,EAAOzE,GAChBb,GAAUC,GAAWC,GAI1BS,EAAa4E,YACb1E,EAAU2C,SAAS3B,IACjBA,EAAKC,KAAKnE,SAASmG,KAAKjC,EAAKE,KAAKpE,UAClCkE,EAAKC,KAAKU,WAAWsB,KAAKjC,EAAKE,KAAKS,WAAW,IAGjDrC,EAASqF,SACTtF,EAASoF,OAAOtF,EAAOC,GACvBwF,uBAAsB,IAAMH,EAAOzE,MAXjCG,QAAQC,MAAM,6DAYlB,CCjBO,MAAMyE,EAET,CAQFhG,IAAK,CAAEyD,EAAG,EAAGD,EAAG,IAChBvD,KAAM,CAAEwD,EAAG,GAAID,EAAG,IAClBtD,KAAM,CAAEuD,EAAG,GAAID,GAAI,IACnBrD,MAAO,CAAEsD,EAAG,EAAGD,GAAI,IACnBpD,MAAO,CAAEqD,GAAI,GAAID,GAAI,IACrBnD,MAAO,CAAEoD,GAAI,GAAID,EAAG,KAGTyC,EAAgE,CAC3E,EAAG,CAAExC,EAAG,EAAGD,EAAG,IACd,EAAG,CAAEC,EAAG,GAAID,EAAG,IACf,EAAG,CAAEC,EAAG,GAAID,GAAI,IAChB,EAAG,CAAEC,EAAG,EAAGD,GAAI,IACf,EAAG,CAAEC,GAAI,GAAID,GAAI,IACjB,EAAG,CAAEC,GAAI,GAAID,EAAG,IAChB,EAAG,CAAEC,EAAG,EAAGD,GAAI,IACf,EAAG,CAAEC,EAAG,EAAGD,GAAI,IACf,EAAG,CAAEC,EAAG,EAAGD,GAAI,KACf,EAAG,CAAEC,EAAG,EAAGD,GAAI,KACf,GAAI,CAAEC,EAAG,EAAGD,GAAI,KAChB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,IAAKD,GAAI,IACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,IACnB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,GAAI,IAAKD,EAAG,IAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,IAClB,GAAI,CAAEC,EAAG,EAAGD,EAAG,IACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,IACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,GAAID,EAAG,IAChB,GAAI,CAAEC,EAAG,GAAID,EAAG,IAChB,GAAI,CAAEC,EAAG,GAAID,EAAG,IAChB,GAAI,CAAEC,EAAG,IAAKD,EAAG,IACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,IACjB,GAAI,CAAEC,EAAG,GAAID,GAAI,IACjB,GAAI,CAAEC,EAAG,GAAID,GAAI,IACjB,GAAI,CAAEC,EAAG,GAAID,GAAI,IACjB,GAAI,CAAEC,EAAG,IAAKD,GAAI,IAClB,GAAI,CAAEC,EAAG,IAAKD,GAAI,IAClB,GAAI,CAAEC,EAAG,EAAGD,GAAI,KAChB,GAAI,CAAEC,GAAI,GAAID,GAAI,KAClB,GAAI,CAAEC,GAAI,GAAID,GAAI,KAClB,GAAI,CAAEC,GAAI,IAAKD,GAAI,KACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,KACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,KACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,IACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,IACnB,GAAI,CAAEC,GAAI,IAAKD,EAAG,IAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,IAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,KAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,KAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,KAClB,GAAI,CAAEC,GAAI,GAAID,EAAG,KACjB,GAAI,CAAEC,GAAI,GAAID,EAAG,KACjB,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,GAAID,EAAG,KAChB,GAAI,CAAEC,EAAG,GAAID,EAAG,KAChB,GAAI,CAAEC,EAAG,IAAKD,EAAG,KACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,KACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,KACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,IACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,IACjB,GAAI,CAAEC,EAAG,IAAKD,GAAI,IAClB,GAAI,CAAEC,EAAG,IAAKD,GAAI,IAClB,GAAI,CAAEC,EAAG,IAAKD,GAAI,KAClB,GAAI,CAAEC,EAAG,IAAKD,GAAI,KAClB,GAAI,CAAEC,EAAG,IAAKD,GAAI,KAClB,GAAI,CAAEC,EAAG,GAAID,GAAI,KACjB,GAAI,CAAEC,EAAG,GAAID,GAAI,KACjB,GAAI,CAAEC,EAAG,EAAGD,GAAI,KAChB,GAAI,CAAEC,EAAG,EAAGD,GAAI,KAChB,GAAI,CAAEC,EAAG,EAAGD,GAAI,KAChB,GAAI,CAAEC,EAAG,EAAGD,GAAI,KAChB,GAAI,CAAEC,EAAG,EAAGD,GAAI,IAChB,GAAI,CAAEC,EAAG,EAAGD,GAAI,IAChB,GAAI,CAAEC,EAAG,EAAGD,GAAI,IAChB,GAAI,CAAEC,GAAI,IAAKD,GAAI,KACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,IACnB,GAAI,CAAEC,GAAI,IAAKD,GAAI,IACnB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,GAAID,GAAI,IAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,KAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,IAClB,GAAI,CAAEC,GAAI,IAAKD,EAAG,IAClB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,GAAI,GAAID,EAAG,IACjB,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,KACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,IACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,IACf,GAAI,CAAEC,EAAG,EAAGD,EAAG,IACf,GAAI,CAAEC,EAAG,IAAKD,EAAG,KACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,IACjB,GAAI,CAAEC,EAAG,IAAKD,EAAG,IACjB,GAAI,CAAEC,EAAG,GAAID,EAAG,IAChB,GAAI,CAAEC,EAAG,GAAID,EAAG,IAChB,GAAI,CAAEC,EAAG,GAAID,EAAG,IAChB,IAAK,CAAEC,EAAG,GAAID,EAAG,IACjB,IAAK,CAAEC,GAAI,IAAKD,EAAG,KACnB,IAAK,CAAEC,GAAI,IAAKD,EAAG,IACnB,IAAK,CAAEC,GAAI,IAAKD,EAAG,IACnB,IAAK,CAAEC,GAAI,GAAID,EAAG,IAClB,IAAK,CAAEC,GAAI,GAAID,EAAG,IAClB,IAAK,CAAEC,GAAI,GAAID,EAAG,IAClB,IAAK,CAAEC,GAAI,GAAID,EAAG,KCtHP0C,EAAiBA,CAC5BC,EACA3D,EACA4D,EACA3D,KAEAnB,QAAQoB,IAAI,+BACZ,MAAMzB,ELXD,WACL,MAAMoF,EAAgB,IAAItE,IAAgB,iBACpCuE,EAAe,IAAIvE,IAAgB,gBAEzCd,EAAe,IAAIc,IAAa,CAC9Ba,YAAY,EACZ2D,QAAS,IAAIxE,IAAY,GAAI,IAAK,KAGpC,MAAMyE,EAAkB,IAAIzE,IAC1BsE,EACAC,EACA,CACEG,SAAU,GACVC,YAAa,KAQjB,OAJAzF,EAAa0F,mBAAmBH,GAChCvF,EAAa2F,uBAAyBJ,EAEtClF,QAAQoB,IAAI,8BACLzB,CACT,CKZuB4F,INVhB,SAAmBV,GACxB7E,QAAQoB,IAAI,kCAAmCyD,GAC/C3F,EAAW,IAAIgF,KAAoB,CACjCsB,OAAO,EACPC,WAAW,EACXC,OAAQb,IAEV3F,EAASyG,UAAUC,SAAU,EAC7B1G,EAASyG,UAAUrI,KAAO4G,IAC1BhF,EAASQ,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3CN,EAAS2G,cAAcvG,OAAOwG,kBAE9B9G,EAAQ,IAAIkF,KAGZlF,EAAM+G,WAAa,IAAI7B,IAAY,WAEnCjF,EAAS,IAAIiF,KACX,GACA5E,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAEFP,EAAOtC,SAAS0D,IAAI,EAAG,IAAK,KAC5BpB,EAAO+G,OAAO,IAAI9B,KAAc,EAAG,EAAG,IAEtC/E,EAAW,IAAI8G,IAAchH,EAAQC,EAASgH,YAC9C/G,EAASgH,eAAgB,EACzBhH,EAASiH,cAAgB,IACzBjH,EAASkH,YAAc,GACvBlH,EAASmH,YAAc,IACvBnH,EAAShC,OAAOkD,IAAI,EAAG,EAAG,GAG1B,MAAMkG,EAAe,IAAIrC,IAAmB,SAAU,IACtDlF,EAAMuB,IAAIgG,GAGV,MAAMC,EAAmB,IAAItC,IAAuB,SAAU,IAC9DsC,EAAiB7J,SAAS0D,IAAI,IAAK,IAAK,KACxCmG,EAAiBlG,YAAa,EAC9BkG,EAAiBC,OAAOC,QAAQC,MAAQ,KACxCH,EAAiBC,OAAOC,QAAQE,OAAS,KACzC5H,EAAMuB,IAAIiG,GAGV,MAAMK,EAAW,IAAI3C,KAAiB,SAAU,GAChD2C,EAASlK,SAAS0D,IAAI,GAAI,IAAK,GAC/BwG,EAASvG,YAAa,EACtBuG,EAASJ,OAAOC,QAAQC,MAAQ,KAChCE,EAASJ,OAAOC,QAAQE,OAAS,KACjCC,EAASJ,OAAOxH,OAAO6H,KAAO,EAC9BD,EAASJ,OAAOxH,OAAO8H,IAAM,IAC7B/H,EAAMuB,IAAIsG,GAEVzH,IACAE,OAAO+B,iBAAiB,SAAUjC,EACpC,CM9CE4H,CAAUnC,GACV7E,QAAQoB,IAAI,sBAGZpB,QAAQoB,IAAI,mBCfP,SAAqBpC,EAAOW,GACjCK,QAAQoB,IAAI,gCAGZ,MAAM2D,EAAgB,IAAIb,IAA2B,CACnD+C,aAAa,EACbC,QAAS,IAKLC,EAAQ,IAAIjD,IAChB,IAAIA,KAAoB,IAAM,KAC9Ba,GAEFoC,EAAMC,eAAgB,EACtBD,EAAMxK,SAAS0K,GAAK,EACpBF,EAAMpE,SAASZ,GAAKtE,KAAKmE,GAAK,EAC9BhD,EAAMuB,IAAI4G,GACVnH,QAAQoB,IAAI,4BAA6B+F,GAGzC,MAAMG,EAAY,IAAI7G,IAAY,CAChCnD,KAAMmD,IAAY8G,OAClB5G,MAAO,IAAIF,MAEb6G,EAAU9F,WAAWgG,cAAc3J,KAAKmE,GAAK,EAAG,EAAG,GACnDsF,EAAU3K,SAAS0D,IAAI,EAAG,EAAG,GAC7BV,EAAaiB,QAAQ0G,GACrBtH,QAAQoB,IAAI,sCAGG,IAAIqG,KACZ3D,KACL,+BACC4D,IACC1H,QAAQoB,IAAI,4BAEZ,MAAMuG,EAAQD,EAAKC,MACbC,EAAQ,IAAI1D,IAGlByD,EAAMnF,SAASqF,IACb,MAAM5D,EAAW,IAAIC,IAAwB,CAC3CtH,MAAO,IAAIsH,IAAY2D,EAAKC,SAASC,MAAM3L,MAAQ,WACnD8K,QAASW,EAAKC,SAASC,MAAMC,aAAe,EAC5Cf,aAAa,EACbgB,KAAM/D,IACNgE,YAAY,IAICT,IAAUU,aAAaN,GAC/BrF,SAAS7B,IACd,MAAMyH,EAAW,IAAIlE,KAAoBvD,GACnCG,EAAO,IAAIoD,IAAWkE,EAAUnE,GACtC2D,EAAMrH,IAAIO,EAAK,GACf,IAIJ8G,EAAMxH,MAAMC,IAAI,IAAM,IAAM,KAC5B,MAAMgI,GAAc,IAAInE,KAAaoE,cAAcV,GAC7CW,EAAY,IAAIrE,KACtBmE,EAAYG,UAAUD,GAEtBX,EAAMjL,SAAS0D,KAAKkI,EAAUpG,EAAG,GAAIoG,EAAUlB,GAC/CO,EAAM7E,SAASZ,EAAItE,KAAKmE,GAAK,EAC7BhD,EAAMuB,IAAIqH,GAEV5H,QAAQoB,IAAI,kCAAkC,IAE/CqH,IACCzI,QAAQoB,IAAI,GAADlD,OAAKuK,EAAIC,OAASD,EAAIE,MAAS,IAAG,YAAW,IAEzD1I,IACCD,QAAQC,MAAM,qBAAsBA,EAAM,GAGhD,CD/DE2I,CAAY5J,EAAOW,GAEnB,MAAME,EAAY,GJfb,IAAuB+D,IIiBd,KACZ5D,QAAQoB,IAAI,sBACZ,IAAK,IAAIhE,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMyD,EAAOd,EAAWf,EAAOW,GAC3BkB,GACFhB,EAAUmB,KAAKH,EAEnB,CACAb,QAAQoB,IAAI,4BAA6BvB,GAEzCiF,EAAQzD,iBAAiB,SAAS,KAChCrB,QAAQoB,IAAI,wBACRvB,EAAU0C,OAAS,EACrBD,EAAUpB,EAAaC,GAEvBnB,QAAQC,MAAM,6BAChB,IAGFqE,EAAOzE,GACPG,QAAQoB,IAAI,qBAAqB,GJpCpB,IAAIyC,KACZC,KACL,4BACCC,IACCnE,EAAYmE,EAAK/E,MACjBY,EAAUuE,UAAUC,IACdA,EAAKC,SACPD,EAAK9D,YAAa,EACpB,IAEFN,QAAQoB,IAAI,qBAAsBxB,GAClCgE,EAAShE,EAAU,QAErBwC,GACCnC,IACCD,QAAQC,MAAM,4BAA6BA,EAAM,IIwBrDX,OAAO+B,iBAAiB,SAAUjC,EAAgB,EE/C7C,MAWMyJ,EAAqD,CAChE,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,YACH,EAAG,+BACH,EAAG,wBACH,EAAG,kBACH,EAAG,aACH,GAAI,qBACJ,GAAI,aACJ,GAAI,uBACJ,GAAI,wBACJ,GAAI,qBACJ,GAAI,kBACJ,GAAI,qBACJ,GAAI,+BACJ,GAAI,uBACJ,GAAI,kBACJ,GAAI,wBACJ,GAAI,kBACJ,GAAI,aACJ,GAAI,+BACJ,GAAI,wBACJ,GAAI,uBACJ,GAAI,wBACJ,GAAI,qBACJ,GAAI,aACJ,GAAI,uBACJ,GAAI,+BACJ,GAAI,uBACJ,GAAI,kBACJ,GAAI,qBACJ,GAAI,+BACJ,GAAI,aACJ,GAAI,kBACJ,GAAI,WACJ,GAAI,wBACJ,GAAI,kBACJ,GAAI,WACJ,GAAI,wBACJ,GAAI,WACJ,GAAI,aACJ,GAAI,qBACJ,GAAI,WACJ,GAAI,uBACJ,GAAI,WACJ,GAAI,uBACJ,GAAI,+BACJ,GAAI,WACJ,GAAI,+BACJ,GAAI,WACJ,GAAI,kBACJ,GAAI,wBACJ,GAAI,WACJ,GAAI,aACJ,GAAI,WACJ,GAAI,qBACJ,GAAI,aACJ,GAAI,WACJ,GAAI,qBACJ,GAAI,WACJ,GAAI,+BACJ,GAAI,uBACJ,GAAI,WACJ,GAAI,kBACJ,GAAI,qBACJ,GAAI,aACJ,GAAI,kBACJ,GAAI,wBACJ,GAAI,+BACJ,GAAI,WACJ,GAAI,wBACJ,GAAI,kBACJ,GAAI,qBACJ,GAAI,wBACJ,GAAI,uBACJ,GAAI,aACJ,GAAI,WACJ,GAAI,qBACJ,GAAI,aACJ,GAAI,+BACJ,GAAI,qBACJ,GAAI,kBACJ,GAAI,uBACJ,GAAI,WACJ,GAAI,+BACJ,GAAI,uBACJ,GAAI,wBACJ,GAAI,+BACJ,GAAI,aACJ,GAAI,kBACJ,GAAI,WACJ,GAAI,aACJ,GAAI,+BACJ,GAAI,uBACJ,GAAI,aACJ,GAAI,qBACJ,GAAI,wBACJ,IAAK,WACL,IAAK,uBACL,IAAK,wBACL,IAAK,kBACL,IAAK,uBACL,IAAK,+BACL,IAAK,qBACL,IAAK,YCjHMC,EAAeA,CAC1BhN,EACAC,EACAJ,EACAoN,EACAC,KAEA,MAAMC,EAAiBC,iBAAO,GACxBC,EAAqBD,iBACzBpN,EAAQsN,QAAO,CAACC,EAAUhM,KACxBgM,EAAIhM,EAAOT,OAAS,EACbyM,IACN,CAAC,IAEAC,EAAcJ,iBAClBpN,EAAQsN,QAAO,CAACC,EAAUhM,KACxBgM,EAAIhM,EAAOT,OAAS,EACbyM,IACN,CAAC,KAGCE,EAAoBC,GAAyB3N,mBAAS,IACtD4N,EAAcC,GAAmB7N,oBAAS,IAC1Ca,EAAUiN,GAAe9N,mBAAwB,OACjD+N,EAAQC,GAAahO,mBAAwB,OAC7CiO,EAAcC,GAAmBlO,oBAAS,GAC3CmO,EAA2Bd,iBAAsC,CAAC,IACjEe,EAAYC,GAAiBrO,mBAAS,IACtCsO,EAAiBC,GAAsBvO,mBAAoCsN,EAAmBkB,UAC9FC,EAAyBC,GAA8B1O,mBAAwB,MAgDtFK,qBAAU,KACR,MAAMsO,EAA8C,CAAC,EAC/CC,EAAoD,CAAC,EAC3D3O,EAAQ0G,SAASnF,IACfmN,EAAiBnN,EAAOT,OAAS,EACjC6N,EAAkBpN,EAAOb,IAAM,IAAIkO,GAAK,IAE1CN,EAAmBI,GACnBR,EAAyBK,QAAUI,CAAiB,GAEnD,CAAC3O,IAEJ,MAAM6O,EAAmBA,KACvB,MAAMC,GAAmB3B,EAAeoB,QAAU,GAAKvO,EAAQyG,OAC/D0G,EAAeoB,QAAUO,EACzBpB,EAAsBoB,GACtB5K,QAAQoB,IAAI,kCAADlD,OAAyBpC,EAAQ8O,GAAiBnO,MAAO,EAmDhEoO,EAAkBA,CACtBxN,EACAyN,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAQzM,EAAapB,EAAOT,MAAMuO,eAClCC,EAAiBF,EAAMH,GACvBM,EAAc1G,EAAiByG,GAC/BE,EAAmBJ,EAAMJ,GACzBS,EAAgB5G,EAAiB2G,GAEvCtL,QAAQoB,IAAI,UAADlD,OAAWb,EAAOZ,KAAI,UAAAyB,OAASoN,EAAgB,QAAApN,OAAOkN,IACjEpL,QAAQoB,IAAI,mBAADlD,OAAoBqN,IAC/BvL,QAAQoB,IAAI,iBAADlD,OAAkBmN,IAC7BrL,QAAQoB,IAAI,gBAADlD,OAAiB8M,IAExBK,GAAehO,EAAOR,QAlEC2O,EAC3BnO,EACAkO,EACAF,EACAL,EACAC,KAEA,MAAMQ,EAAQpO,EAAOR,QACrB,IAAK4O,EAEH,YADAzL,QAAQ0L,KAAK,oBAADxN,OAAqBb,EAAOZ,KAAI,iBAI9C,MAEMkP,EAFW,IACH,GAGd,IAAI3P,EAAc,EAElB,MAAM4P,GAAUP,EAAYlJ,EAAIoJ,EAAcpJ,GALhC,GAMR0J,GAAUR,EAAYnJ,EAAIqJ,EAAcrJ,GANhC,GASRW,EAAS4I,EAAM9O,SAAS0K,EAExByE,EAAcA,KAClB,GAAI9P,GAZQ,GAYc,CACxB,MAAM+P,EAAW/P,EAbP,GAeJmG,EAAIoJ,EAAcpJ,EAAIyJ,EAAS5P,EAC/BkG,EAAIqJ,EAAcrJ,EAAI2J,EAAS7P,EAE/BgQ,EAAenO,KAAKoO,IAAIF,EAAWlO,KAAKmE,IACxCqF,EAAIxE,EAXI,GAWiBmJ,EAE/BP,EAAM9O,SAAS0D,IAAI8B,EAAGkF,EAAGnF,GAEzBlG,IACAkQ,WAAWJ,EAAaH,EAC1B,MACEF,EAAM9O,SAAS0D,IAAIgL,EAAYlJ,EAAG,EAAGkJ,EAAYnJ,GACjD+I,GACF,EAGFa,GAAa,EAsBXN,CAAqBnO,EAAQkO,EAAeF,EAAaL,EAAYC,GAErEjL,QAAQ0L,KAAK,kBAADxN,OAAmBb,EAAOZ,KAAI,qCAC5C,EAgFI0P,EAA0BC,IAC9B,MAAMC,EAAgBvQ,EAAQmN,EAAeoB,SACvCiC,EAAqBD,EAAczP,MAAMuO,cACzCoB,EAAe9N,EAAa6N,GAC5BE,EAAuBrD,EAAmBkB,QAAQiC,GAElDG,EAAoB5O,KAAK6O,IAC7BF,EAAuBJ,EACvBG,EAAahK,OAAS,GAGxB+G,EAAYe,QAAQiC,GAAsBF,EAE1CvB,EACEwB,EACAG,EACAC,GACA,GACA,KASE,GAPAtD,EAAmBkB,QAAQiC,GAAsBG,EACjDrC,GAAoBuC,IAAI,IACnBA,EACH,CAACL,GAAqBG,MAIpBA,IAAsBF,EAAahK,OAAS,EAAG,CAAC,IAADqK,EAEjD,MAAMC,GAA+D,QAAlDD,EAAA5C,EAAyBK,QAAQgC,EAAc7P,WAAG,IAAAoQ,OAAA,EAAlDA,EAAoDE,OAAQ,EAC/E,OAAID,GAAc,GAEhBhD,EAAUwC,QACVrM,QAAQoB,IAAI,gBAADlD,OAAOmO,EAAc5P,KAAI,yBAIpCuD,QAAQoB,IAAI,gBAADlD,OACHmO,EAAc5P,KAAI,yCAAAyB,OAAwC2O,EAAU,mCAE5E9C,GAAgB,GAGpB,CAGA,MAAMgD,EAAWlE,EAAwB0D,EAAaE,IAClDM,GAAyB,aAAbA,GACdhD,GAAgB,GAChB/J,QAAQoB,IAAI,kEACH2L,GACT/M,QAAQoB,IAAI,yCAADlD,OAAqC6O,IAEhDxC,EAA2BwC,GAC3BhE,EAAmBgE,EAAUX,KAE7BpM,QAAQoB,IAAI,6DACZuJ,IACF,GAEH,EAsCH,MAAO,CACL0B,cAAevQ,EAAQyN,GACvB7M,WACA+M,eACAC,kBACAsD,eAxCqBA,KACrB,MAAMX,EAAgBvQ,EAAQmN,EAAeoB,SACvCiC,EAAqBD,EAAczP,MAAMuO,cACzCoB,EAAe9N,EAAa6N,GAIlC,GAH6BnD,EAAmBkB,QAAQiC,KAG3BC,EAAahK,OAAS,EAKjD,OAJAvC,QAAQoB,IAAI,gBAADlD,OACHmO,EAAc5P,KAAI,iFAE1BsN,GAAgB,GAKlB,IAAKN,EAAc,OAEnB,MAAMvI,EAAc+L,SAASC,cAAc,iBACtChM,GAMLwI,GAAgB,GAEhBpH,EAAUpB,GAAckL,IACtBpM,QAAQoB,IAAI,gDAADlD,OAAuCkO,IAClDzC,EAAYyC,GACZD,EAAuBC,GACvBF,YAAW,IAAMxC,GAAgB,IAAO,IAAK,KAX7C1J,QAAQC,MAAM,gDAYd,EASFkM,yBACAhC,kBACAP,SACAE,eACAC,kBACAC,yBAA0BA,EAAyBK,QACnD8C,2BArUkCJ,IAClC/M,QAAQoB,IAAI,yCAADlD,OAAgC6O,IAG3C,MAAMV,EAAgBvQ,EAAQmN,EAAeoB,SACvCiC,EAAqBD,EAAczP,MAAMuO,cACzCoB,EAAe9N,EAAa6N,GAI5Bc,EAHuBjE,EAAmBkB,QAAQiC,KAGjBC,EAAahK,OAAS,EAGvD8K,EAAqBrD,EAAyBK,QAAQgC,EAAc7P,KAAO,IAAIkO,IAErFwB,YAAW,KACTnC,GAAgB,GAEZqD,GAASC,EAAmBC,IAAIP,IAClC/M,QAAQoB,IAAI,gBAADlD,OAAOmO,EAAc5P,KAAI,qBAAAyB,OAAoB6O,EAAQ,0BAChEpC,MAGAJ,EAA2BwC,GAC3BhE,EAAmBgE,GACrB,GACC,IAAI,EA4SPQ,qBA5L4BC,IAE5B,GAAIA,GAAWlD,EAAyB,CACtC,MAAM+B,EAAgBvQ,EAAQmN,EAAeoB,SACxCL,EAAyBK,QAAQgC,EAAc7P,MAClDwN,EAAyBK,QAAQgC,EAAc7P,IAAM,IAAIkO,KAE3DV,EAAyBK,QAAQgC,EAAc7P,IAAI+D,IAAI+J,GACvDtK,QAAQoB,IAAI,gBAADlD,OAAiBoM,EAAuB,iBAAApM,OAAgBmO,EAAc5P,OACjFyN,GAAcyC,GAAQA,EAAO,GAC/B,CAEApC,EAA2B,MAG3BvB,EAAawE,GAEb,MAAMnB,EAAgBvQ,EAAQmN,EAAeoB,SACvCiC,EAAqBD,EAAczP,MAAMuO,cACzCqB,EAAuBrD,EAAmBkB,QAAQiC,GAExD,IAAIG,EAAoBD,EACxB,IAAKgB,EAAS,CACZ,MAAMC,EAAWnE,EAAYe,QAAQiC,IAAuB,EAC5DG,EAAoB5O,KAAK6P,IAAIlB,EAAuBiB,EAAU,EAChE,CAEA5C,EACEwB,EACAG,EACAC,GACCe,GACD,KA7IyBG,IAAC/Q,EAAegR,EAAfhR,EA8IH0P,EA9IkBsB,EA8IEnB,EA7I7CtD,EAAmBkB,QAAQzN,GAASgR,EACpCxD,EAAmB,IAAKjB,EAAmBkB,UA6IvCM,GAAkB,GAErB,EAyJDkD,oBArS2BC,IAC3B9D,EAAyBK,QAAQyD,GAAY,IAAIpD,IAAI,CACnD,+BACA,wBACA,kBACA,aACA,qBACA,yBAEFR,GAAcyC,GAAQA,EAAO,GAAE,EA6R/BoB,cAvJqBC,IACrBhO,QAAQoB,IAAI,wEAEZ,MAAMiL,EAAgBvQ,EAAQmN,EAAeoB,SACvCiC,EAAqBD,EAAczP,MAAMuO,cAEzCqB,EAAuBrD,EAAmBkB,QAAQiC,GAGlDG,EAAoB5O,KAAK6P,IAAIlB,EAAuBwB,EAAa,GAEvEhO,QAAQoB,IAAI,iDAADlD,OACWmO,EAAc5P,KAAI,iDAAAyB,OACTsO,EAAoB,yCAAAtO,OAC5B8P,EAAW,oDAAA9P,OACPuO,EAAiB,WAG5C5B,EACEwB,EACAG,EACAC,GACA,GACA,KACEzM,QAAQoB,IAAI,uBAADlD,OAASmO,EAAc5P,KAAI,4BAAAyB,OAA2BuO,EAAiB,oBAGlFtD,EAAmBkB,QAAQiC,GAAsBG,EACjDrC,GAAoBuC,IAAI,IACnBA,EACH,CAACL,GAAqBG,MAGxB9B,GAAkB,GAErB,EAqHF,EC5UYsD,MAzBiClT,IAAA,IAAC,QAC/Ce,EAAO,gBACPqO,EAAe,yBACfH,EAAwB,eACxBkE,GACDnT,EAAA,OACCM,cAAA,OAAKF,UAAU,eAAcC,SAC1BU,EAAQO,KAAKgB,GACZnC,eAAA,OAAqBC,UAAU,cAAaC,SAAA,CAC1CC,cAAA,KAAAD,SAAIiC,EAAOZ,OACXpB,cAAA,OAAKF,UAAU,aAAYC,SACxB4O,EAAyB3M,EAAOb,KAAOL,MAAMgS,KAAKnE,EAAyB3M,EAAOb,KAAKH,KAAI0Q,GAC1F1R,cAAA,QAEEF,UAAU,kBACV4M,MAAO,CAAEqG,gBAAiBF,EAAenB,IACzCsB,MAAOtB,GAHFA,SALH1P,EAAOb,OAcf,ECuBO8R,MA9C+CvT,IAKvD,IALwD,eAC7DmT,EAAc,aACdK,EAAY,kBACZC,EAAiB,qBACjBC,GACD1T,EACC,MAAM2T,EAAwBA,CAAC3B,EAAkB4B,KAC/C,MAAMC,EAAoBH,EAAqB1B,GAAU8B,QACtDC,GAAMA,EAAEH,aAAeA,IAEpBI,EAA4BH,EAAkBC,QAAQC,IAAC,IAAAE,EAAA,OACb,QADaA,EAC3DR,EAAkB,GAADtQ,OAAI6O,EAAQ,KAAA7O,OAAIyQ,WAAa,IAAAK,OAAA,EAA9CA,EAAgD1B,IAAI2B,OAAOH,EAAEtS,IAAI,IAEnE,OACEnB,cAAA,OAAKF,UAAU,mBAAkBC,SAC9BwT,EAAkBvS,KAAI,CAACyS,EAAGvS,IACzBlB,cAAA,QAEEF,UAAS,mBAAA+C,OACP6Q,EAA0BG,SAASJ,GAAK,WAAa,IAEvD/G,MAAO,CAAEqG,gBAAiBF,EAAenB,KAJpCxQ,MAOL,EAIV,OACElB,cAAA,OAAKF,UAAU,0BAA0B,oBAAkB,2BAA0BC,SACnFC,cAAA,OAAKF,UAAU,yBAAwBC,SACpC+T,OAAOC,KAAKlB,GAAgB7R,KAAK0Q,GAChC7R,eAAA,OAAoBC,UAAU,WAAUC,SAAA,CACtCC,cAAA,MAAAD,SAAK2R,IACJwB,EAAalS,KAAKsS,GACjBtT,cAAA,OAAsBF,UAAU,aAAYC,SACzCsT,EAAsB3B,EAAU4B,IADzBA,OAHJ5B,QAUV,E,YChDV,MAAMsC,EAAa,CACjB,+BACA,wBACA,kBACA,aACA,qBACA,wBAmDaC,MA5CqCvU,IAAyB,IAAxB,eAAEwU,GAAgBxU,EACrE,MAAOyU,EAAUC,GAAe5T,oBAAS,IAClC6T,EAAkBC,GAAuB9T,mBAAS,KAClDkH,EAAU6M,GAAe/T,mBAAS,IAClCgU,EAAYC,GAAiBjU,mBAAS,GAsB7C,OACER,cAAA,OAAKF,UAAU,iBAAiB,oBAAkB,2BAA0BC,SAC1EF,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BF,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BC,cAAA,OAAKF,UAAS,SAAA+C,OAAWsR,EAAW,WAAa,IAAMzH,MAAO,CAAEgI,UAAU,UAAD7R,OAAY6E,EAAQ,WAC7F1H,cAAA,OAAKF,UAAU,oBAEjBE,cAAA,UAAQC,QA3BI0U,KAChBP,GAAY,GACZ,MAAMQ,EAAcpS,KAAKsJ,MAAsB,IAAhBtJ,KAAKC,UAAkB,KACtD8R,EAAYK,GAEZ/D,YAAW,KACTuD,GAAY,GACZ,MAAMI,EAAaI,EAAc,IACjCH,EAAcD,GACd,MAAMK,EAAgBrS,KAAKsJ,OAAO,IAAM0I,GAAc,IAChDH,EAAmBL,EAAWa,GACpCP,EAAoBD,GAGpBxD,YAAW,KACTqD,EAAeG,EAAiB,GAC/B,IAAK,GACP,IAAK,EAUwB3R,SAAUyR,EAAU,oBAAkB,kBAAiBpU,SAChFoU,EAAW,cAAgB,mBAE7BE,IAAqBF,GACpBtU,eAAA,KAAAE,SAAA,CAAG,sBAAoBsU,SAGvB,ECvCKS,MATiCpV,IAAiB,IAAhB,OAAE6O,GAAQ7O,EACzD,OACIG,eAAA,OAAKC,UAAU,0BAA0B,oBAAkB,iDAAgDC,SAAA,CACzGC,cAAA,MAAAD,SAAI,qBACJF,eAAA,KAAAE,SAAA,CAAG,UAAQwO,EAAOnN,KAAK,0BACnB,ECoJG2T,MA3ImCrV,IAc3C,IAd4C,cACjDsR,EAAa,SACb3P,EAAQ,aACR+M,EAAY,gBACZC,EAAe,eACfsD,EAAc,WACdqD,EAAU,SACVC,EAAQ,aACRxG,EAAY,2BACZqD,EAA0B,iBAC1BoD,EAAgB,yBAChBC,EAAwB,oBACxB3C,EAAmB,OACnBjE,GACD7O,EACC,MAAO0V,EAAgBC,GAAqB7U,oBAAS,IAC9C8U,EAAQC,GAAa/U,mBAAS,IAC9BgV,EAAQC,GAAajV,mBAAS,GAS/ByQ,EAAqBD,EARuB,CAChD3N,IAAK,UACLI,MAAO,UACPD,MAAO,UACPF,KAAM,UACNC,KAAM,UACNG,MAAO,WAEiDsN,EAAczP,OAAS,UAC3EmU,EAAqB,CACzBhL,WAAW,qGAAD7H,OAINoO,EAAkB,4GAUxBpQ,qBAAU,KACHmU,EAAWhG,SACdrK,QAAQC,MAAM,sCAChB,GACC,CAACoQ,IAiBJ,OACEnV,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAE3BwO,GAAUvO,cAAC8U,EAAW,CAACvG,OAAQA,IAChCvO,cAAA,OAAKF,UAAU,iBAAiB4M,MAAOgJ,EAAoB,oBAAkB,yBAAwB3V,SACnGF,eAAA,KACEC,UAAU,cACV4M,MAA+B,UAAxBsE,EAAczP,MAAoB,CAAEA,MAAO,WAAa,CAAEA,MAAO,WAAWxB,SAAA,CAClF,mBAAiBiR,EAAc5P,WAGlCmN,GAAUH,GACVpO,cAAA,UACEF,UAAU,WACV6V,IAAKX,EACL/U,QAASA,KACP0R,IACAd,YAAW,IAAMxC,GAAgB,IAAO,IAAI,IAKpC,OAAbhN,GAAqBxB,eAAA,KAAAE,SAAA,CAAG,cAAYsB,KA4CpCoN,GACC5O,eAAA+V,WAAA,CAAA7V,SAAA,CACG4E,QAAQoB,IAAI,0BACb/F,cAACiU,EAAa,CAACC,eAAgBpC,SAG/B,E,MC3IV,MAAMe,EAA4C,CAChD,+BAAgC,UAChC,wBAAyB,UACzB,kBAAmB,UACnB,aAAc,UACd,qBAAsB,UACtB,uBAAwB,WAsCXgD,MAnCmCnW,IAAuC,IAAtC,SAAEoW,EAAQ,SAAEC,EAAQ,SAAEC,GAAUtW,EACjF,MAAOuW,EAAgBC,GAAqB1V,mBAAwB,MAQ9D2V,EAActD,EAAeiD,EAASpE,WAAa,UACnD0E,EAAkC,0BAAtBN,EAASpE,SAAuC,QAAU,QAE5E,OACE7R,eAAA,OAAKC,UAAU,gBAAgB,oBAAkB,8CAA6CC,SAAA,CAC5FC,cAAA,MAAAD,SAAK+V,EAASpE,WACd1R,cAAA,KAAAD,SAAI+V,EAASA,WACb9V,cAAA,OAAKF,UAAU,UAASC,SACrB+V,EAASO,QAAQrV,KAAI,CAACsV,EAAQpV,IAC7BlB,cAAA,UAEEF,UAAS,UAAA+C,OAAYoT,IAAmBK,EAAS,WAAa,IAC9DrW,QAASA,IAlBQqW,KACzBJ,EAAkBI,GAClB,MAAMC,EAAYD,IAAWR,EAASU,OACtC3F,YAAW,IAAMkF,EAASQ,IAAY,IAAK,EAepBE,CAAkBH,GACjC5T,WAAYuT,EACZ,oBAAkB,iBAClBvJ,MAAO,CAAEqG,gBAAiBoD,EAAa5U,MAAO6U,GAAYrW,SAEzDuW,GAPIpV,OAWXrB,eAAA,KAAAE,SAAA,CAAG,cAAYiW,EAAS,gBACpB,EC/BKU,MAlBqChX,IAI7C,IAJ8C,SACnDoW,EAAQ,SACRC,EAAQ,SACRC,GACDtW,EAIC,OACEM,cAAA,OAAKF,UAAU,iBAAgBC,SAC7BC,cAAA,OAAKF,UAAU,kBAAiBC,SAChCC,cAAC6V,EAAY,CAACC,SAAUA,EAAUC,SANhB5D,IACpB4D,EAAS5D,EAAS,EAAE,EAKwC6D,SAAUA,OAGhE,ECdH,MAYMW,EAAyB,CACpC,CACExV,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,gCACVO,QAAS,CACP,kDACA,oDACA,yCACA,iCAEFG,OAAQ,kDACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,gDACVO,QAAS,CAAC,OAAQ,WAAY,SAAU,QACxCG,OAAQ,WACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,wBACVO,QAAS,CACP,8CACA,2BACA,yBACA,0BAEFG,OAAQ,8CACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,2CACVO,QAAS,CACP,0CACA,6BACA,mCACA,sCAEFG,OAAQ,0CACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,8CACVO,QAAS,CACP,6DACA,4CACA,wEACA,kCAEFG,OAAQ,6DACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,gEACVO,QAAS,CAAC,OAAQ,WAAY,SAAU,QACxCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,yBACVO,QAAS,CACP,6DACA,kCACA,2BACA,yBAEFG,OAAQ,6DACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,qDACVO,QAAS,CACP,uCACA,wCACA,0BACA,oBAEFG,OAAQ,uCACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,+BACVoE,SAAU,mEACVO,QAAS,CAAC,OAAQ,WAAY,OAAQ,UACtCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,iDACVO,QAAS,CACP,sBACA,oBACA,uBACA,wBAEFG,OAAQ,sBACRlD,WAAY,QAEd,CACAnS,GAAI,GACFuQ,SAAU,+BACVoE,SAAU,kEACVO,QAAS,CACP,iDACA,uBACA,yBACA,mCAEFG,OAAQ,iDACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,oDACVO,QAAS,CACP,+BACA,0BACA,mBACA,gCAEFG,OAAQ,+BACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,+DACVO,QAAS,CAAC,OAAQ,WAAY,aAAc,UAC5CG,OAAQ,aACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,yDACVO,QAAS,CACP,kDACA,uCACA,iCACA,oBAEFG,OAAQ,kDACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,yDACVO,QAAS,CACP,iDACA,mCACA,wCACA,6BAEFG,OAAQ,iDACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,mEACVO,QAAS,CAAC,OAAQ,WAAY,OAAQ,UACtCG,OAAQ,WACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,4BACVO,QAAS,CACP,qDACA,oDACA,8BACA,wDAEFG,OAAQ,qDACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,kDACVO,QAAS,CACP,2BACA,qCACA,uCACA,4BAEFG,OAAQ,2BACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,2DACVO,QAAS,CACP,+BACA,+BACA,iDACA,qCAEFG,OAAQ,+BACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,4BACVO,QAAS,CACP,qDACA,oEACA,wCACA,iCAEFG,OAAQ,qDACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,2DACVO,QAAS,CACP,0BACA,+BACA,uCACA,kCAEFG,OAAQ,0BACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,+DACVO,QAAS,CAAC,SAAU,aAAc,eAAgB,QAClDG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,+CACVO,QAAS,CACP,6CACA,+BACA,iCACA,uCAEFG,OAAQ,6CACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,sEACVO,QAAS,CACP,sDACA,iDACA,mCACA,uCAEFG,OAAQ,sDACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,iDACVO,QAAS,CACP,uCACA,+BACA,iCACA,uCAEFG,OAAQ,uCACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,4BACVO,QAAS,CACP,gCACA,0CACA,mCACA,6CAEFG,OAAQ,gCACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,2DACVO,QAAS,CACP,uGACA,+BACA,iCACA,wCAEFG,OAAQ,uGACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,kDACVO,QAAS,CACP,uDACA,+BACA,iCACA,uCAEFG,OAAQ,uDACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,6EACVO,QAAS,CAAC,aAAc,SAAU,aAAc,QAChDG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,+BACVoE,SAAU,6CACVO,QAAS,CACP,wCACA,+BACA,uCACA,kCAEFG,OAAQ,wCACRlD,WAAY,SAKHsD,EAAmC,CAC9C,CACEzV,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,8CACVO,QAAS,CAAC,aAAc,SAAU,OAAQ,OAC1CG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,8DACVO,QAAS,CAAC,IAAK,aAAc,KAAM,QACnCG,OAAQ,IACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,6CACVO,QAAS,CAAC,OAAQ,MAAO,aAAc,UACvCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,uFACVO,QAAS,CAAC,SAAU,OAAQ,MAAO,cACnCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,+DACVO,QAAS,CAAC,OAAQ,QAAS,KAAM,OACjCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,8DACVO,QAAS,CAAC,SAAU,OAAQ,IAAK,YACjCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,0DACVO,QAAS,CAAC,QAAS,OAAQ,SAAU,MACrCG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,0EACVO,QAAS,CAAC,KAAM,cAAe,OAAQ,OACvCG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,wBACVoE,SAAU,gEACVO,QAAS,CAAC,UAAW,aAAc,OAAQ,OAC3CG,OAAQ,UACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,6EACVO,QAAS,CAAC,IAAK,aAAc,SAAU,QACvCG,OAAQ,IACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,yDACVO,QAAS,CAAC,kBAAmB,aAAc,aAAc,oBACzDG,OAAQ,mBACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,yCACVO,QAAS,CAAC,oCAAqC,wBAAyB,wBAAyB,2BACjGG,OAAQ,oCACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,yGACVO,QAAS,CAAC,QAAS,OAAQ,SAAU,OACrCG,OAAQ,QACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,wFACVO,QAAS,CAAC,OAAQ,MAAO,SAAU,QACnCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,8EACVO,QAAS,CAAC,SAAU,aAAc,KAAM,QACxCG,OAAQ,SACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,+DACVO,QAAS,CAAC,KAAM,OAAQ,SAAU,QAClCG,OAAQ,KACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,yEACVO,QAAS,CAAC,OAAQ,MAAO,QAAS,UAClCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,iEACVO,QAAS,CAAC,aAAc,OAAQ,MAAO,UACvCG,OAAQ,aACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,6EACVO,QAAS,CAAC,OAAQ,OAAQ,KAAM,SAChCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,mFACVO,QAAS,CAAC,aAAc,SAAU,OAAQ,OAC1CG,OAAQ,aACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,8EACVO,QAAS,CAAC,OAAQ,UAAW,SAAU,OACvCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,2DACVO,QAAS,CAAC,UAAW,KAAM,OAAQ,UACnCG,OAAQ,UACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,+FACVO,QAAS,CAAC,KAAM,aAAc,QAAS,QACvCG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,iEACVO,QAAS,CAAC,SAAU,SAAU,MAAO,QACrCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,oEACVO,QAAS,CAAC,SAAU,OAAQ,MAAO,cACnCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,4EACVO,QAAS,CAAC,OAAQ,MAAO,KAAM,SAC/BG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,sFACVO,QAAS,CAAC,SAAU,OAAQ,aAAc,QAC1CG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,wFACVO,QAAS,CAAC,OAAQ,aAAc,KAAM,QACtCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,2DACVO,QAAS,CAAC,aAAc,OAAQ,KAAM,UACtCG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,wBACVoE,SAAU,qFACVO,QAAS,CAAC,SAAU,OAAQ,MAAO,cACnCG,OAAQ,SACRlD,WAAY,SAKHuD,EAA6B,CACxC,CACE1V,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,4BACVO,QAAS,CAAC,4BAA6B,8BAA+B,2BAA4B,qBAClGG,OAAQ,4BACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,uDACVO,QAAS,CAAC,QAAS,mBAAoB,YAAa,cACpDG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,2BACVO,QAAS,CAAC,yBAA0B,wBAAyB,wBAAyB,yBACtFG,OAAQ,yBACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,sDACVO,QAAS,CAAC,OAAQ,YAAa,OAAQ,UACvCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,4DACVO,QAAS,CAAC,aAAc,aAAc,aAAc,cACpDG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,oDACVO,QAAS,CAAC,MAAO,SAAU,SAAU,SACrCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,+DACVO,QAAS,CAAC,MAAO,OAAQ,OAAQ,OACjCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,gDACVO,QAAS,CAAC,YAAa,YAAa,aAAc,cAClDG,OAAQ,YACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,kBACVoE,SAAU,oDACVO,QAAS,CAAC,MAAO,SAAU,cAAe,UAC1CG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,2BACVO,QAAS,CAAC,wBAAyB,uBAAwB,uBAAwB,qBACnFG,OAAQ,wBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,+EACVO,QAAS,CAAC,mBAAoB,cAAe,WAAY,aACzDG,OAAQ,mBACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,8EACVO,QAAS,CAAC,YAAa,aAAc,QAAS,gBAC9CG,OAAQ,YACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,6DACVO,QAAS,CAAC,UAAW,UAAW,UAAW,WAC3CG,OAAQ,UACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,yEACVO,QAAS,CAAC,eAAgB,mBAAoB,kBAAmB,kBACjEG,OAAQ,eACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,oEACVO,QAAS,CAAC,MAAO,MAAO,MAAO,OAC/BG,OAAQ,MACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,wDACVO,QAAS,CAAC,QAAS,QAAS,KAAM,UAClCG,OAAQ,QACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,+FACVO,QAAS,CAAC,UAAW,SAAU,SAAU,WACzCG,OAAQ,UACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,oDACVO,QAAS,CAAC,cAAe,aAAc,YAAa,kBACpDG,OAAQ,cACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,mFACVO,QAAS,CAAC,UAAW,aAAc,UAAW,WAC9CG,OAAQ,UACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,2FACVO,QAAS,CAAC,eAAgB,gBAAiB,YAAa,WACxDG,OAAQ,eACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,mEACVO,QAAS,CAAC,UAAW,WAAY,QAAS,SAC1CG,OAAQ,UACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,4FACVO,QAAS,CAAC,WAAY,QAAS,WAAY,aAC3CG,OAAQ,WACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,0DACVO,QAAS,CAAC,QAAS,SAAU,eAAgB,WAC7CG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,+EACVO,QAAS,CAAC,yBAA0B,WAAY,YAAa,YAC7DG,OAAQ,yBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,6EACVO,QAAS,CAAC,OAAQ,OAAQ,SAAU,oBACpCG,OAAQ,mBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,kDACVO,QAAS,CAAC,MAAO,MAAO,SAAU,WAClCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,+DACVO,QAAS,CAAC,cAAe,aAAc,cAAe,aACtDG,OAAQ,cACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,oEACVO,QAAS,CAAC,SAAU,UAAW,YAAa,aAC5CG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,yDACVO,QAAS,CAAC,aAAc,UAAW,QAAS,WAC5CG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,kBACVoE,SAAU,qDACVO,QAAS,CAAC,YAAa,aAAc,YAAa,aAClDG,OAAQ,YACRlD,WAAY,SAKHwD,EAAwB,CACnC,CACE3V,GAAI,EACJuQ,SAAU,aACVoE,SAAU,2BACVO,QAAS,CAAC,4BAA6B,wBAAyB,+BAAgC,2BAChGG,OAAQ,4BACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,gEACVO,QAAS,CAAC,SAAU,MAAO,WAAY,SACvCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,4DACVO,QAAS,CAAC,SAAU,SAAU,SAAU,OACxCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,8DACVO,QAAS,CAAC,SAAU,SAAU,OAAQ,SACtCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,wCACVO,QAAS,CAAC,6BAA8B,+BAAgC,+BAAgC,2BACxGG,OAAQ,6BACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,wEACVO,QAAS,CAAC,UAAW,QAAS,WAAY,eAC1CG,OAAQ,UACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,8CACVO,QAAS,CAAC,QAAS,SAAU,OAAQ,aACrCG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,kEACVO,QAAS,CAAC,cAAe,SAAU,WAAY,aAC/CG,OAAQ,cACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,aACVoE,SAAU,yCACVO,QAAS,CAAC,mCAAoC,qCAAsC,4CAA6C,mCACjIG,OAAQ,mCACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,iFACVO,QAAS,CAAC,sBAAuB,qBAAsB,oBAAqB,sBAC5EG,OAAQ,sBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,oDACVO,QAAS,CAAC,WAAY,UAAW,WAAY,cAC7CG,OAAQ,WACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,mEACVO,QAAS,CAAC,eAAgB,YAAa,YAAa,cACpDG,OAAQ,eACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,oEACVO,QAAS,CAAC,WAAY,WAAY,aAAc,WAChDG,OAAQ,WACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,iFACVO,QAAS,CAAC,QAAS,SAAU,YAAa,YAC1CG,OAAQ,QACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,iFACVO,QAAS,CAAC,SAAU,cAAe,WAAY,SAC/CG,OAAQ,SACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,kFACVO,QAAS,CAAC,aAAc,eAAgB,eAAgB,eACxDG,OAAQ,aACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,0EACVO,QAAS,CAAC,WAAY,SAAU,YAAa,YAC7CG,OAAQ,WACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,oEACVO,QAAS,CAAC,cAAe,aAAc,eAAgB,gBACvDG,OAAQ,cACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,6EACVO,QAAS,CAAC,QAAS,UAAW,QAAS,eACvCG,OAAQ,QACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,mEACVO,QAAS,CAAC,SAAU,SAAU,SAAU,SACxCG,OAAQ,SACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,kDACVO,QAAS,CAAC,0CAA2C,4CAA6C,uCAAwC,kCAC1IG,OAAQ,0CACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,4DACVO,QAAS,CAAC,0BAA2B,0BAA2B,2BAA4B,iCAC5FG,OAAQ,0BACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,qFACVO,QAAS,CAAC,iBAAkB,sBAAuB,qBAAsB,yBACzEG,OAAQ,iBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,4EACVO,QAAS,CAAC,QAAS,YAAa,QAAS,cACzCG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,0EACVO,QAAS,CAAC,WAAY,SAAU,oBAAqB,YACrDG,OAAQ,WACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,gDACVO,QAAS,CAAC,cAAe,WAAY,YAAa,eAClDG,OAAQ,cACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,gFACVO,QAAS,CAAC,kBAAmB,aAAc,YAAa,cACxDG,OAAQ,kBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,qFACVO,QAAS,CAAC,QAAS,UAAW,OAAQ,SACtCG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,yFACVO,QAAS,CAAC,kBAAmB,uBAAwB,oBAAqB,gBAC1EG,OAAQ,kBACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,aACVoE,SAAU,2EACVO,QAAS,CAAC,QAAS,UAAW,WAAY,YAC1CG,OAAQ,QACRlD,WAAY,SAKHyD,EAAqB,CAChC,CACE5V,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,2BACVO,QAAS,CAAC,mBAAoB,iBAAkB,gBAAiB,4BACjEG,OAAQ,mBACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,iDACVO,QAAS,CAAC,UAAW,MAAO,SAAU,cACtCG,OAAQ,UACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,6BACVO,QAAS,CAAC,+CAAgD,6CAA8C,+CAAgD,8CACxJG,OAAQ,+CACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,0CACVO,QAAS,CAAC,MAAO,UAAW,SAAU,WACtCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,kDACVO,QAAS,CAAC,aAAc,SAAU,MAAO,aACzCG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,kCACVO,QAAS,CAAC,2BAA4B,mBAAoB,yBAA0B,mBACpFG,OAAQ,2BACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,6CACVO,QAAS,CAAC,yBAA0B,0BAA2B,sBAAuB,4BACtFG,OAAQ,yBACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,2DACVO,QAAS,CAAC,aAAc,SAAU,MAAO,WACzCG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,qBACVoE,SAAU,sEACVO,QAAS,CAAC,SAAU,OAAQ,MAAO,QACnCG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,4BACVO,QAAS,CAAC,6BAA+B,8BAA+B,0BAA2B,mCACnGG,OAAQ,6BACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,oDACVO,QAAS,CAAC,YAAa,UAAW,SAAU,UAC5CG,OAAQ,YACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,mHACVO,QAAS,CAAC,yBAA0B,yBAA0B,2BAA4B,oBAC1FG,OAAQ,yBACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,qEACVO,QAAS,CAAC,YAAa,aAAc,UAAW,WAChDG,OAAQ,YACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,6CACVO,QAAS,CAAC,0BAA2B,kBAAmB,yBAA0B,cAClFG,OAAQ,0BACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,2DACVO,QAAS,CAAC,UAAW,MAAO,SAAU,aACtCG,OAAQ,UACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,yCACVO,QAAS,CAAC,0BAA2B,0BAA2B,yBAA0B,mBAC1FG,OAAQ,0BACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,6DACVO,QAAS,CAAC,YAAa,SAAU,MAAO,UACxCG,OAAQ,YACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,qFACVO,QAAS,CAAC,OAAQ,SAAU,UAAW,aACvCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,kEACVO,QAAS,CAAC,SAAU,SAAU,MAAO,WACrCG,OAAQ,SACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,6FACVO,QAAS,CAAC,yBAA0B,yBAA0B,2BAA4B,oBAC1FG,OAAQ,yBACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,sFACVO,QAAS,CAAC,YAAa,UAAW,SAAU,UAC5CG,OAAQ,YACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,oEACVO,QAAS,CACP,uEACA,uCACA,yCACA,2CAEFG,OAAQ,uEACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,sFACVO,QAAS,CAAC,QAAS,SAAU,UAAW,cACxCG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,4DACVO,QAAS,CAAC,aAAc,SAAU,MAAO,OACzCG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,kEACVO,QAAS,CAAC,aAAc,SAAU,QAAS,aAC3CG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,wHACVO,QAAS,CAAC,SAAU,YAAa,SAAU,cAC3CG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,oFACVO,QAAS,CAAC,4CAA6C,iCAAkC,mCAAoC,0CAC7HG,OAAQ,4CACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,sDACVO,QAAS,CAAC,QAAS,aAAc,UAAW,WAC5CG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,mFACVO,QAAS,CAAC,SAAU,aAAc,YAAa,UAC/CG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,qBACVoE,SAAU,0FACVO,QAAS,CAAC,aAAc,SAAU,aAAc,WAChDG,OAAQ,aACRlD,WAAY,SAKH0D,EAAyB,CACpC,CACE7V,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,qDACVO,QAAS,CAAC,KAAM,MAAO,OAAQ,QAC/BG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,+CACVO,QAAS,CAAC,KAAM,QAAS,KAAM,MAC/BG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,kCACVO,QAAS,CAAC,uCAAwC,uBAAwB,sBAAuB,4BACjGG,OAAQ,uCACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,uCACVO,QAAS,CAAC,KAAM,OAAQ,KAAM,SAC9BG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,iDACVO,QAAS,CAAC,KAAM,OAAQ,SAAU,YAClCG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,iCACVO,QAAS,CAAC,+BAAgC,gBAAiB,eAAgB,eAC3EG,OAAQ,+BACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,mDACVO,QAAS,CAAC,QAAS,SAAU,YAAa,WAC1CG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,2DACVO,QAAS,CAAC,MAAO,OAAQ,UAAW,QACpCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,EACJuQ,SAAU,uBACVoE,SAAU,kCACVO,QAAS,CAAC,oCAAqC,kBAAmB,gBAAiB,6BACnFG,OAAQ,oCACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,2DACVO,QAAS,CAAC,OAAQ,OAAQ,SAAU,QACpCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,4DACVO,QAAS,CAAC,OAAQ,MAAO,OAAQ,UACjCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,6DACVO,QAAS,CAAC,OAAQ,MAAO,QAAS,SAClCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,oDACVO,QAAS,CAAC,QAAS,SAAU,aAAc,YAC3CG,OAAQ,QACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,2CACVO,QAAS,CAAC,OAAQ,WAAY,MAAO,OACrCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,iCACVO,QAAS,CAAC,8CAA+C,sBAAuB,2BAA4B,kBAC5GG,OAAQ,8CACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,+CACVO,QAAS,CAAC,KAAM,KAAM,UAAW,YACjCG,OAAQ,KACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,kEACVO,QAAS,CAAC,KAAM,KAAM,YAAa,YACnCG,OAAQ,KACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,kEACVO,QAAS,CAAC,WAAY,WAAY,UAAW,WAC7CG,OAAQ,WACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,8CACVO,QAAS,CAAC,OAAQ,UAAW,WAAY,OACzCG,OAAQ,OACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,mCACVO,QAAS,CAAC,uBAAwB,mBAAoB,qBAAsB,oBAC5EG,OAAQ,uBACRlD,WAAY,UAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,uDACVO,QAAS,CAAC,QAAS,SAAU,YAAa,WAC1CG,OAAQ,QACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,sDACVO,QAAS,CAAC,aAAc,QAAS,aAAc,cAC/CG,OAAQ,aACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,sEACVO,QAAS,CAAC,OAAQ,SAAU,YAAa,YACzCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,mFACVO,QAAS,CAAC,OAAQ,KAAM,WAAY,SACpCG,OAAQ,KACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,6DACVO,QAAS,CAAC,OAAQ,SAAU,WAAY,YACxCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,6EACVO,QAAS,CAAC,SAAU,SAAU,WAAY,QAC1CG,OAAQ,SACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,sDACVO,QAAS,CAAC,OAAQ,SAAU,OAAQ,YACpCG,OAAQ,OACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,sDACVO,QAAS,CAAC,UAAW,UAAW,UAAW,UAC3CG,OAAQ,UACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,kEACVO,QAAS,CAAC,MAAO,OAAQ,OAAQ,OACjCG,OAAQ,MACRlD,WAAY,QAEd,CACEnS,GAAI,GACJuQ,SAAU,uBACVoE,SAAU,qEACVO,QAAS,CAAC,WAAY,UAAW,QAAS,YAC1CG,OAAQ,WACRlD,WAAY,SC7jDHT,EAA4C,CACvD,+BAAgC,UAChC,wBAAyB,UACzB,kBAAmB,UACnB,aAAc,UACd,qBAAsB,UACtB,uBAAwB,WAIbK,EAAe,CAAC,OAAQ,SAAU,QAGlCE,EAAwB1B,IACnC,OAAQA,GACN,IAAK,+BACH,OAAOiF,EACT,IAAK,wBACH,OAAOC,EACT,IAAK,kBACH,OAAOC,EACT,IAAK,aACH,OAAOC,EACT,IAAK,qBACH,OAAOC,EACT,IAAK,uBACH,OAAOC,EACT,QACE,MAAO,GACX,ECiIaC,OA5I6BvX,IAIrC,IAJsC,QAC3Ce,EAAO,WACPC,EAAU,gBACVJ,GACDZ,EACC,MAAM,gBACJwX,EAAe,kBACf/D,EAAiB,mBACjBzF,EAAkB,aAClBC,EAAY,eACZwJ,EAAc,SACdnB,EAAQ,YACRoB,GCbwB1X,KAKkB,IALjB,eAC3BmT,EAAc,aACdK,EAAY,qBACZE,EAAoB,UACpBiE,GACkB3X,EAClB,MAAOwX,EAAiBI,GAAsB9W,mBAA0B,OACjE2S,EAAmBoE,GAAwB/W,mBAE/C,CAAC,IACGwV,EAAUoB,GAAe5W,mBAAwB,MAGxDK,qBAAU,KACR,MAAM2W,EAA2D,CAAC,EAClE1D,OAAOC,KAAKlB,GAAgB1L,SAASuK,IACnCwB,EAAa/L,SAASmM,IACpBkE,EAAyB,GAAD3U,OAAI6O,EAAQ,KAAA7O,OAAIyQ,IAAgB,IAAIjE,GAAK,GACjE,IAEJkI,EAAqBC,EAAyB,GAC7C,CAAC3E,EAAgBK,IAGpBrS,qBAAU,KACR,GAAIqW,GAAgC,OAAblB,EAAmB,CACxC,KAAIA,GAAY,GAMT,CACL,MAAMyB,EAAQ5G,YAAW,IAAMuG,EAAYpB,EAAW,IAAI,KAC1D,MAAO,IAAM0B,aAAaD,EAC5B,CAPMJ,GACFA,IAEF1J,GAAa,EAKjB,IACC,CAACqI,EAAUkB,IAGd,MA+BMvJ,EAAgBwE,IACpB,IAAK+E,EAAiB,OAEtB,MAAMS,EAAW,GAAA9U,OAAMqU,EAAgBxF,SAAQ,KAAA7O,OAAIqU,EAAgB5D,YACnEiE,GAAsBjG,IACpB,MAAMsG,EAAU,IAAKtG,GAOrB,OANKsG,EAAQD,KACXC,EAAQD,GAAe,IAAItI,KAEzB8C,GACFyF,EAAQD,GAAazS,IAAI0O,OAAOsD,EAAgB/V,KAE3CyW,CAAO,IAIhBN,EAAmB,MACnBF,EAAY,KAAK,EAgBnB,MAAO,CACLF,kBACA/D,oBACAzF,mBAnE0BgE,IAC1B,MACMmG,EADoBzE,EAAqB1B,GACF8B,QAC1CC,IAAC,IAAAE,EAAA,QAAsD,QAAjDA,EAACR,EAAkB,GAADtQ,OAAI6O,EAAQ,KAAA7O,OAAI4Q,EAAEH,oBAAa,IAAAK,GAAhDA,EAAkD1B,IAAI2B,OAAOH,EAAEtS,KAAI,IAG7E,GAAI0W,EAAmB3Q,OAAS,EAAG,CACjC,MAAM4O,EACJ+B,EAAmBrV,KAAKsJ,MAAMtJ,KAAKC,SAAWoV,EAAmB3Q,SAInE,OAHAoQ,EAAmBxB,GAGXA,EAASxC,YACf,IAAK,OACH8D,EAAY,IACZ,MACF,IAAK,SACHA,EAAY,IACZ,MAIF,QACEA,EAAY,IAElB,MACEE,EAAmB,KACrB,EAyCA3J,eACAwJ,eAjBqBA,KACrB,MAAMW,EAAyD,CAAC,EAChEhE,OAAOC,KAAKlB,GAAgB1L,SAASuK,IACnCwB,EAAa/L,SAASmM,IACpBwE,EAAuB,GAADjV,OAAI6O,EAAQ,KAAA7O,OAAIyQ,IAAgB,IAAIjE,GAAK,GAC/D,IAEJkI,EAAqBO,GACrBR,EAAmB,MACnBF,EAAY,KAAK,EASjBpB,WACAoB,cACD,EDlGGW,CAAa,CACflF,iBACAK,eACAE,uBACAiE,UAAWA,KAETnF,GAAqB,EAAM,KAIzB,cACJlB,EAAa,SACb3P,EAAQ,aACR+M,EAAY,gBACZC,EAAe,eACfsD,EAAc,uBACdb,EAAsB,gBACtBhC,EAAe,OACfP,EAAM,aACNE,EAAY,2BACZqD,EAA0B,yBAC1BnD,EAAwB,qBACxBuD,EAAoB,oBACpBM,GACE/E,EACFhN,EACAC,EACAJ,EACAoN,EACAC,GAGIqK,EAAYnK,iBAA0B,MACtCmH,EAAanH,iBAA0B,MACvCoH,EAAWpH,iBAAuB,OAEjCoK,EAAMC,GAAW1X,mBAAS,IAC1B2X,EAAMC,GAAW5X,mBAAS,IAC1B6X,EAAYC,GAAiB9X,mBAAgC,MAiB9D2U,EAA2BA,CAACrO,EAAWD,KACvCwR,GACFA,EAAW/W,SAAS0D,IAAI8B,EAAGuR,EAAW/W,SAAS0K,EAAGnF,EACpD,EAyBF,OAtBAhG,qBAAU,KACJmX,EAAUhJ,SAAWgG,EAAWhG,SAAWiG,EAASjG,SACtDzF,EACEyO,EAAUhJ,QACViG,EAASjG,QACTgG,EAAWhG,QACX8B,GblDD,SAA0BnN,EAAOlD,GACtCA,EAAQ0G,SAAQ,CAACnF,EAAQd,KACvB,MAAMmH,EAAcrG,EAAOT,OAAS,UAEpC6G,EAAqBC,GAAcM,IACjC,MAAM4P,EAAc5P,EAAW7D,QAG/ByT,EAAYxT,MAAMC,IAAI,EAAG,EAAG,GAG5B,MAAMwT,EAAWnP,EAAsBhB,EAAYyH,eAC/C0I,EACFD,EAAYjX,SAAS0D,IAAIwT,EAAS1R,EAAG,EAAG0R,EAAS3R,IAEjDlC,QAAQ0L,KAAK,wCAADxN,OAAyCb,EAAOT,QAC5DgX,EAAYjX,SAAS0D,IAAI,EAAG,EAAG,IAIjCL,QAAQoB,IAAI,UAADlD,OACCb,EAAOZ,KAAI,qBACrBmX,EAAYjX,UAIdqC,EAAMuB,IAAIqT,GAGVvW,EAAOR,QAAU+W,CAAW,GAC5B,GAEN,CaoBME,CAAiB9U,EAAOlD,IAExBkE,QAAQC,MAAM,oBAAqB,CACjCoT,UAAWA,EAAUhJ,QACrBgG,WAAYA,EAAWhG,QACvBiG,SAAUA,EAASjG,SAEvB,GACC,CAACgJ,EAAWhD,EAAYC,IAE3BpU,qBAAU,KACRsU,EAAyB8C,EAAME,EAAK,GACnC,CAACF,EAAME,IAGRtY,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BF,eAAA,OAAKC,UAAU,yBAAwBC,SAAA,CACrCC,cAAC4S,EAAW,CACVnS,QAASA,EACTqO,gBAAiBA,EACjBH,yBAA0BA,EAC1BkE,eAAgBA,IAElB7S,cAACiT,EAAkB,CACjBJ,eAAgBA,EAChBK,aAAcA,EACdC,kBAAmBA,EACnBC,qBAAsBA,OAG1BpT,cAAA,OAAK2V,IAAKV,EAAU9T,GAAG,eAAerB,UAAU,mBAChDE,cAAA,UAAQ2V,IAAKqC,EAAW7W,GAAG,SAASrB,UAAU,gBAC9CE,cAAC+U,EAAY,CACX/D,cAAeA,EACf3P,SAAUA,EACV+M,aAAcA,EACdC,gBAAiBA,EACjBsD,eAAgBA,EAChBqD,WAAYA,EACZC,SAAUA,EACVxG,aAAcA,EACdqD,2BAA4BA,EAC5BoD,iBAvEoB3K,IACpBA,EACFnC,EAAqB,WAAYsQ,IAC/B,MAAML,EAAaK,EAAM5T,QACzBuT,EAAWtT,MAAMC,IAAI,EAAG,EAAG,GAC3BqT,EAAW/W,SAAS0D,IAAI,EAAG,EAAG,GAC9BrB,EAAMuB,IAAImT,GACVC,EAAcD,EAAW,IAElBA,IACT1U,EAAMgV,OAAON,GACbC,EAAc,MAChB,EA4DInD,yBAA0BA,EAC1B3C,oBAAqBA,EACrBjE,OAAQA,IAET2I,GACClX,cAAC0W,EAAa,CACZZ,SAAUoB,EACVnB,SAAU7D,EACV8D,SAAkB,OAARA,QAAQ,IAARA,IAAY,MAGtB,EE5GK4C,OA1COA,KACpB,MAAOC,EAAaC,GAAkBtY,oBAAS,IACxCuY,EAAcC,GAAmBxY,oBAAS,IAC1CC,EAASC,GAAcF,mBAAmB,KAC1CF,EAAiBC,GAAsBC,mBAAS,GAEjDyY,EAAgBA,KACpBH,GAAe,GACfE,GAAgB,EAAM,EAGlBE,EAAqBA,KACzBF,GAAgB,GAChBF,GAAe,EAAK,EAIhBK,EAAuBC,IAC3B,MAAMC,EAAqBD,EAAcpY,KAAKgB,IAAM,IAAWA,EAAQV,SAAU,MACjFZ,EAAW2Y,EAAmB,EAI1BC,EAAqBC,IACzBhZ,EAAmBgZ,EAAM,EAG3B,OAAKV,EAIAE,GAAmC,IAAnBtY,EAAQyG,OAK3BlH,cAAA,OAAKF,UAAU,MAAKC,SAClBC,cAACiX,GAAS,CAACxW,QAASA,EAASC,WAAYA,EAAYJ,gBAAiBA,MALjEN,cAACG,EAAY,CAACC,gBAAiB+Y,EAAqB9Y,cAAeiZ,IAJnEtZ,cAACP,EAAQ,CAACE,UAAWsZ,EAAerZ,eAAgBsZ,GAUrD,E,SCjCKM,OAVUC,IACnBA,GAAeA,aAAuBC,WAC1CC,aAAMF,GACNG,aAAMH,GACNI,aAAMJ,GACNK,aAAML,GACNM,aAAON,GACP,E,yBCPF,MAAMO,G,MAAMC,EAAMC,OAAO,CACvBC,QAAS,SCuBEC,GAAkBC,aAAiB,wBAAwBC,cDVvCA,iBACRN,GAAIO,IAAI,mBACflO,KCSOmO,KAInBC,GAAYC,aAAY,CAC5BtZ,KAAM,OACNuZ,aAf8B,CAC9BC,YAAa,EACbC,WAAW,EACXC,SAAU,GACVC,OAAQ,OACRnW,MAAO,MAWPoW,SAAU,CACRC,UAAUC,GACRA,EAAML,WAAY,CACpB,EACAM,QAAQD,GACNA,EAAML,WAAY,CACpB,EACAO,SAASF,GACPA,EAAMN,aAAe,CACvB,GAEFS,cAAgBC,IACdA,EACGC,QAAQnB,GAAgBoB,SAAUN,IACjCA,EAAMH,OAAS,SAAS,IAEzBQ,QAAQnB,GAAgBqB,WAAW,CAACP,EAAOQ,KAC1CR,EAAMH,OAAS,YACfG,EAAMJ,SAAWY,EAAOC,OAAO,IAEhCJ,QAAQnB,GAAgBwB,UAAU,CAACV,EAAOQ,KAAY,IAADG,EACpDX,EAAMH,OAAS,SACfG,EAAMtW,MAA4B,QAAvBiX,EAAGH,EAAO9W,MAAMkX,eAAO,IAAAD,IAAI,IAAI,GAC1C,KAIK,UAAEZ,GAAS,QAAEE,GAAO,SAAEC,IAAaX,GAAUsB,QAC3CtB,UAAiB,QC9ChC,MAMauB,GAAa3B,aAAiB,sBAAsBC,cFXrCA,iBACHN,GAAIO,IAAI,aACflO,KEUM4P,KAwBTC,OApBMxB,aAAY,CAC/BtZ,KAAM,UACNuZ,aAbiC,CACjCla,QAAS,GACTsa,OAAQ,OACRnW,MAAO,MAWPoW,SAAU,CAAC,EACXK,cAAgBC,IACdA,EACGC,QAAQS,GAAWR,SAAUN,IAC5BA,EAAMH,OAAS,SAAS,IAEzBQ,QAAQS,GAAWP,WAAW,CAACP,EAAOQ,KACrCR,EAAMH,OAAS,YACfG,EAAMza,QAAUib,EAAOC,OAAO,IAE/BJ,QAAQS,GAAWJ,UAAU,CAACV,EAAOQ,KAAY,IAADG,EAC/CX,EAAMH,OAAS,SACfG,EAAMtW,MAA4B,QAAvBiX,EAAGH,EAAO9W,MAAMkX,eAAO,IAAAD,IAAI,IAAI,GAC1C,IAI2B,QC/BnC,MAMaM,GAAe9B,aAAiB,0BAA0BC,cHhBzCA,iBACLN,GAAIO,IAAI,eACflO,KGeQ+P,KAwBXC,OApBQ3B,aAAY,CACjCtZ,KAAM,YACNuZ,aAbmC,CACnC2B,UAAW,GACXvB,OAAQ,OACRnW,MAAO,MAWPoW,SAAU,CAAC,EACXK,cAAgBC,IACdA,EACGC,QAAQY,GAAaX,SAAUN,IAC9BA,EAAMH,OAAS,SAAS,IAEzBQ,QAAQY,GAAaV,WAAW,CAACP,EAAOQ,KACvCR,EAAMH,OAAS,YACfG,EAAMoB,UAAYZ,EAAOC,OAAO,IAEjCJ,QAAQY,GAAaP,UAAU,CAACV,EAAOQ,KAAY,IAADG,EACjDX,EAAMH,OAAS,SACfG,EAAMtW,MAA4B,QAAvBiX,EAAGH,EAAO9W,MAAMkX,eAAO,IAAAD,IAAI,IAAI,GAC1C,IAI6B,QCpCtBU,OANKC,aAAgB,CAClCC,KAAMhC,GACNha,QAASyb,GACTI,UAAWD,KCEEK,OAPDC,aAAe,CAC3BC,QAASL,KCIXM,IAAS5T,OACPjJ,cAAC8c,IAAMC,WAAU,CAAAhd,SACfC,cAACgd,KAAQ,CAACN,MAAOA,GAAM3c,SACrBC,cAAC4Y,GAAG,QAGRhH,SAASqL,eAAe,SAG1BzD,I","file":"static/js/main.9069332f.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/MainMenu.css';\n\ninterface MainMenuProps {\n  onNewGame: () => void;\n  onContinueGame: () => void;\n}\n\nconst MainMenu: React.FC<MainMenuProps> = ({ onNewGame, onContinueGame }) => {\n  return (\n    <div className=\"main-menu\">\n      <h1>Welcome to Sabelotodo</h1>\n      <button onClick={onNewGame} data-augmented-ui=\"tl-clip br-clip border\">New Game</button>\n      <button onClick={onContinueGame} data-augmented-ui=\"tl-clip br-clip border\">Continue Game</button>\n    </div>\n  );\n};\n\nexport default MainMenu;\n","import React, { useState, useEffect } from 'react';\nimport '../styles/NewGameSetup.css';\nimport { Player } from '../types/Player';\n\ninterface NewGameSetupProps {\n  onSetupComplete: (players: Player[]) => void;\n  onPlayerCount: (count: number) => void; // Notify parent of number of players\n}\n\nconst possibleColors = ['red', 'blue', 'green', 'white', 'gray', 'black'];\n\nconst NewGameSetup: React.FC<NewGameSetupProps> = ({ onSetupComplete, onPlayerCount }) => {\n  const [numberOfPlayers, setNumberOfPlayers] = useState(2);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [currentStep, setCurrentStep] = useState(1);\n\n  useEffect(() => {\n    // Notify parent component of the number of players\n    onPlayerCount(numberOfPlayers);\n\n    // Initialize players with default values\n    setPlayers(\n      new Array(numberOfPlayers).fill(null).map((_, index) => ({\n        id: index + 1,\n        name: '',\n        diceRoll: 0,\n        position: 0,\n        color: '',\n        token3D: null, // Add token3D for 3D integration\n      }))\n    );\n  }, [numberOfPlayers, onPlayerCount]);\n\n  const handleNumberOfPlayersChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setNumberOfPlayers(parseInt(event.target.value, 10));\n  };\n\n  const handlePlayerNameChange = (index: number, name: string) => {\n    const updatedPlayers = [...players];\n    updatedPlayers[index].name = name;\n    setPlayers(updatedPlayers);\n  };\n\n  const randomizePlayersOrder = () => {\n    const shuffledPlayers = [...players].sort(() => Math.random() - 0.5);\n    setPlayers(shuffledPlayers);\n  };\n\n  const handleColorChange = (index: number, color: string) => {\n    const updatedPlayers = [...players];\n    updatedPlayers[index].color = color;\n    setPlayers(updatedPlayers);\n  };\n\n  const validateStep2 = () => {\n    setCurrentStep(3);\n  };\n\n  const validateStep3 = () => {\n    handleStartGame();\n  };\n\n  const handleStartGame = () => {\n    onSetupComplete(players);\n  };\n\n  return (\n    <div className=\"new-game-background\">\n      <div className=\"new-game-setup\">\n        {currentStep === 1 && (\n          <div className=\"setup-step centered-row\">\n            <h2>Select Number of Players</h2>\n            <select\n              value={numberOfPlayers}\n              onChange={handleNumberOfPlayersChange}\n              className=\"drop-down\"\n            >\n              {[...Array(5)].map((_, i) => (\n                <option key={i + 2} value={i + 2}>\n                  {i + 2}\n                </option>\n              ))}\n            </select>\n            <button\n              onClick={() => setCurrentStep(2)}\n              data-augmented-ui=\"border tr-clip br-clip\"\n            >\n              Next\n            </button>\n          </div>\n        )}\n\n        {currentStep === 2 && (\n          <div className=\"setup-step centered-column\">\n            <h2>Enter Player Names and Randomize Order</h2>\n            <div className=\"players-list\">\n              {players.map((player, index) => (\n                <div key={index} className=\"player-setup\">\n                  <label>Player {index + 1} Name:</label>\n                  <input\n                    type=\"text\"\n                    value={player.name}\n                    onChange={(e) => handlePlayerNameChange(index, e.target.value)}\n                    data-augmented-ui=\"br-clip border\"\n                  />\n                </div>\n              ))}\n            </div>\n            <button\n              onClick={randomizePlayersOrder}\n              disabled={!players.every((player) => player.name !== '')}\n              data-augmented-ui=\"br-clip border\"\n            >\n              Randomize\n            </button>\n            <button\n              onClick={validateStep2}\n              data-augmented-ui=\"border tr-clip br-clip\"\n            >\n              Next\n            </button>\n          </div>\n        )}\n\n        {currentStep === 3 && (\n          <div className=\"setup-step centered-column\">\n            <h2>Select Starting Route</h2>\n            <div\n              className=\"routes-container\"\n              data-augmented-ui=\"tl-2-clip-x t-clip-x br-2-round-x border\"\n            >\n              {players.map((player, index) => (\n                <div key={index} className=\"player-setup\">\n                  <label>Player {player.name}'s Route: </label>\n                  <div className=\"hexagon-container\">\n                    {possibleColors.map((color) => (\n                      <div key={color} className=\"hexagon\">\n                        <input\n                          type=\"radio\"\n                          id={`color-${index}-${color}`}\n                          name={`color-${index}`}\n                          value={color}\n                          checked={player.color === color}\n                          onChange={(e) => handleColorChange(index, e.target.value)}\n                          disabled={players.some(\n                            (p) => p.color === color && p !== player\n                          )}\n                        />\n                        <label\n                          htmlFor={`color-${index}-${color}`}\n                          className={`hexagon-label ${color}`}\n                        >\n                          &#x2B22;\n                        </label>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <button\n              onClick={validateStep3}\n              disabled={!players.every((player) => player.color !== '')}\n              data-augmented-ui=\"border tl-clip bl-clip tr-clip br-clip\"\n            >\n              Start Game\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NewGameSetup;\n","//This portion is used to test the winning mechanic of the game\n/* export const playerRoutes: { [key: string]: number[] } = {\n  red: [87, 88, 89, 90, 91, 92, 93],\n  blue: [94, 95, 96, 97, 98, 99, 100],\n  gray: [80, 81, 82, 83, 84, 85, 86],\n  black: [66, 67, 68, 69, 70, 71, 72],\n  white: [73, 74, 75, 76, 77, 78, 79],\n  green: [101, 102, 103, 104, 105, 106, 107],\n}; */\n\n//This is the original playerRoutes that is used to move the player pieces\nexport const playerRoutes: { [key: string]: number[] } = {\n  red: [0, 21, 22, 23, 24, 25, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 87, 88, 89, 90, 91, 92, 93],\n  blue: [1, 26, 27, 28, 29, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 94, 95, 96, 97, 98, 99, 100],\n  gray: [2, 31, 32, 33, 34, 35, 61, 62, 63, 64, 65, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 80, 81, 82, 83, 84, 85, 86],\n  black: [3, 6, 7, 8, 9, 10, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72],\n  white: [4, 11, 12, 13, 14, 15, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 36, 37, 38, 39, 40, 41, 73, 74, 75, 76, 77, 78, 79],\n  green: [5, 16, 17, 18, 19, 20, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 101, 102, 103, 104, 105, 106, 107],\n};\n","import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\n\nexport let scene, camera, renderer, controls;\n\nexport function initScene(canvasEl) {\n  console.log('Initializing Scene with Canvas:', canvasEl);\n  renderer = new THREE.WebGLRenderer({\n    alpha: true, // For transparency\n    antialias: true,\n    canvas: canvasEl,\n  });\n  renderer.shadowMap.enabled = true;\n  renderer.shadowMap.type = THREE.PCFSoftShadowMap; // Softer shadows\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  renderer.setPixelRatio(window.devicePixelRatio);\n\n  scene = new THREE.Scene();\n\n  // Add a neutral background color to make the floor and dice visible\n  scene.background = new THREE.Color('#a0a0a0');\n\n  camera = new THREE.PerspectiveCamera(\n    45,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    2000\n  );\n  camera.position.set(0, 600, 600);\n  camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n  controls = new OrbitControls(camera, renderer.domElement);\n  controls.enableDamping = true;\n  controls.dampingFactor = 0.05;\n  controls.minDistance = 50;\n  controls.maxDistance = 1000;\n  controls.target.set(0, 0, 0);\n\n  // Ambient light for general illumination (reduced intensity)\n  const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n  scene.add(ambientLight);\n\n  // Directional light for highlights and shadows\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 0.8);\n  directionalLight.position.set(100, 200, 100);\n  directionalLight.castShadow = true;\n  directionalLight.shadow.mapSize.width = 2048;\n  directionalLight.shadow.mapSize.height = 2048;\n  scene.add(directionalLight);\n\n  // Point light for additional shadows (reduced intensity)\n  const topLight = new THREE.PointLight(0xffffff, 1);\n  topLight.position.set(10, 500, 0);\n  topLight.castShadow = true;\n  topLight.shadow.mapSize.width = 2048;\n  topLight.shadow.mapSize.height = 2048;\n  topLight.shadow.camera.near = 5;\n  topLight.shadow.camera.far = 400;\n  scene.add(topLight);\n\n  updateSceneSize();\n  window.addEventListener('resize', updateSceneSize);\n}\n\nexport function updateSceneSize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n}\n","import * as CANNON from 'cannon-es';\n\nexport let physicsWorld;\n\nexport function initPhysics() {\n  const floorMaterial = new CANNON.Material('floorMaterial');\n  const diceMaterial = new CANNON.Material('diceMaterial');\n\n  physicsWorld = new CANNON.World({\n    allowSleep: true,\n    gravity: new CANNON.Vec3(0, -200, 0),\n  });\n\n  const contactMaterial = new CANNON.ContactMaterial(\n    floorMaterial,\n    diceMaterial,\n    {\n      friction: 0.4,\n      restitution: 0.1,\n    }\n  );\n\n  physicsWorld.addContactMaterial(contactMaterial);\n  physicsWorld.defaultContactMaterial = contactMaterial;\n\n  console.log('Physics world initialized.');\n  return physicsWorld; // Ensure physicsWorld is returned\n}\n","import * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nlet diceModel = null;\nlet diceArray = []; // Store all dice globally\nlet diceHasBeenThrown = false; // Global flag to track dice roll state\n\nexport function loadDiceModel(callback) {\n  const loader = new GLTFLoader();\n  loader.load(\n    '/3d-models/BlackDice.glb',\n    (gltf) => {\n      diceModel = gltf.scene;\n      diceModel.traverse((node) => {\n        if (node.isMesh) {\n          node.castShadow = true;\n        }\n      });\n      console.log('Dice model loaded:', diceModel);\n      callback(diceModel);\n    },\n    undefined,\n    (error) => {\n      console.error('Error loading dice model:', error);\n    }\n  );\n}\n\nexport function createDice(scene, physicsWorld) {\n  if (!diceModel) {\n    console.error('Dice model not loaded!');\n    return null;\n  }\n\n  const diceMesh = diceModel.clone();\n  diceMesh.scale.set(6, 6, 6); // Adjust scale as needed\n  diceMesh.castShadow = true;\n  scene.add(diceMesh);\n\n  const diceBody = new CANNON.Body({\n    mass: 1,\n    shape: new CANNON.Box(new CANNON.Vec3(1, 1, 1)), // Adjust to match dice size\n  });\n  diceBody.position.set(0, 5, 0); // Initial position\n  physicsWorld.addBody(diceBody);\n\n  const dice = { mesh: diceMesh, body: diceBody };\n  diceArray.push(dice);\n\n  return dice;\n}\n\nfunction addDiceEvents(dice, scoreResult, onRollComplete) {\n  console.log('Adding events to dice:', dice, 'Score result:', scoreResult);\n  if (typeof onRollComplete !== 'function') {\n    console.error('onRollComplete is not a function:', onRollComplete);\n    return;\n  }\n\n  dice.body.addEventListener('sleep', (e) => {\n    console.log('Dice sleep event triggered');\n    if (!diceHasBeenThrown) return;\n    diceHasBeenThrown = false;\n\n    dice.body.allowSleep = false;\n\n    const euler = new CANNON.Vec3();\n    e.target.quaternion.toEuler(euler);\n\n    const eps = 0.1;\n    let isZero = (angle) => Math.abs(angle) < eps;\n    let isHalfPi = (angle) => Math.abs(angle - 0.5 * Math.PI) < eps;\n    let isMinusHalfPi = (angle) => Math.abs(0.5 * Math.PI + angle) < eps;\n    let isPiOrMinusPi = (angle) =>\n      Math.abs(Math.PI - angle) < eps || Math.abs(Math.PI + angle) < eps;\n\n    let score;\n    if (isZero(euler.z)) {\n      if (isZero(euler.x)) {\n        score = 5;\n      } else if (isHalfPi(euler.x)) {\n        score = 6;\n      } else if (isMinusHalfPi(euler.x)) {\n        score = 1;\n      } else if (isPiOrMinusPi(euler.x)) {\n        score = 2;\n      }\n    } else if (isHalfPi(euler.z)) {\n      score = 4;\n    } else if (isMinusHalfPi(euler.z)) {\n      score = 3;\n    }\n\n    if (score !== undefined) {\n      if (scoreResult.innerHTML === '') {\n        scoreResult.innerHTML += score;\n      } else {\n        scoreResult.innerHTML += '+' + score;\n      }\n\n      // Notify the game about the dice roll result\n      console.log('Notifying game with score:', score);\n      onRollComplete(score);\n    }\n  });\n}\n\nexport function throwDice(scoreResult, onRollComplete) {\n  if (diceArray.length === 0) {\n    console.error('No dice to throw!');\n    return;\n  }\n\n  diceHasBeenThrown = true; // Mark that the dice has been thrown\n  scoreResult.innerHTML = ''; // Clear previous result\n\n  diceArray.forEach((dice, index) => {\n    // Reset velocity and angular velocity\n    dice.body.velocity.setZero();\n    dice.body.angularVelocity.setZero();\n\n    // Adjust starting position for each dice (higher starting point)\n    const startX = 5 + Math.random() * 2;\n    const startY = 15 + index * 5;\n    const startZ = 0;\n\n    dice.body.position.set(startX, startY, startZ);\n    dice.mesh.position.copy(dice.body.position);\n\n    console.log(\n      `Dice ${index + 1} starting position: [${startX}, ${startY}, ${startZ}]`\n    );\n\n    // Apply more dramatic initial rotation to the dice\n    dice.mesh.rotation.set(\n      Math.PI * Math.random() * 2,\n      Math.PI * Math.random() * 2,\n      Math.PI * Math.random() * 2\n    );\n    dice.body.quaternion.copy(dice.mesh.quaternion);\n\n    // Apply stronger impulse for a more dynamic throw\n    const force = 20 + 10 * Math.random();\n    const randomDirection = Math.random() > 0.5 ? 1 : -1;\n    const impulseX = randomDirection * force;\n    const impulseY = force * 2;\n    const impulseZ = randomDirection * force;\n\n    dice.body.applyImpulse(\n      new CANNON.Vec3(impulseX, impulseY, impulseZ),\n      new CANNON.Vec3(0, 0, 0) // Point of application\n    );\n\n    console.log(`Applying impulse: [${impulseX}, ${impulseY}, ${impulseZ}]`);\n\n    // Add angular velocity for more spinning effect\n    const angularX = 10 * (Math.random() - 0.5);\n    const angularY = 10 * (Math.random() - 0.5);\n    const angularZ = 10 * (Math.random() - 0.5);\n\n    dice.body.angularVelocity.set(angularX, angularY, angularZ);\n\n    console.log(`Angular velocity: [${angularX}, ${angularY}, ${angularZ}]`);\n\n    dice.body.allowSleep = true; // Enable sleep to stabilize after rolling\n    addDiceEvents(dice, scoreResult, onRollComplete); // Attach events to dice\n  });\n}\n","import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\n\nexport function createPlayerMaterial(color) {\n  return new THREE.MeshStandardMaterial({\n    color,\n    metalness: 0.5,\n    roughness: 0.6,\n  });\n}\n\nexport function loadPlayerTokenModel(playerColor = '#FFFFFF', callback) {\n  if (typeof callback !== 'function') {\n    console.error('Invalid callback provided to loadPlayerTokenModel.');\n    return;\n  }\n\n  const loader = new GLTFLoader();\n  loader.load(\n    '/3d-models/Pawn.glb', // Ensure the path to the GLB file is correct\n    (gltf) => {\n      const tokenModel = gltf.scene;\n\n      // Create material dynamically based on the player's color\n      const material = new THREE.MeshStandardMaterial({ color: playerColor });\n\n      tokenModel.traverse((node) => {\n        if (node.isMesh) {\n          node.castShadow = true; // Allow the token to cast shadows\n          node.material = material; // Assign the material\n        }\n      });\n\n      // Debug: Log tokenModel details to ensure it loads correctly\n      console.log('Player Token Model Loaded:', tokenModel);\n\n      callback(tokenModel);\n    },\n    undefined,\n    (error) => {\n      console.error('Error loading player token model:', error);\n    }\n  );\n}\n","import { renderer, scene, camera, controls } from './scene.js';\nimport { physicsWorld } from './physics.js';\n\nexport function render(diceArray) {\n  if (!scene || !camera || !renderer) {\n    console.error('Render failed: Scene, camera, or renderer not initialized.');\n    return;\n  }\n  physicsWorld.fixedStep();\n  diceArray.forEach((dice) => {\n    dice.mesh.position.copy(dice.body.position);\n    dice.mesh.quaternion.copy(dice.body.quaternion);\n  });\n\n  controls.update();\n  renderer.render(scene, camera);\n  requestAnimationFrame(() => render(diceArray));\n}\n","export const predefinedCoordinates: {\n  [key: string]: { x: number; z: number };\n} = {\n  /* //This are the test coordinates\n  red: { x: 0, z: 214 },\n  blue: { x: 185, z: 110 },\n  gray: { x: -185, z: 107 },\n  black: { x: 0, z: -214 },\n  white: { x: -185, z: -106 },\n  green: { x: -185, z: 107 }, */\n  red: { x: 0, z: 24 },\n  blue: { x: 20, z: 12 },\n  gray: { x: 20, z: -12 },\n  black: { x: 0, z: -24 },\n  white: { x: -20, z: -12 },\n  green: { x: -20, z: 12 },\n};\n\nexport const BoardCoordinates: { [key: string]: { x: number; z: number } } = {\n  0: { x: 0, z: 24 }, // Red start\n  1: { x: 20, z: 12 }, // Blue start\n  2: { x: 20, z: -12 }, // Gray start\n  3: { x: 0, z: -24 }, // Black start\n  4: { x: -20, z: -12 }, // White start\n  5: { x: -20, z: 12 }, // Green start\n  6: { x: 0, z: -44 },\n  7: { x: 0, z: -75 },\n  8: { x: 0, z: -108 },\n  9: { x: 0, z: -140 },\n  10: { x: 0, z: -172 },\n  11: { x: -38, z: -22 },\n  12: { x: -67, z: -38 },\n  13: { x: -94, z: -54 },\n  14: { x: -122, z: -70 },\n  15: { x: -150, z: -85 },\n  16: { x: -38, z: 22 },\n  17: { x: -65, z: 37 },\n  18: { x: -94, z: 53 },\n  19: { x: -122, z: 70 },\n  20: { x: -150, z: 85 },\n  21: { x: 0, z: 45 }, // Black 1st\n  22: { x: 0, z: 76 },\n  23: { x: 0, z: 108 },\n  24: { x: 0, z: 141 },\n  25: { x: 0, z: 173 },\n  26: { x: 38, z: 22 }, // Blue 1st\n  27: { x: 65, z: 37 },\n  28: { x: 94, z: 54 },\n  29: { x: 122, z: 70 },\n  30: { x: 150, z: 85 },\n  31: { x: 38, z: -22 }, // Gray 1st\n  32: { x: 65, z: -38 },\n  33: { x: 94, z: -53 },\n  34: { x: 122, z: -69 },\n  35: { x: 150, z: -85 },\n  36: { x: 0, z: -214 },\n  37: { x: -51, z: -190 },\n  38: { x: -80, z: -170 },\n  39: { x: -110, z: -155 },\n  40: { x: -140, z: -138 },\n  41: { x: -185, z: -106 },\n  42: { x: -188, z: -50 },\n  43: { x: -188, z: -15 },\n  44: { x: -188, z: 18 },\n  45: { x: -188, z: 52 },\n  46: { x: -185, z: 107 },\n  47: { x: -137, z: 138 },\n  48: { x: -108, z: 155 },\n  49: { x: -80, z: 172 },\n  50: { x: -50, z: 190 },\n  51: { x: 0, z: 214 }, // Red Gate\n  52: { x: 50, z: 190 },\n  53: { x: 80, z: 172 },\n  54: { x: 108, z: 155 },\n  55: { x: 138, z: 140 },\n  56: { x: 185, z: 110 },\n  57: { x: 190, z: 53 },\n  58: { x: 190, z: 18 },\n  59: { x: 190, z: -15 },\n  60: { x: 190, z: -50 },\n  61: { x: 185, z: -105 },\n  62: { x: 140, z: -138 },\n  63: { x: 110, z: -155 },\n  64: { x: 80, z: -170 },\n  65: { x: 50, z: -190 },\n  66: { x: 0, z: -214 },//Black 1-\n  67: { x: 0, z: -172 },//Black 2-\n  68: { x: 0, z: -140 },//Black 3-\n  69: { x: 0, z: -108 },//Black 4-\n  70: { x: 0, z: -75 },//Black 5-\n  71: { x: 0, z: -44 },//Black 6-\n  72: { x: 0, z: -24 },//Black last -- 0 --\n  73: { x: -185, z: -106 },//White 1-\n  74: { x: -150, z: -85 },//White 2-\n  75: { x: -122, z: -70 },//White 3-\n  76: { x: -94, z: -54 },//White 4-\n  77: { x: -67, z: -38 },//White 5-\n  78: { x: -38, z: -22 },//White 6-\n  79: { x: -20, z: -12 },//White last -- 0 --\n  80: { x: -185, z: 107 },//Gray 1-\n  81: { x: -150, z: 85 },//Gray 2-\n  82: { x: -122, z: 70 },//Gray 3-\n  83: { x: -94, z: 53 },//Gray 4-\n  84: { x: -65, z: 37 },//Gray 5-\n  85: { x: -38, z: 22 },//Gray 6-\n  86: { x: -20, z: 12 },//Gray last -- 0 --\n  87: { x: 0, z: 214 },//Red 1-\n  88: { x: 0, z: 173 },//Red 2-\n  89: { x: 0, z: 141 },//Red 3-\n  90: { x: 0, z: 108 },//Red 4-\n  91: { x: 0, z: 76 },//Red 5-\n  92: { x: 0, z: 45 },//Red 6-\n  93: { x: 0, z: 24 },//Red last -- 0 --\n  94: { x: 185, z: 110 },//Blue 1-\n  95: { x: 150, z: 85 },//Blue 2-\n  96: { x: 122, z: 70 },//Blue 3-\n  97: { x: 94, z: 54 },//Blue 4-\n  98: { x: 65, z: 37 },//Blue 5-\n  99: { x: 38, z: 22 },//Blue 6-\n  100: { x: 20, z: 12 },//Blue last -- 0 --\n  101: { x: -185, z: 107 },//Green 1-\n  102: { x: -150, z: 85 },//Green 2-\n  103: { x: -122, z: 70 },//Green 3-\n  104: { x: -94, z: 53 },//Green 4-\n  105: { x: -65, z: 37 },//Green 5-\n  106: { x: -38, z: 22 },//Green 6-\n  107: { x: -20, z: 12 },//Green last -- 0 --\n};\n","import { initScene, scene, updateSceneSize } from './dice/scene';\nimport { initPhysics } from './dice/physics';\nimport { createFloor } from './dice/floor';\nimport { loadDiceModel, createDice, throwDice } from './dice/dice';\nimport { loadPlayerTokenModel } from './player/token';\nimport { render } from './dice/render';\nimport { predefinedCoordinates } from '../types/BoardCoordinates';\n\nexport const initDiceSystem = (\n  canvasEl,\n  scoreResult,\n  rollBtn,\n  onRollComplete\n) => {\n  console.log('Initializing Dice System...');\n  const physicsWorld = initPhysics(); // Initialize physics\n  initScene(canvasEl); // Initialize scene\n  console.log('Scene initialized.');\n\n  // Load the floor\n  console.log('Adding floor...');\n  createFloor(scene, physicsWorld); // Add floor to scene and physics\n\n  const diceArray = []; // Declare diceArray in the correct scope\n\n  loadDiceModel(() => {\n    console.log('Dice model loaded.');\n    for (let i = 0; i < 1; i++) {\n      const dice = createDice(scene, physicsWorld);\n      if (dice) {\n        diceArray.push(dice); // Ensure dice is added to the array\n      }\n    }\n    console.log('DiceArray after creation:', diceArray);\n\n    rollBtn.addEventListener('click', () => {\n      console.log('Dice roll triggered.');\n      if (diceArray.length > 0) {\n        throwDice(scoreResult, onRollComplete); // Pass onRollComplete here\n      } else {\n        console.error('No dice available to roll!');\n      }\n    });\n\n    render(diceArray); // Start rendering\n    console.log('Rendering started.');\n  });\n\n  window.addEventListener('resize', updateSceneSize);\n};\n\nexport function initPlayerTokens(scene, players) {\n  players.forEach((player, index) => {\n    const playerColor = player.color || '#FFFFFF'; // Ensure the color is available from the player object\n\n    loadPlayerTokenModel(playerColor, (tokenModel) => {\n      const playerToken = tokenModel.clone();\n\n      // Adjust token scale for visibility\n      playerToken.scale.set(3, 3, 3);\n\n      // Get starting position from predefinedCoordinates\n      const startPos = predefinedCoordinates[playerColor.toLowerCase()];\n      if (startPos) {\n        playerToken.position.set(startPos.x, 0, startPos.z); // Adjust Y as needed\n      } else {\n        console.warn(`No predefined coordinates for color: ${player.color}`);\n        playerToken.position.set(0, 0, 0); // Default position if no match\n      }\n\n      // Debug: Log token's starting position\n      console.log(\n        `Player ${player.name} token placed at:`,\n        playerToken.position\n      );\n\n      // Add token to the scene\n      scene.add(playerToken);\n\n      // Attach token to the player object\n      player.token3D = playerToken;\n    });\n  });\n}\n\nexport { loadPlayerTokenModel, throwDice };\n","import * as THREE from 'three';\nimport * as CANNON from 'cannon-es';\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader.js';\nimport { physicsWorld } from './physics';\n\nexport function createFloor(scene, physicsWorld) {\n  console.log('Adding floor to the scene...');\n\n  // Floor material for THREE.js\n  const floorMaterial = new THREE.MeshStandardMaterial({\n    transparent: true,\n    opacity: 0,\n    /* roughness: 0.8, */\n  });\n\n  // Create the THREE.js floor\n  const floor = new THREE.Mesh(\n    new THREE.PlaneGeometry(1000, 1000), // Adjust size to match your scene\n    floorMaterial\n  );\n  floor.receiveShadow = true;\n  floor.position.y = -1;\n  floor.rotation.x = -Math.PI / 2;\n  scene.add(floor);\n  console.log('Floor added to the scene:', floor);\n\n  // Create the physics floor for CANNON\n  const floorBody = new CANNON.Body({\n    type: CANNON.Body.STATIC,\n    shape: new CANNON.Plane(),\n  });\n  floorBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0); // Match rotation\n  floorBody.position.set(0, 5, 0);\n  physicsWorld.addBody(floorBody);\n  console.log('Floor added to the physics world.');\n\n  // Load and overlay SVG design\n  const loader = new SVGLoader();\n  loader.load(\n    '/textures/JustTechBoard.svg', // Path to your SVG file\n    (data) => {\n      console.log('SVG loaded successfully.');\n\n      const paths = data.paths;\n      const group = new THREE.Group();\n\n      // Iterate through SVG paths\n      paths.forEach((path) => {\n        const material = new THREE.MeshBasicMaterial({\n          color: new THREE.Color(path.userData.style.fill || '#000000'), // Default to black if no color is defined\n          opacity: path.userData.style.fillOpacity || 1,\n          transparent: true,\n          side: THREE.DoubleSide,\n          depthWrite: false,\n        });\n\n        // Convert SVG paths to 3D shapes\n        const shapes = SVGLoader.createShapes(path);\n        shapes.forEach((shape) => {\n          const geometry = new THREE.ShapeGeometry(shape);\n          const mesh = new THREE.Mesh(geometry, material);\n          group.add(mesh);\n        });\n      });\n\n      // Scale and position the SVG group on the floor\n      group.scale.set(0.44, 0.44, 0.44); // Adjust to match floor size\n      const boundingBox = new THREE.Box3().setFromObject(group);\n      const boxCenter = new THREE.Vector3();\n      boundingBox.getCenter(boxCenter);\n\n      group.position.set(-boxCenter.x, 0, -boxCenter.y); // Center and slightly above the floor\n      group.rotation.x = Math.PI / 2; // Lay flat on the floor\n      scene.add(group);\n\n      console.log('SVG texture added to the scene.');\n    },\n    (xhr) => {\n      console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n    },\n    (error) => {\n      console.error('Error loading SVG:', error);\n    }\n  );\n}\n","// src/types/BoardPositionCategories.ts\nexport const categories = [\n  'Algorithms & Data Structures', //Red\n  'Programming Languages', //White\n  'Web Development', //Black\n  'Data Bases', //Blue\n  'DevOps & Dev Tools', //Gray\n  'UNIX system terminal', //Green\n  'Roulette', //Yellow\n  'Start/End'\n];\n\nexport const boardPositionCategories: { [key: number]: string } = {\n  0: 'Start/End',\n  1: 'Start/End',\n  2: 'Start/End',\n  3: 'Start/End',\n  4: 'Start/End',\n  5: 'Start/End',\n  6: 'Algorithms & Data Structures',\n  7: 'Programming Languages',\n  8: 'Web Development',\n  9: 'Data Bases',\n  10: 'DevOps & Dev Tools',\n  11: 'Data Bases',\n  12: 'UNIX system terminal',\n  13: 'Programming Languages',\n  14: 'DevOps & Dev Tools',\n  15: 'Web Development',\n  16: 'DevOps & Dev Tools',\n  17: 'Algorithms & Data Structures',\n  18: 'UNIX system terminal',\n  19: 'Web Development',\n  20: 'Programming Languages',\n  21: 'Web Development',\n  22: 'Data Bases',\n  23: 'Algorithms & Data Structures',\n  24: 'Programming Languages',\n  25: 'UNIX system terminal',\n  26: 'Programming Languages',\n  27: 'DevOps & Dev Tools',\n  28: 'Data Bases',\n  29: 'UNIX system terminal',\n  30: 'Algorithms & Data Structures',\n  31: 'UNIX system terminal',\n  32: 'Web Development',\n  33: 'DevOps & Dev Tools',\n  34: 'Algorithms & Data Structures',\n  35: 'Data Bases',\n  36: 'Web Development',\n  37: 'Roulette',\n  38: 'Programming Languages',\n  39: 'Web Development',\n  40: 'Roulette',\n  41: 'Programming Languages',\n  42: 'Roulette',\n  43: 'Data Bases',\n  44: 'DevOps & Dev Tools',\n  45: 'Roulette',\n  46: 'UNIX system terminal',\n  47: 'Roulette',\n  48: 'UNIX system terminal',\n  49: 'Algorithms & Data Structures',\n  50: 'Roulette',\n  51: 'Algorithms & Data Structures',\n  52: 'Roulette',\n  53: 'Web Development',\n  54: 'Programming Languages',\n  55: 'Roulette',\n  56: 'Data Bases',\n  57: 'Roulette',\n  58: 'DevOps & Dev Tools',\n  59: 'Data Bases',\n  60: 'Roulette',\n  61: 'DevOps & Dev Tools',\n  62: 'Roulette',\n  63: 'Algorithms & Data Structures',\n  64: 'UNIX system terminal',\n  65: 'Roulette',\n  66: 'Web Development',\n  67: 'DevOps & Dev Tools',\n  68: 'Data Bases',\n  69: 'Web Development',\n  70: 'Programming Languages',\n  71: 'Algorithms & Data Structures',\n  72: 'Roulette',\n  73: 'Programming Languages',\n  74: 'Web Development',\n  75: 'DevOps & Dev Tools',\n  76: 'Programming Languages',\n  77: 'UNIX system terminal',\n  78: 'Data Bases',\n  79: 'Roulette',\n  80: 'DevOps & Dev Tools',\n  81: 'Data Bases',\n  82: 'Algorithms & Data Structures',\n  83: 'DevOps & Dev Tools',\n  84: 'Web Development',\n  85: 'UNIX system terminal',\n  86: 'Roulette',\n  87: 'Algorithms & Data Structures',\n  88: 'UNIX system terminal',\n  89: 'Programming Languages',\n  90: 'Algorithms & Data Structures',\n  91: 'Data Bases',\n  92: 'Web Development',\n  93: 'Roulette',\n  94: 'Data Bases',\n  95: 'Algorithms & Data Structures',\n  96: 'UNIX system terminal',\n  97: 'Data Bases',\n  98: 'DevOps & Dev Tools',\n  99: 'Programming Languages',\n  100: 'Roulette',\n  101: 'UNIX system terminal',\n  102: 'Programming Languages',\n  103: 'Web Development',\n  104: 'UNIX system terminal',\n  105: 'Algorithms & Data Structures',\n  106: 'DevOps & Dev Tools',\n  107: 'Roulette',\n};\n","import { useState, useEffect, useRef } from \"react\";\nimport { Player } from \"../../../types/Player\";\nimport { playerRoutes } from \"../../../types/PlayerRoutes\";\nimport { throwDice } from \"../../../utils/threeManager\";\nimport { BoardCoordinates } from \"../../../types/BoardCoordinates\";\nimport { boardPositionCategories } from \"../../../types/BoardPositionCategories\";\n\nexport const useGameLogic = (\n  players: Player[],\n  setPlayers: Function,\n  numberOfPlayers: number,\n  selectNextQuestion: (category: string, spacesMoved?: number) => void,\n  handleAnswer: (correct: boolean) => void\n) => {\n  const playerIndexRef = useRef(0);\n  const playerPositionsRef = useRef<{ [key: string]: number }>(\n    players.reduce((acc: any, player: any) => {\n      acc[player.color] = 0;\n      return acc;\n    }, {})\n  );\n  const lastMoveRef = useRef<{ [key: string]: number }>(\n    players.reduce((acc: any, player: any) => {\n      acc[player.color] = 0; // Tracks the last move per player\n      return acc;\n    }, {})\n  );\n\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [canThrowDice, setCanThrowDice] = useState(true);\n  const [diceRoll, setDiceRoll] = useState<number | null>(null);\n  const [winner, setWinner] = useState<Player | null>(null);\n  const [showRoulette, setShowRoulette] = useState(false);\n  const playerAnsweredCategories = useRef<{[key: string]: Set<string>;}>({});\n  const [updateFlag, setUpdateFlag] = useState(0);\n  const [playerPositions, setPlayerPositions] = useState<{ [key: string]: number }>(playerPositionsRef.current);\n  const [currentQuestionCategory, setCurrentQuestionCategory] = useState<string | null>(null);\n\n  const handleRouletteSpinComplete = (category: string) => {\n    console.log(`🎡 Roulette spin completed: ${category}`);\n\n    // Retrieve current player and route information\n    const currentPlayer = players[playerIndexRef.current];\n    const currentPlayerColor = currentPlayer.color.toLowerCase();\n    const currentRoute = playerRoutes[currentPlayerColor];\n    const currentPositionIndex = playerPositionsRef.current[currentPlayerColor];\n\n    // Determine if the player is at the end of their route.\n    const atEnd = currentPositionIndex === currentRoute.length - 1;\n\n    // Get the set of categories already answered by the current player.\n    const answeredCategories = playerAnsweredCategories.current[currentPlayer.id] || new Set();\n\n    setTimeout(() => {\n      setShowRoulette(false);\n\n      if (atEnd && answeredCategories.has(category)) {\n        console.log(`ℹ️ ${currentPlayer.name} already has the ${category} badge. Passing turn.`);\n        moveToNextPlayer();\n      } else {\n        // If not at the end or the badge isn't already earned, ask the question.\n        setCurrentQuestionCategory(category);\n        selectNextQuestion(category);\n      }\n    }, 800); // Keep roulette open for 800ms before proceeding.\n  };\n\n  const updatePlayerPosition = (color: string, newPosition: number) => {\n    playerPositionsRef.current[color] = newPosition;\n    setPlayerPositions({ ...playerPositionsRef.current }); // Trigger re-render\n  };\n\n  const fillBadgesForPlayer = (playerId: number) => {\n    playerAnsweredCategories.current[playerId] = new Set([\n      \"Algorithms & Data Structures\",\n      \"Programming Languages\",\n      \"Web Development\",\n      \"Data Bases\",\n      \"DevOps & Dev Tools\",\n      \"UNIX system terminal\",\n    ]);\n    setUpdateFlag(prev => prev + 1);\n  };\n\n  useEffect(() => {\n    const initialPositions: { [key: string]: number } = {};\n    const initialCategories: { [key: number]: Set<string> } = {};\n    players.forEach((player) => {\n      initialPositions[player.color] = 0; // Start at the beginning of their route\n      initialCategories[player.id] = new Set(); // Initialize answered categorie\n    });\n    setPlayerPositions(initialPositions);\n    playerAnsweredCategories.current = initialCategories;\n    //setPlayerAnsweredCategories(initialCategories);s\n  }, [players]);\n\n  const moveToNextPlayer = () => {\n    const nextPlayerIndex = (playerIndexRef.current + 1) % players.length;\n    playerIndexRef.current = nextPlayerIndex;\n    setCurrentPlayerIndex(nextPlayerIndex);\n    console.log(`🔄 Next Player Turn: ${players[nextPlayerIndex].name}`);\n  };\n\n  const animateTokenMovement = (\n    player: Player,\n    startPosition: { x: number; z: number },\n    endPosition: { x: number; z: number },\n    isReversed: boolean,\n    onComplete: () => void\n  ) => {\n    const token = player.token3D;\n    if (!token) {\n      console.warn(`Token for player ${player.name} is missing.`);\n      return;\n    }\n\n    const duration = 500; // Animation duration in milliseconds\n    const steps = 60; // Number of steps for the animation\n    const interval = duration / steps;\n\n    let currentStep = 0;\n\n    const deltaX = (endPosition.x - startPosition.x) / steps;\n    const deltaZ = (endPosition.z - startPosition.z) / steps;\n\n    const maxHeight = 60;\n    const startY = token.position.y;\n\n    const animateStep = () => {\n      if (currentStep <= steps) {\n        const progress = currentStep / steps;\n\n        const x = startPosition.x + deltaX * currentStep;\n        const z = startPosition.z + deltaZ * currentStep;\n\n        const heightFactor = Math.sin(progress * Math.PI);\n        const y = startY + maxHeight * heightFactor;\n\n        token.position.set(x, y, z);\n\n        currentStep++;\n        setTimeout(animateStep, interval);\n      } else {\n        token.position.set(endPosition.x, 0, endPosition.z);\n        onComplete();\n      }\n    };\n\n    animateStep();\n  };\n\n  const movePlayerToken = (\n    player: Player,\n    currentIndex: number,\n    newIndex: number,\n    isReversed: boolean,\n    onComplete: () => void\n  ) => {\n    const route = playerRoutes[player.color.toLowerCase()];\n    const endPositionKey = route[newIndex];\n    const endPosition = BoardCoordinates[endPositionKey];\n    const startPositionKey = route[currentIndex];\n    const startPosition = BoardCoordinates[startPositionKey];\n\n    console.log(`Moving ${player.name} from ${startPositionKey} to ${endPositionKey}`);\n    console.log(`Start Position: ${startPosition}`);\n    console.log(`End Position: ${endPosition}`);\n    console.log(`Is Reversed: ${isReversed}`);\n\n    if (endPosition && player.token3D) {\n      animateTokenMovement(player, startPosition, endPosition, isReversed, onComplete);\n    } else {\n      console.warn(`Unable to move ${player.name}: Missing coordinates or token3D.`);\n    }\n  };\n\n  const handleAnswerComplete = (correct: boolean) => {\n    // If answer is correct, update the player's answered categories.\n    if (correct && currentQuestionCategory) {\n      const currentPlayer = players[playerIndexRef.current];\n      if (!playerAnsweredCategories.current[currentPlayer.id]) {\n        playerAnsweredCategories.current[currentPlayer.id] = new Set();\n      }\n      playerAnsweredCategories.current[currentPlayer.id].add(currentQuestionCategory);\n      console.log(`Added badge \"${currentQuestionCategory}\" for player ${currentPlayer.name}`);\n      setUpdateFlag(prev => prev + 1);\n    }\n    // Clear the current question category after handling the answer.\n    setCurrentQuestionCategory(null);\n\n    // Call the passed-in answer handler.\n    handleAnswer(correct);\n\n    const currentPlayer = players[playerIndexRef.current];\n    const currentPlayerColor = currentPlayer.color.toLowerCase();\n    const currentPositionIndex = playerPositionsRef.current[currentPlayerColor];\n\n    let nextPositionIndex = currentPositionIndex;\n    if (!correct) {\n      const lastMove = lastMoveRef.current[currentPlayerColor] || 1;\n      nextPositionIndex = Math.max(currentPositionIndex - lastMove, 0);\n    }\n\n    movePlayerToken(\n      currentPlayer,\n      currentPositionIndex,\n      nextPositionIndex,\n      !correct,\n      () => {\n        updatePlayerPosition(currentPlayerColor, nextPositionIndex);\n        moveToNextPlayer();\n      }\n    );\n  };\n\n  const handleTimeout = (spacesMoved: number) => {\n    console.log(\"⏳ Question timed out. Penalizing player with backward movement.\");\n\n    const currentPlayer = players[playerIndexRef.current];\n    const currentPlayerColor = currentPlayer.color.toLowerCase();\n    const currentRoute = playerRoutes[currentPlayerColor];\n    const currentPositionIndex = playerPositionsRef.current[currentPlayerColor];\n\n    // 🚨 Ensure we don't go below 0 (start of route)\n    const nextPositionIndex = Math.max(currentPositionIndex - spacesMoved, 0);\n\n    console.log(`\n      🚨 Timeout for ♟️ ${currentPlayer.name}\n      📍 Current Position Index: ${currentPositionIndex}\n      🔙 Moving Back by: ${spacesMoved} spaces\n      🎯 New Position Index: ${nextPositionIndex}\n    `);\n\n    movePlayerToken(\n      currentPlayer,\n      currentPositionIndex,\n      nextPositionIndex,\n      true, // ✅ Reverse movement\n      () => {\n        console.log(`✅ ♟️ ${currentPlayer.name} moved back to position ${nextPositionIndex} after timeout.`);\n\n        // Update player position after movement completes\n        playerPositionsRef.current[currentPlayerColor] = nextPositionIndex;\n        setPlayerPositions((prev) => ({\n          ...prev,\n          [currentPlayerColor]: nextPositionIndex,\n        }));\n\n        moveToNextPlayer();\n      }\n    );\n  };\n\n  const handleDiceRollComplete = (diceScore: number) => {\n    const currentPlayer = players[playerIndexRef.current];\n    const currentPlayerColor = currentPlayer.color.toLowerCase();\n    const currentRoute = playerRoutes[currentPlayerColor];\n    const currentPositionIndex = playerPositionsRef.current[currentPlayerColor];\n\n    const nextPositionIndex = Math.min(\n      currentPositionIndex + diceScore,\n      currentRoute.length - 1\n    );\n\n    lastMoveRef.current[currentPlayerColor] = diceScore;\n\n    movePlayerToken(\n      currentPlayer,\n      currentPositionIndex,\n      nextPositionIndex,\n      false,\n      () => {\n        // Update the player's position\n        playerPositionsRef.current[currentPlayerColor] = nextPositionIndex;\n        setPlayerPositions((prev) => ({\n          ...prev,\n          [currentPlayerColor]: nextPositionIndex,\n        }));\n\n        // If the player has reached the end of their route…\n        if (nextPositionIndex === currentRoute.length - 1) {\n          // Check the number of badges (answered categories)\n          const badgeCount = playerAnsweredCategories.current[currentPlayer.id]?.size || 0;\n          if (badgeCount >= 6) {\n            // Player has all badges: they win!\n            setWinner(currentPlayer);\n            console.log(`🏆 ${currentPlayer.name} has won the game!`);\n            return;\n          } else {\n            // Not enough badges: trigger roulette (no dice roll)\n            console.log(\n              `🎡 ${currentPlayer.name} reached the end without all badges (${badgeCount}/6). Triggering roulette.`\n            );\n            setShowRoulette(true);\n            return;\n          }\n        }\n\n        // If not at the end, continue with normal tile processing.\n        const category = boardPositionCategories[currentRoute[nextPositionIndex]];\n        if (category && category === \"Roulette\") {\n          setShowRoulette(true);\n          console.log(\"🎡 Landing on Roulette. Showing the roulette wheel.\");\n        } else if (category) {\n          console.log(`❓ Asking question from category: ${category}`);\n          // Save the current question category so we can award the badge later.\n          setCurrentQuestionCategory(category);\n          selectNextQuestion(category, diceScore);\n        } else {\n          console.log(\"🔄 No question required, moving to next player.\");\n          moveToNextPlayer();\n        }\n      }\n    );\n  };\n\n  const handleRollDice = () => {\n    const currentPlayer = players[playerIndexRef.current];\n    const currentPlayerColor = currentPlayer.color.toLowerCase();\n    const currentRoute = playerRoutes[currentPlayerColor];\n    const currentPositionIndex = playerPositionsRef.current[currentPlayerColor];\n\n    // If the player is at the end of their route, disable dice roll and enable roulette.\n    if (currentPositionIndex === currentRoute.length - 1) {\n      console.log(\n        `🎯 ${currentPlayer.name} is at the end of the route. Enabling roulette instead of rolling dice.`\n      );\n      setShowRoulette(true);\n      return;\n    }\n\n    // Otherwise, proceed with the normal dice roll flow.\n    if (!canThrowDice) return;\n\n    const scoreResult = document.querySelector(\"#score-result\");\n    if (!scoreResult) {\n      console.error(\"⚠️ Score result element is missing.\");\n      return;\n    }\n\n    // Disable dice throw while rolling.\n    setCanThrowDice(false);\n\n    throwDice(scoreResult, (diceScore: number) => {\n      console.log(`🎲 Dice roll completed with score: ${diceScore}`);\n      setDiceRoll(diceScore);\n      handleDiceRollComplete(diceScore);\n      setTimeout(() => setCanThrowDice(true), 1000);\n    });\n  };\n\n  return {\n    currentPlayer: players[currentPlayerIndex],\n    diceRoll,\n    canThrowDice,\n    setCanThrowDice,\n    handleRollDice,\n    handleDiceRollComplete,\n    playerPositions,\n    winner,\n    showRoulette,\n    setShowRoulette,\n    playerAnsweredCategories: playerAnsweredCategories.current,\n    handleRouletteSpinComplete,\n    handleAnswerComplete,\n    fillBadgesForPlayer,\n    handleTimeout\n  };\n};\n","import React from \"react\";\nimport { Player } from \"../../types/Player\";\n\ninterface PlayerStatsProps {\n  players: Player[];\n  playerPositions: { [key: string]: number };\n  playerAnsweredCategories: { [key: string]: Set<string> };\n  categoryColors: { [key: string]: string };\n}\n\nconst PlayerStats: React.FC<PlayerStatsProps> = ({\n  players,\n  playerPositions,\n  playerAnsweredCategories,\n  categoryColors,\n}) => (\n  <div className=\"player-stats\">\n    {players.map((player) => (\n      <div key={player.id} className=\"player-stat\">\n        <p>{player.name}</p>\n        <div className=\"categories\">\n          {playerAnsweredCategories[player.id] && Array.from(playerAnsweredCategories[player.id]).map(category => (\n            <span\n              key={category}\n              className=\"category-square\"\n              style={{ backgroundColor: categoryColors[category] }}\n              title={category}\n              ></span>\n            ))}\n        </div>\n      </div>\n    ))}\n  </div>\n);\n\nexport default PlayerStats;","import React from \"react\";\n\ninterface QuestionCategoriesProps {\n  categoryColors: { [key: string]: string };\n  difficulties: string[];\n  answeredQuestions: { [key: string]: Set<string> };\n  getCategoryQuestions: (category: string) => any[];\n}\n\nconst QuestionCategories: React.FC<QuestionCategoriesProps> = ({\n  categoryColors,\n  difficulties,\n  answeredQuestions,\n  getCategoryQuestions,\n}) => {\n  const renderQuestionSquares = (category: string, difficulty: string) => {\n    const categoryQuestions = getCategoryQuestions(category).filter(\n      (q) => q.difficulty === difficulty\n    );\n    const answeredCategoryQuestions = categoryQuestions.filter((q) =>\n      answeredQuestions[`${category}-${difficulty}`]?.has(String(q.id))\n    );\n    return (\n      <div className=\"question-squares\">\n        {categoryQuestions.map((q, index) => (\n          <span\n            key={index}\n            className={`question-square ${\n              answeredCategoryQuestions.includes(q) ? \"answered\" : \"\"\n            }`}\n            style={{ backgroundColor: categoryColors[category] }}\n          ></span>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"question-category-stats\" data-augmented-ui=\"tl-clip-x br-clip border\">\n      <div className=\"question-category-list\">\n        {Object.keys(categoryColors).map((category) => (\n          <div key={category} className=\"category\">\n            <h4>{category}</h4>\n            {difficulties.map((difficulty) => (\n              <div key={difficulty} className=\"difficulty\">\n                {renderQuestionSquares(category, difficulty)}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionCategories;\n","import React, { useState } from 'react';\nimport '../styles/RouletteWheel.css';\n\nconst categories = [\n  'Algorithms & Data Structures', // Red\n  'Programming Languages',        // White\n  'Web Development',              // Black\n  'Data Bases',                   // Blue\n  'DevOps & Dev Tools',           // Gray\n  'UNIX system terminal'          // Green\n];\n\ninterface RouletteWheelProps {\n  onSpinComplete: (category: string) => void;\n}\n\nconst RouletteWheel: React.FC<RouletteWheelProps> = ({ onSpinComplete }) => {\n  const [spinning, setSpinning] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [rotation, setRotation] = useState(0);\n  const [finalAngle, setFinalAngle] = useState(0);\n\n  const spinWheel = () => {\n    setSpinning(true);\n    const randomAngle = Math.floor(Math.random() * 360) + 3600; // 10 full rotations + random angle\n    setRotation(randomAngle);\n\n    setTimeout(() => {\n      setSpinning(false);\n      const finalAngle = randomAngle % 360; // Calculate the final angle after the spin\n      setFinalAngle(finalAngle);\n      const categoryIndex = Math.floor((360 - finalAngle) / 60); // Determine which 60-degree section the final angle falls into\n      const selectedCategory = categories[categoryIndex];\n      setSelectedCategory(selectedCategory);\n\n      // Wait for 4 seconds before proceeding to the question phase\n      setTimeout(() => {\n        onSpinComplete(selectedCategory);\n      }, 1000);\n    }, 3000); // Spin for 3 seconds\n  };\n\n  return (\n    <div className=\"roulette-modal\" data-augmented-ui=\"tr-clip-x bl-clip border\">\n      <div className=\"roulette-wheel\">\n        <div className=\"wheel-container\">\n          <div className={`wheel ${spinning ? 'spinning' : ''}`} style={{ transform: `rotate(${rotation}deg)` }} />\n          <div className=\"arrow-marker\" />\n        </div>\n        <button onClick={spinWheel} disabled={spinning} data-augmented-ui=\"bl-clip br-clip\">\n          {spinning ? 'Spinning...' : 'Spin the Wheel'}\n        </button>\n        {selectedCategory && !spinning && (\n          <p>Selected Category: {selectedCategory}</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RouletteWheel;\n","import React from 'react';\nimport { Player } from '../../types/Player';\nimport \"../../styles/GameBoard.css\";\n\ninterface WinnerModalProps {\n  winner: Player;\n}\n\nconst WinnerModal: React.FC<WinnerModalProps> = ({ winner }) => {\n  return (\n      <div className=\"winner-message dna-demo\" data-augmented-ui=\"tl-clip tr-clip br-2-clip-y bl-2-clip-y border\">\n        <h2>Congratulations!</h2>\n        <p>Player {winner.name} has won the game!</p>\n      </div>\n  );\n};\n\nexport default WinnerModal;\n","import React, { useState, useEffect } from \"react\";\nimport \"../../styles/GameControls.css\";\nimport RouletteWheel from \"../RouletteWheel\";\nimport WinnerModal from \"./WinnerModal\";\nimport { Player } from \"../../types/Player\";\n\ninterface GameControlsProps {\n  currentPlayer: any;\n  diceRoll: number | null;\n  canThrowDice: boolean;\n  setCanThrowDice: React.Dispatch<React.SetStateAction<boolean>>;\n  handleRollDice: () => void;\n  rollBtnRef: React.RefObject<HTMLButtonElement>;\n  scoreRef: React.RefObject<HTMLDivElement>;\n  showRoulette: boolean;\n  handleRouletteSpinComplete: (category: string) => void;\n  toggleDummyToken: (enabled: boolean) => void;\n  updateDummyTokenPosition: (x: number, z: number) => void;\n  fillBadgesForPlayer: (playerId: number) => void;\n  winner: Player | null;\n}\n\nconst GameControls: React.FC<GameControlsProps> = ({\n  currentPlayer,\n  diceRoll,\n  canThrowDice,\n  setCanThrowDice,\n  handleRollDice,\n  rollBtnRef,\n  scoreRef,\n  showRoulette,\n  handleRouletteSpinComplete,\n  toggleDummyToken,\n  updateDummyTokenPosition,\n  fillBadgesForPlayer,\n  winner,\n}) => {\n  const [isDummyEnabled, setIsDummyEnabled] = useState(false);\n  const [dummyX, setDummyX] = useState(0);\n  const [dummyZ, setDummyZ] = useState(0);\n  const playerColorHex: { [key: string]: string } = {\n    red: '#C23334',\n    white: '#FFFFFF',\n    black: '#000000',\n    blue: '#447DAB',\n    gray: '#939393',\n    green: '#208F43'\n  };\n  const currentPlayerColor = currentPlayer ? playerColorHex[currentPlayer.color] : '#FFFFFF';\n  const currentPlayerStyle = {\n    background: `repeating-linear-gradient(\n      45deg,\n      transparent 25px,\n      transparent 25px,\n      ${currentPlayerColor} 16px,\n      #999 30px\n    ),\n    linear-gradient(\n      to bottom,\n      #eee,\n      #999\n    )`\n  };\n\n  useEffect(() => {\n    if (!rollBtnRef.current) {\n      console.error(\"rollBtnRef is null in GameControls.\");\n    }\n  }, [rollBtnRef]);\n\n  const handleToggleDummy = () => {\n    setIsDummyEnabled(!isDummyEnabled);\n    toggleDummyToken(!isDummyEnabled);\n  };\n\n  const handlePositionChange = (axis: \"x\" | \"z\", value: number) => {\n    if (axis === \"x\") {\n      setDummyX(value);\n      updateDummyTokenPosition(value, dummyZ);\n    } else {\n      setDummyZ(value);\n      updateDummyTokenPosition(dummyX, value);\n    }\n  };\n\n  return (\n    <div className=\"game-controls\">\n      {/* WinnerModal rendered within GameControls */}\n      {winner && <WinnerModal winner={winner} />}\n      <div className=\"current-player\" style={currentPlayerStyle} data-augmented-ui=\"tl-clip br-clip border\">\n        <p\n          className=\"player-text\"\n          style={currentPlayer.color === 'white' ? { color: '#000000'} : { color: '#ffffff'}}\n          >Current Player: {currentPlayer.name}\n        </p>\n      </div>\n      {!winner && canThrowDice && (\n        <button\n          className=\"dice-btn\"\n          ref={rollBtnRef}\n          onClick={() => {\n            handleRollDice();\n            setTimeout(() => setCanThrowDice(true), 500);\n          }}\n        >\n        </button>\n      )}\n      {diceRoll !== null && <p>Dice Roll: {diceRoll}</p>}\n      {/* <label>\n        Enable Dummy Token:\n        <input\n          type=\"checkbox\"\n          checked={isDummyEnabled}\n          onChange={handleToggleDummy}\n        />\n      </label>\n      {isDummyEnabled && (\n        <div className=\"dummy-token-controls\">\n          <label>\n            X Pos:\n            <input\n              type=\"number\"\n              value={dummyX}\n              onChange={(e) =>\n                handlePositionChange(\"x\", Number(e.target.value))\n              }\n            />\n          </label>\n          <label>\n            Z Pos:\n            <input\n              type=\"number\"\n              value={dummyZ}\n              onChange={(e) =>\n                handlePositionChange(\"z\", Number(e.target.value))\n              }\n            />\n          </label>\n        </div>\n      )} */}\n      {/* Debug Button: Fill badges and force win check */}\n      {/* <button\n        className=\"debug-btn\"\n        onClick={() => {\n          console.log(\"DEBUG: Current player id:\", currentPlayer.name);\n          console.log(\"DEBUG: Filling badges for player\", currentPlayer.name);\n          fillBadgesForPlayer(currentPlayer.id);\n        }}\n      >\n        Debug: Fill Badges & Check Win\n      </button> */}\n      {showRoulette && (\n        <>\n          {console.log(\"Showing Roulette Wheel\")}\n          <RouletteWheel onSpinComplete={handleRouletteSpinComplete} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default GameControls;\n","import React, { useState, useEffect } from 'react';\nimport '../styles/QuestionCard.css';\n\ninterface Question {\n  id: number;\n  category: string;\n  question: string;\n  options: string[];\n  answer: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n}\n\ninterface QuestionCardProps {\n  question: Question;\n  onAnswer: (correct: boolean) => void;\n  timeLeft: number;\n}\n\nconst categoryColors: { [key: string]: string } = {\n  'Algorithms & Data Structures': '#C23334',\n  'Programming Languages': '#FFFFFF',\n  'Web Development': '#000000',\n  'Data Bases': '#447DAB',\n  'DevOps & Dev Tools': '#939393',\n  'UNIX system terminal': '#208F43'\n};\n\nconst QuestionCard: React.FC<QuestionCardProps> = ({ question, onAnswer, timeLeft }) => {\n  const [selectedOption, setSelectedOption] = useState<string | null>(null);\n\n  const handleOptionClick = (option: string) => {\n    setSelectedOption(option);\n    const isCorrect = option === question.answer;\n    setTimeout(() => onAnswer(isCorrect), 1000);\n  };\n\n  const buttonColor = categoryColors[question.category] || '#000000';\n  const textColor = question.category === 'Programming Languages' ? 'black' : 'white';\n\n  return (\n    <div className=\"question-card\" data-augmented-ui=\"border tl-clip-x tr-clip-x bl-clip br-round\">\n      <h3>{question.category}</h3>\n      <p>{question.question}</p>\n      <div className=\"options\">\n        {question.options.map((option, index) => (\n          <button\n            key={index}\n            className={`option ${selectedOption === option ? 'selected' : ''}`}\n            onClick={() => handleOptionClick(option)}\n            disabled={!!selectedOption}\n            data-augmented-ui=\"tl-clip border\"\n            style={{ backgroundColor: buttonColor, color: textColor }}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n      <p>Time left: {timeLeft} seconds</p>\n    </div>\n  );\n};\n\nexport default QuestionCard;\n","import React from \"react\";\nimport QuestionCard from \"../QuestionCard\";\n\ninterface QuestionModalProps {\n  question: any; // Replace with the actual Question type\n  onAnswer: (correct: boolean, spacesMoved: number) => void;\n  timeLeft: number;\n}\n\nconst QuestionModal: React.FC<QuestionModalProps> = ({\n  question,\n  onAnswer,\n  timeLeft,\n}) => {\n  const handleAnswer = (correct: boolean) => {\n    onAnswer(correct, 0); // Assuming spacesMoved is 0 for now\n  };\n  return (\n    <div className=\"question-modal\">\n      <div className=\"question-header\">\n      <QuestionCard question={question} onAnswer={handleAnswer} timeLeft={timeLeft} />\n        {/* <p>Time Left: {timeLeft}s</p> */}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionModal;\n","export interface Question {\n  id: number;\n  category: string;\n  question: string;\n  options: string[];\n  answer: string;\n  difficulty: 'easy' | 'medium' | 'hard';\n}\n\nexport const questions: Question[] = [\n  {\n    id: 1,\n    category: 'General Knowledge',\n    question: 'What is the capital of France?',\n    options: ['Paris', 'London', 'Berlin', 'Madrid'],\n    answer: 'Paris',\n    difficulty: 'easy',\n  },\n  // Add more questions as needed\n];\n\nexport const algorithms: Question[] = [\n  {\n    id: 1,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a binary search tree?',\n    options: [\n      'A tree where each node has at most two children',\n      'A tree where nodes are arranged in a random order',\n      'A tree used for sorting binary numbers',\n      'A tree with only binary nodes'\n    ],\n    answer: 'A tree where each node has at most two children',\n    difficulty: 'easy',\n  },\n  {\n    id: 2,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of binary search?',\n    options: ['O(n)', 'O(log n)', 'O(n^2)', 'O(1)'],\n    answer: 'O(log n)',\n    difficulty: 'easy',\n  },\n  {\n    id: 3,\n    category: 'Algorithms & Data Structures',\n    question: 'What is an algorithm?',\n    options: [\n      'A step-by-step procedure to solve a problem',\n      'A type of data structure',\n      'A programming language',\n      'A software application'\n    ],\n    answer: 'A step-by-step procedure to solve a problem',\n    difficulty: 'easy',\n  },\n  {\n    id: 4,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the primary use of a hash table?',\n    options: [\n      'Storing key-value pairs for fast lookup',\n      'Sorting elements in a list',\n      'Performing arithmetic operations',\n      'Creating graphical user interfaces'\n    ],\n    answer: 'Storing key-value pairs for fast lookup',\n    difficulty: 'easy',\n  },\n  {\n    id: 5,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the basic operation of bubble sort?',\n    options: [\n      'Comparing adjacent elements and swapping them if necessary',\n      'Dividing the array into smaller subarrays',\n      'Selecting the smallest element and swapping it with the first element',\n      'Building a heap from the array'\n    ],\n    answer: 'Comparing adjacent elements and swapping them if necessary',\n    difficulty: 'easy',\n  },\n  {\n    id: 6,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of bubble sort in the worst case?',\n    options: ['O(n)', 'O(log n)', 'O(n^2)', 'O(1)'],\n    answer: 'O(n^2)',\n    difficulty: 'easy',\n  },\n  {\n    id: 7,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a linked list?',\n    options: [\n      'A data structure consisting of nodes connected by pointers',\n      'A collection of key-value pairs',\n      'A sequence of characters',\n      'A set of instructions'\n    ],\n    answer: 'A data structure consisting of nodes connected by pointers',\n    difficulty: 'easy',\n  },\n  {\n    id: 8,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the primary use of a stack data structure?',\n    options: [\n      'LIFO (Last In, First Out) operations',\n      'FIFO (First In, First Out) operations',\n      'Storing key-value pairs',\n      'Sorting elements'\n    ],\n    answer: 'LIFO (Last In, First Out) operations',\n    difficulty: 'easy',\n  },\n  {\n    id: 9,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of accessing an element in an array?',\n    options: ['O(n)', 'O(log n)', 'O(1)', 'O(n^2)'],\n    answer: 'O(1)',\n    difficulty: 'easy',\n  },\n  {\n    id: 10,\n    category: 'Algorithms & Data Structures',\n    question: 'What does \"FIFO\" stand for in data structures?',\n    options: [\n      'First In, First Out',\n      'Fast In, Fast Out',\n      'First In, First Open',\n      'First In, First Over'\n    ],\n    answer: 'First In, First Out',\n    difficulty: 'easy',\n  },\n  {\n  id: 11,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the primary advantage of a balanced binary search tree?',\n    options: [\n      'Improved search, insertion, and deletion times',\n      'Reduced memory usage',\n      'Simpler implementation',\n      'Better graphical representation'\n    ],\n    answer: 'Improved search, insertion, and deletion times',\n    difficulty: 'medium',\n  },\n  {\n    id: 12,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a heap data structure primarily used for?',\n    options: [\n      'Implementing priority queues',\n      'Storing key-value pairs',\n      'Sorting elements',\n      'Performing matrix operations'\n    ],\n    answer: 'Implementing priority queues',\n    difficulty: 'medium',\n  },\n  {\n    id: 13,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of merge sort in the worst case?',\n    options: ['O(n)', 'O(log n)', 'O(n log n)', 'O(n^2)'],\n    answer: 'O(n log n)',\n    difficulty: 'medium',\n  },\n  {\n    id: 14,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a depth-first search (DFS) algorithm used for?',\n    options: [\n      'Exploring all possible paths in a graph or tree',\n      'Finding the shortest path in a graph',\n      'Balancing a binary search tree',\n      'Sorting an array'\n    ],\n    answer: 'Exploring all possible paths in a graph or tree',\n    difficulty: 'medium',\n  },\n  {\n    id: 15,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the main characteristic of a greedy algorithm?',\n    options: [\n      'Making the locally optimal choice at each step',\n      'Exploring all possible solutions',\n      'Dividing the problem into subproblems',\n      'Using dynamic programming'\n    ],\n    answer: 'Making the locally optimal choice at each step',\n    difficulty: 'medium',\n  },\n  {\n    id: 16,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of inserting an element into a heap?',\n    options: ['O(n)', 'O(log n)', 'O(1)', 'O(n^2)'],\n    answer: 'O(log n)',\n    difficulty: 'medium',\n  },\n  {\n    id: 17,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a hash collision?',\n    options: [\n      'When two different keys map to the same hash value',\n      'When the hash function returns an incorrect value',\n      'When the hash table is full',\n      'When two identical keys map to different hash values'\n    ],\n    answer: 'When two different keys map to the same hash value',\n    difficulty: 'medium',\n  },\n  {\n    id: 18,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the purpose of the quicksort algorithm?',\n    options: [\n      'To sort an array or list',\n      'To search for an element in a list',\n      'To find the shortest path in a graph',\n      'To balance a binary tree'\n    ],\n    answer: 'To sort an array or list',\n    difficulty: 'medium',\n  },\n  {\n    id: 19,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the main difference between a stack and a queue?',\n    options: [\n      'Stack is LIFO, queue is FIFO',\n      'Stack is FIFO, queue is LIFO',\n      'Stack stores elements in order, queue does not',\n      'Stack is dynamic, queue is static'\n    ],\n    answer: 'Stack is LIFO, queue is FIFO',\n    difficulty: 'medium',\n  },\n  {\n    id: 20,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a priority queue?',\n    options: [\n      'A data structure where each element has a priority',\n      'A queue where elements are processed in the order they were added',\n      'A type of balanced binary search tree',\n      'A queue with limited capacity'\n    ],\n    answer: 'A data structure where each element has a priority',\n    difficulty: 'medium',\n  },\n  {\n    id: 21,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the purpose of the Knuth-Morris-Pratt algorithm?',\n    options: [\n      'String pattern matching',\n      'Sorting elements in an array',\n      'Finding the shortest path in a graph',\n      'Balancing a binary search tree'\n    ],\n    answer: 'String pattern matching',\n    difficulty: 'hard',\n  },\n  {\n    id: 22,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of the Floyd-Warshall algorithm?',\n    options: ['O(n^3)', 'O(n log n)', 'O(n^2 log n)', 'O(n)'],\n    answer: 'O(n^3)',\n    difficulty: 'hard',\n  },\n  {\n    id: 23,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the Bellman-Ford algorithm used for?',\n    options: [\n      'Finding shortest paths in a weighted graph',\n      'Sorting elements in an array',\n      'Balancing a binary search tree',\n      'Finding the longest path in a graph'\n    ],\n    answer: 'Finding shortest paths in a weighted graph',\n    difficulty: 'hard',\n  },\n  {\n    id: 24,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the main characteristic of a dynamic programming algorithm?',\n    options: [\n      'Breaking down problems into overlapping subproblems',\n      'Making the locally optimal choice at each step',\n      'Exploring all possible solutions',\n      'Using recursion without memoization'\n    ],\n    answer: 'Breaking down problems into overlapping subproblems',\n    difficulty: 'hard',\n  },\n  {\n    id: 25,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the purpose of the Dijkstra algorithm?',\n    options: [\n      'Finding the shortest path in a graph',\n      'Sorting elements in an array',\n      'Balancing a binary search tree',\n      'Finding the longest path in a graph'\n    ],\n    answer: 'Finding the shortest path in a graph',\n    difficulty: 'hard',\n  },\n  {\n    id: 26,\n    category: 'Algorithms & Data Structures',\n    question: 'What is a red-black tree?',\n    options: [\n      'A balanced binary search tree',\n      'A tree with nodes colored red and black',\n      'A tree used for sorting elements',\n      'A tree with exactly two children per node'\n    ],\n    answer: 'A balanced binary search tree',\n    difficulty: 'hard',\n  },\n  {\n    id: 27,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the main goal of the traveling salesman problem?',\n    options: [\n      'Finding the shortest possible route visiting each city exactly once and returning to the origin city',\n      'Sorting elements in an array',\n      'Balancing a binary search tree',\n      'Finding the shortest path in a graph'\n    ],\n    answer: 'Finding the shortest possible route visiting each city exactly once and returning to the origin city',\n    difficulty: 'hard',\n  },\n  {\n    id: 28,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the purpose of the A* search algorithm?',\n    options: [\n      'Finding the shortest path in a graph with heuristics',\n      'Sorting elements in an array',\n      'Balancing a binary search tree',\n      'Finding the longest path in a graph'\n    ],\n    answer: 'Finding the shortest path in a graph with heuristics',\n    difficulty: 'hard',\n  },\n  {\n    id: 29,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the time complexity of the Karatsuba algorithm for multiplication?',\n    options: ['O(n^1.585)', 'O(n^2)', 'O(n log n)', 'O(n)'],\n    answer: 'O(n^1.585)',\n    difficulty: 'hard',\n  },\n  {\n    id: 30,\n    category: 'Algorithms & Data Structures',\n    question: 'What is the Rabin-Karp algorithm used for?',\n    options: [\n      'String pattern matching using hashing',\n      'Sorting elements in an array',\n      'Finding the shortest path in a graph',\n      'Balancing a binary search tree'\n    ],\n    answer: 'String pattern matching using hashing',\n    difficulty: 'hard',\n  },\n  // Add more questions as needed\n];\n\nexport const programmingLanguages: Question[] = [\n  {\n    id: 1,\n    category: 'Programming Languages',\n    question: 'Which language is used for web development?',\n    options: ['JavaScript', 'Python', 'Java', 'C++'],\n    answer: 'JavaScript',\n    difficulty: 'easy',\n  },\n  {\n    id: 2,\n    category: 'Programming Languages',\n    question: 'Which language is primarily used for statistical computing?',\n    options: ['R', 'JavaScript', 'C#', 'Ruby'],\n    answer: 'R',\n    difficulty: 'easy',\n  },\n  {\n    id: 3,\n    category: 'Programming Languages',\n    question: 'Which language is used to style web pages?',\n    options: ['HTML', 'CSS', 'JavaScript', 'Python'],\n    answer: 'CSS',\n    difficulty: 'easy',\n  },\n  {\n    id: 4,\n    category: 'Programming Languages',\n    question: 'Which language is known for its use in artificial intelligence and machine learning?',\n    options: ['Python', 'Java', 'C++', 'JavaScript'],\n    answer: 'Python',\n    difficulty: 'easy',\n  },\n  {\n    id: 5,\n    category: 'Programming Languages',\n    question: 'Which language is commonly used for Android app development?',\n    options: ['Java', 'Swift', 'C#', 'PHP'],\n    answer: 'Java',\n    difficulty: 'easy',\n  },\n  {\n    id: 6,\n    category: 'Programming Languages',\n    question: 'Which language is known for its simplicity and readability?',\n    options: ['Python', 'Perl', 'C', 'Assembly'],\n    answer: 'Python',\n    difficulty: 'easy',\n  },\n  {\n    id: 7,\n    category: 'Programming Languages',\n    question: 'Which language is used for developing iOS applications?',\n    options: ['Swift', 'Java', 'Kotlin', 'C#'],\n    answer: 'Swift',\n    difficulty: 'easy',\n  },\n  {\n    id: 8,\n    category: 'Programming Languages',\n    question: 'Which language is known for its use in developing Windows applications?',\n    options: ['C#', 'Objective-C', 'Ruby', 'PHP'],\n    answer: 'C#',\n    difficulty: 'easy',\n  },\n  {\n    id: 9,\n    category: 'Programming Languages',\n    question: 'Which language is primarily used for server-side development?',\n    options: ['Node.js', 'JavaScript', 'HTML', 'CSS'],\n    answer: 'Node.js',\n    difficulty: 'easy',\n  },\n  {\n    id: 10,\n    category: 'Programming Languages',\n    question: 'Which language is known for its performance and use in system programming?',\n    options: ['C', 'JavaScript', 'Python', 'Ruby'],\n    answer: 'C',\n    difficulty: 'easy',\n  },\n  {\n    id: 11,\n    category: 'Programming Languages',\n    question: 'Which programming paradigm is supported by JavaScript?',\n    options: ['Object-oriented', 'Functional', 'Procedural', 'All of the above'],\n    answer: 'All of the above',\n    difficulty: 'medium',\n  },\n  {\n    id: 12,\n    category: 'Programming Languages',\n    question: 'What is the primary use of TypeScript?',\n    options: ['To add static types to JavaScript', 'To replace JavaScript', 'For styling web pages', 'For database management'],\n    answer: 'To add static types to JavaScript',\n    difficulty: 'medium',\n  },\n  {\n    id: 13,\n    category: 'Programming Languages',\n    question: 'Which language uses the concept of \"protocols\" to define methods that can be implemented by any class?',\n    options: ['Swift', 'Java', 'Python', 'C++'],\n    answer: 'Swift',\n    difficulty: 'medium',\n  },\n  {\n    id: 14,\n    category: 'Programming Languages',\n    question: 'Which language introduced the concept of \"lambda expressions\" in its recent versions?',\n    options: ['Java', 'C++', 'Python', 'Ruby'],\n    answer: 'Java',\n    difficulty: 'medium',\n  },\n  {\n    id: 15,\n    category: 'Programming Languages',\n    question: 'Which language is designed specifically for developing distributed systems?',\n    options: ['Erlang', 'JavaScript', 'C#', 'Ruby'],\n    answer: 'Erlang',\n    difficulty: 'medium',\n  },\n  {\n    id: 16,\n    category: 'Programming Languages',\n    question: 'Which language uses \"goroutines\" for concurrent programming?',\n    options: ['Go', 'Java', 'Python', 'Ruby'],\n    answer: 'Go',\n    difficulty: 'medium',\n  },\n  {\n    id: 17,\n    category: 'Programming Languages',\n    question: 'Which language is known for its \"write once, run anywhere\" capability?',\n    options: ['Java', 'C++', 'Swift', 'Kotlin'],\n    answer: 'Java',\n    difficulty: 'medium',\n  },\n  {\n    id: 18,\n    category: 'Programming Languages',\n    question: 'Which language is commonly used for scripting in web browsers?',\n    options: ['JavaScript', 'Perl', 'PHP', 'Python'],\n    answer: 'JavaScript',\n    difficulty: 'medium',\n  },\n  {\n    id: 19,\n    category: 'Programming Languages',\n    question: 'Which language uses \"mixins\" as a way to include reusable code in classes?',\n    options: ['Ruby', 'Java', 'C#', 'Swift'],\n    answer: 'Ruby',\n    difficulty: 'medium',\n  },\n  {\n    id: 20,\n    category: 'Programming Languages',\n    question: 'Which language introduced the \"async/await\" syntax for asynchronous programming?',\n    options: ['JavaScript', 'Python', 'Java', 'C++'],\n    answer: 'JavaScript',\n    difficulty: 'medium',\n  },\n  {\n    id: 21,\n    category: 'Programming Languages',\n    question: 'Which language is known for its use of macros and hygienic macro expansion?',\n    options: ['Rust', 'Haskell', 'Erlang', 'Lua'],\n    answer: 'Rust',\n    difficulty: 'hard',\n  },\n  {\n    id: 22,\n    category: 'Programming Languages',\n    question: 'Which language uses \"monads\" as a common design pattern?',\n    options: ['Haskell', 'C#', 'Java', 'Python'],\n    answer: 'Haskell',\n    difficulty: 'hard',\n  },\n  {\n    id: 23,\n    category: 'Programming Languages',\n    question: 'Which language is known for its use in game development and has a powerful component system?',\n    options: ['C#', 'JavaScript', 'Swift', 'Ruby'],\n    answer: 'C#',\n    difficulty: 'hard',\n  },\n  {\n    id: 24,\n    category: 'Programming Languages',\n    question: 'Which language is known for its \"actor model\" for concurrency?',\n    options: ['Erlang', 'Python', 'C++', 'Java'],\n    answer: 'Erlang',\n    difficulty: 'hard',\n  },\n  {\n    id: 25,\n    category: 'Programming Languages',\n    question: 'Which language uses \"pattern matching\" extensively in its syntax?',\n    options: ['Elixir', 'Ruby', 'PHP', 'JavaScript'],\n    answer: 'Elixir',\n    difficulty: 'hard',\n  },\n  {\n    id: 26,\n    category: 'Programming Languages',\n    question: 'Which language is known for its \"borrow checker\" to ensure memory safety?',\n    options: ['Rust', 'C++', 'Go', 'Swift'],\n    answer: 'Rust',\n    difficulty: 'hard',\n  },\n  {\n    id: 27,\n    category: 'Programming Languages',\n    question: 'Which language introduced the concept of \"coroutines\" for asynchronous programming?',\n    options: ['Python', 'Java', 'JavaScript', 'Ruby'],\n    answer: 'Python',\n    difficulty: 'hard',\n  },\n  {\n    id: 28,\n    category: 'Programming Languages',\n    question: 'Which language uses \"traits\" as a way to share functionality between different types?',\n    options: ['Rust', 'JavaScript', 'C#', 'Ruby'],\n    answer: 'Rust',\n    difficulty: 'hard',\n  },\n  {\n    id: 29,\n    category: 'Programming Languages',\n    question: 'Which language is known for its \"gradual typing\" system?',\n    options: ['TypeScript', 'Java', 'C#', 'Python'],\n    answer: 'TypeScript',\n    difficulty: 'hard',\n  },\n  {\n    id: 30,\n    category: 'Programming Languages',\n    question: 'Which language is commonly used for developing real-time systems and applications?',\n    options: ['Erlang', 'Ruby', 'PHP', 'JavaScript'],\n    answer: 'Erlang',\n    difficulty: 'hard',\n  }\n  // Add more questions as needed\n];\n\nexport const webDevelopment: Question[] = [\n  {\n    id: 1,\n    category: 'Web Development',\n    question: 'What does HTML stand for?',\n    options: ['HyperText Markup Language', 'HyperText Markdown Language', 'HighText Markup Language', 'None of the above'],\n    answer: 'HyperText Markup Language',\n    difficulty: 'easy',\n  },\n  {\n    id: 2,\n    category: 'Web Development',\n    question: 'Which CSS property is used to change the text color?',\n    options: ['color', 'background-color', 'font-size', 'text-align'],\n    answer: 'color',\n    difficulty: 'easy',\n  },\n  {\n    id: 3,\n    category: 'Web Development',\n    question: 'What does CSS stand for?',\n    options: ['Cascading Style Sheets', 'Colorful Style Sheets', 'Creative Style Sheets', 'Computer Style Sheets'],\n    answer: 'Cascading Style Sheets',\n    difficulty: 'easy',\n  },\n  {\n    id: 4,\n    category: 'Web Development',\n    question: 'Which HTML element is used for the largest heading?',\n    options: ['<h1>', '<heading>', '<h6>', '<head>'],\n    answer: '<h1>',\n    difficulty: 'easy',\n  },\n  {\n    id: 5,\n    category: 'Web Development',\n    question: 'What does JS stand for in the context of web development?',\n    options: ['JavaScript', 'JavaServer', 'JustScript', 'JavaSyntax'],\n    answer: 'JavaScript',\n    difficulty: 'easy',\n  },\n  {\n    id: 6,\n    category: 'Web Development',\n    question: 'Which HTML element is used to create a hyperlink?',\n    options: ['<a>', '<link>', '<href>', '<nav>'],\n    answer: '<a>',\n    difficulty: 'easy',\n  },\n  {\n    id: 7,\n    category: 'Web Development',\n    question: 'Which HTML attribute is used to specify the URL of an image?',\n    options: ['src', 'href', 'link', 'url'],\n    answer: 'src',\n    difficulty: 'easy',\n  },\n  {\n    id: 8,\n    category: 'Web Development',\n    question: 'Which CSS property controls the size of text?',\n    options: ['font-size', 'text-size', 'font-style', 'text-style'],\n    answer: 'font-size',\n    difficulty: 'easy',\n  },\n  {\n    id: 9,\n    category: 'Web Development',\n    question: 'Which HTML element is used to define a paragraph?',\n    options: ['<p>', '<para>', '<paragraph>', '<text>'],\n    answer: '<p>',\n    difficulty: 'easy',\n  },\n  {\n    id: 10,\n    category: 'Web Development',\n    question: 'What does DOM stand for?',\n    options: ['Document Object Model', 'Digital Object Model', 'Document Order Model', 'Data Object Model'],\n    answer: 'Document Object Model',\n    difficulty: 'easy',\n  },\n  {\n    id: 11,\n    category: 'Web Development',\n    question: 'Which method is used to attach an event handler to an element in JavaScript?',\n    options: ['addEventListener', 'attachEvent', 'setEvent', 'bindEvent'],\n    answer: 'addEventListener',\n    difficulty: 'medium',\n  },\n  {\n    id: 12,\n    category: 'Web Development',\n    question: 'Which CSS framework is known for its mobile-first approach and grid system?',\n    options: ['Bootstrap', 'Foundation', 'Bulma', 'Tailwind CSS'],\n    answer: 'Bootstrap',\n    difficulty: 'medium',\n  },\n  {\n    id: 13,\n    category: 'Web Development',\n    question: 'Which HTML5 element is used to embed a video in a webpage?',\n    options: ['<video>', '<embed>', '<movie>', '<media>'],\n    answer: '<video>',\n    difficulty: 'medium',\n  },\n  {\n    id: 14,\n    category: 'Web Development',\n    question: 'Which JavaScript method is used to parse a JSON string into an object?',\n    options: ['JSON.parse()', 'JSON.stringify()', 'JSON.toObject()', 'JSON.convert()'],\n    answer: 'JSON.parse()',\n    difficulty: 'medium',\n  },\n  {\n    id: 15,\n    category: 'Web Development',\n    question: 'Which HTTP status code indicates that the request was successful?',\n    options: ['200', '404', '500', '301'],\n    answer: '200',\n    difficulty: 'medium',\n  },\n  {\n    id: 16,\n    category: 'Web Development',\n    question: 'Which HTML attribute is used to define inline styles?',\n    options: ['style', 'class', 'id', 'inline'],\n    answer: 'style',\n    difficulty: 'medium',\n  },\n  {\n    id: 17,\n    category: 'Web Development',\n    question: 'Which CSS property is used to create space between the content and the border of an element?',\n    options: ['padding', 'margin', 'border', 'spacing'],\n    answer: 'padding',\n    difficulty: 'medium',\n  },\n  {\n    id: 18,\n    category: 'Web Development',\n    question: 'Which CSS property is used to make the text bold?',\n    options: ['font-weight', 'font-style', 'font-size', 'text-transform'],\n    answer: 'font-weight',\n    difficulty: 'medium',\n  },\n  {\n    id: 19,\n    category: 'Web Development',\n    question: 'Which HTML element is used to display a scalar measurement within a known range?',\n    options: ['<meter>', '<progress>', '<gauge>', '<range>'],\n    answer: '<meter>',\n    difficulty: 'medium',\n  },\n  {\n    id: 20,\n    category: 'Web Development',\n    question: 'Which JavaScript function is used to execute a function after a specified time interval?',\n    options: ['setTimeout()', 'setInterval()', 'setTime()', 'delay()'],\n    answer: 'setTimeout()',\n    difficulty: 'medium',\n  },\n  {\n    id: 21,\n    category: 'Web Development',\n    question: 'Which CSS property is used to specify the z-order of an element?',\n    options: ['z-index', 'position', 'order', 'layer'],\n    answer: 'z-index',\n    difficulty: 'hard',\n  },\n  {\n    id: 22,\n    category: 'Web Development',\n    question: 'Which JavaScript method is used to create a new array with all elements that pass a test?',\n    options: ['filter()', 'map()', 'reduce()', 'forEach()'],\n    answer: 'filter()',\n    difficulty: 'hard',\n  },\n  {\n    id: 23,\n    category: 'Web Development',\n    question: 'Which HTML5 element is used to define navigation links?',\n    options: ['<nav>', '<menu>', '<navigation>', '<links>'],\n    answer: '<nav>',\n    difficulty: 'hard',\n  },\n  {\n    id: 24,\n    category: 'Web Development',\n    question: 'Which JavaScript feature allows functions to be used as first-class objects?',\n    options: ['Higher-order functions', 'Closures', 'Callbacks', 'Promises'],\n    answer: 'Higher-order functions',\n    difficulty: 'hard',\n  },\n  {\n    id: 25,\n    category: 'Web Development',\n    question: 'Which CSS preprocessor uses variables, nesting, and mixins to enhance CSS?',\n    options: ['Sass', 'Less', 'Stylus', 'All of the above'],\n    answer: 'All of the above',\n    difficulty: 'hard',\n  },\n  {\n    id: 26,\n    category: 'Web Development',\n    question: 'Which HTTP method is used to update a resource?',\n    options: ['PUT', 'GET', 'DELETE', 'OPTIONS'],\n    answer: 'PUT',\n    difficulty: 'hard',\n  },\n  {\n    id: 27,\n    category: 'Web Development',\n    question: 'Which CSS property is used to change the font of an element?',\n    options: ['font-family', 'font-style', 'font-weight', 'font-size'],\n    answer: 'font-family',\n    difficulty: 'hard',\n  },\n  {\n    id: 28,\n    category: 'Web Development',\n    question: 'Which JavaScript method is used to sort the elements of an array?',\n    options: ['sort()', 'order()', 'arrange()', 'shuffle()'],\n    answer: 'sort()',\n    difficulty: 'hard',\n  },\n  {\n    id: 29,\n    category: 'Web Development',\n    question: 'Which HTML5 element is used to display a progress bar?',\n    options: ['<progress>', '<meter>', '<bar>', '<range>'],\n    answer: '<progress>',\n    difficulty: 'hard',\n  },\n  {\n    id: 30,\n    category: 'Web Development',\n    question: 'Which CSS property is used to create an animation?',\n    options: ['animation', 'transition', 'transform', 'keyframes'],\n    answer: 'animation',\n    difficulty: 'hard',\n  }\n  // Add more questions as needed\n];\n\nexport const dataBases: Question[] = [\n  {\n    id: 1,\n    category: 'Data Bases',\n    question: 'What does SQL stand for?',\n    options: ['Structured Query Language', 'Simple Query Language', 'Structured Question Language', 'Standard Query Language'],\n    answer: 'Structured Query Language',\n    difficulty: 'easy',\n  },\n  {\n    id: 2,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to retrieve data from a database?',\n    options: ['SELECT', 'GET', 'RETRIEVE', 'FETCH'],\n    answer: 'SELECT',\n    difficulty: 'easy',\n  },\n  {\n    id: 3,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to update data in a database?',\n    options: ['UPDATE', 'MODIFY', 'CHANGE', 'SET'],\n    answer: 'UPDATE',\n    difficulty: 'easy',\n  },\n  {\n    id: 4,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to delete data from a database?',\n    options: ['DELETE', 'REMOVE', 'DROP', 'ERASE'],\n    answer: 'DELETE',\n    difficulty: 'easy',\n  },\n  {\n    id: 5,\n    category: 'Data Bases',\n    question: 'What does the acronym DBMS stand for?',\n    options: ['Database Management System', 'Database Management Software', 'Database Manipulation System', 'Database Mapping System'],\n    answer: 'Database Management System',\n    difficulty: 'easy',\n  },\n  {\n    id: 6,\n    category: 'Data Bases',\n    question: 'Which SQL function is used to count the number of rows in a database?',\n    options: ['COUNT()', 'SUM()', 'NUMBER()', 'ROW_COUNT()'],\n    answer: 'COUNT()',\n    difficulty: 'easy',\n  },\n  {\n    id: 7,\n    category: 'Data Bases',\n    question: 'Which SQL clause is used to filter results?',\n    options: ['WHERE', 'FILTER', 'SORT', 'CONDITION'],\n    answer: 'WHERE',\n    difficulty: 'easy',\n  },\n  {\n    id: 8,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to insert new data into a database?',\n    options: ['INSERT INTO', 'ADD TO', 'PUT INTO', 'APPEND TO'],\n    answer: 'INSERT INTO',\n    difficulty: 'easy',\n  },\n  {\n    id: 9,\n    category: 'Data Bases',\n    question: 'What is the primary key in a database?',\n    options: ['A unique identifier for a record', 'A key that is used to encrypt data', 'A key that is used to unlock the database', 'A key that is used to sort data'],\n    answer: 'A unique identifier for a record',\n    difficulty: 'easy',\n  },\n  {\n    id: 10,\n    category: 'Data Bases',\n    question: 'Which type of database is designed to handle large amounts of structured data?',\n    options: ['Relational Database', 'Flat File Database', 'Document Database', 'Key-Value Database'],\n    answer: 'Relational Database',\n    difficulty: 'easy',\n  },\n  {\n    id: 11,\n    category: 'Data Bases',\n    question: 'Which SQL keyword is used to sort the result set?',\n    options: ['ORDER BY', 'SORT BY', 'GROUP BY', 'ARRANGE BY'],\n    answer: 'ORDER BY',\n    difficulty: 'medium',\n  },\n  {\n    id: 12,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to create a new table in a database?',\n    options: ['CREATE TABLE', 'NEW TABLE', 'ADD TABLE', 'MAKE TABLE'],\n    answer: 'CREATE TABLE',\n    difficulty: 'medium',\n  },\n  {\n    id: 13,\n    category: 'Data Bases',\n    question: 'Which SQL clause is used to group rows that have the same values?',\n    options: ['GROUP BY', 'ORDER BY', 'CLUSTER BY', 'SORT BY'],\n    answer: 'GROUP BY',\n    difficulty: 'medium',\n  },\n  {\n    id: 14,\n    category: 'Data Bases',\n    question: 'Which SQL function is used to calculate the average value of a numeric column?',\n    options: ['AVG()', 'MEAN()', 'AVERAGE()', 'MEDIAN()'],\n    answer: 'AVG()',\n    difficulty: 'medium',\n  },\n  {\n    id: 15,\n    category: 'Data Bases',\n    question: 'Which SQL constraint is used to ensure that all values in a column are unique?',\n    options: ['UNIQUE', 'PRIMARY KEY', 'NOT NULL', 'CHECK'],\n    answer: 'UNIQUE',\n    difficulty: 'medium',\n  },\n  {\n    id: 16,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to remove a table and all its data from a database?',\n    options: ['DROP TABLE', 'DELETE TABLE', 'REMOVE TABLE', 'CLEAR TABLE'],\n    answer: 'DROP TABLE',\n    difficulty: 'medium',\n  },\n  {\n    id: 17,\n    category: 'Data Bases',\n    question: 'Which SQL keyword is used to retrieve only distinct (different) values?',\n    options: ['DISTINCT', 'UNIQUE', 'DIFFERENT', 'SEPARATE'],\n    answer: 'DISTINCT',\n    difficulty: 'medium',\n  },\n  {\n    id: 18,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to add a column to an existing table?',\n    options: ['ALTER TABLE', 'ADD COLUMN', 'MODIFY TABLE', 'CHANGE TABLE'],\n    answer: 'ALTER TABLE',\n    difficulty: 'medium',\n  },\n  {\n    id: 19,\n    category: 'Data Bases',\n    question: 'Which SQL function is used to calculate the total sum of a numeric column?',\n    options: ['SUM()', 'TOTAL()', 'ADD()', 'AGGREGATE()'],\n    answer: 'SUM()',\n    difficulty: 'medium',\n  },\n  {\n    id: 20,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to change data in an existing table?',\n    options: ['UPDATE', 'MODIFY', 'CHANGE', 'ALTER'],\n    answer: 'UPDATE',\n    difficulty: 'medium',\n  },\n  {\n    id: 21,\n    category: 'Data Bases',\n    question: 'What is a foreign key in a relational database?',\n    options: ['A field that links one table to another', 'A field that uniquely identifies a record', 'A field that contains encrypted data', 'A field that stores file paths'],\n    answer: 'A field that links one table to another',\n    difficulty: 'hard',\n  },\n  {\n    id: 22,\n    category: 'Data Bases',\n    question: 'Which normalization form removes transitive dependencies?',\n    options: ['Third Normal Form (3NF)', 'First Normal Form (1NF)', 'Second Normal Form (2NF)', 'Boyce-Codd Normal Form (BCNF)'],\n    answer: 'Third Normal Form (3NF)',\n    difficulty: 'hard',\n  },\n  {\n    id: 23,\n    category: 'Data Bases',\n    question: 'Which type of database is designed to handle unstructured or semi-structured data?',\n    options: ['NoSQL Database', 'Relational Database', 'Flat File Database', 'Hierarchical Database'],\n    answer: 'NoSQL Database',\n    difficulty: 'hard',\n  },\n  {\n    id: 24,\n    category: 'Data Bases',\n    question: 'Which SQL function is used to find the highest value in a numeric column?',\n    options: ['MAX()', 'HIGHEST()', 'TOP()', 'GREATEST()'],\n    answer: 'MAX()',\n    difficulty: 'hard',\n  },\n  {\n    id: 25,\n    category: 'Data Bases',\n    question: 'Which SQL keyword is used to remove duplicate rows from the result set?',\n    options: ['DISTINCT', 'UNIQUE', 'REMOVE DUPLICATES', 'SEPARATE'],\n    answer: 'DISTINCT',\n    difficulty: 'hard',\n  },\n  {\n    id: 26,\n    category: 'Data Bases',\n    question: 'Which SQL statement is used to create a view?',\n    options: ['CREATE VIEW', 'NEW VIEW', 'MAKE VIEW', 'DEFINE VIEW'],\n    answer: 'CREATE VIEW',\n    difficulty: 'hard',\n  },\n  {\n    id: 27,\n    category: 'Data Bases',\n    question: 'Which type of join returns all records when there is a match in either table?',\n    options: ['FULL OUTER JOIN', 'INNER JOIN', 'LEFT JOIN', 'RIGHT JOIN'],\n    answer: 'FULL OUTER JOIN',\n    difficulty: 'hard',\n  },\n  {\n    id: 28,\n    category: 'Data Bases',\n    question: 'Which SQL keyword is used to combine the results of two or more SELECT statements?',\n    options: ['UNION', 'COMBINE', 'JOIN', 'MERGE'],\n    answer: 'UNION',\n    difficulty: 'hard',\n  },\n  {\n    id: 29,\n    category: 'Data Bases',\n    question: 'Which type of database management system (DBMS) uses table-based format to store data?',\n    options: ['Relational DBMS', 'Object-Oriented DBMS', 'Hierarchical DBMS', 'Network DBMS'],\n    answer: 'Relational DBMS',\n    difficulty: 'hard',\n  },\n  {\n    id: 30,\n    category: 'Data Bases',\n    question: 'Which SQL function is used to find the lowest value in a numeric column?',\n    options: ['MIN()', 'LEAST()', 'BOTTOM()', 'LOWEST()'],\n    answer: 'MIN()',\n    difficulty: 'hard',\n  }\n  // Add more questions as needed\n];\n\nexport const devOps: Question[] = [\n  {\n    id: 1,\n    category: 'DevOps & Dev Tools',\n    question: 'What is Docker used for?',\n    options: ['Containerization', 'Virtualization', 'Orchestration', 'Configuration management'],\n    answer: 'Containerization',\n    difficulty: 'easy',\n  },\n  {\n    id: 2,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for continuous integration?',\n    options: ['Jenkins', 'Git', 'Docker', 'Kubernetes'],\n    answer: 'Jenkins',\n    difficulty: 'easy',\n  },\n  {\n    id: 3,\n    category: 'DevOps & Dev Tools',\n    question: 'What does CI/CD stand for?',\n    options: ['Continuous Integration/Continuous Deployment', 'Continuous Integration/Continuous Delivery', 'Continuous Improvement/Continuous Deployment', 'Continuous Improvement/Continuous Delivery'],\n    answer: 'Continuous Integration/Continuous Deployment',\n    difficulty: 'easy',\n  },\n  {\n    id: 4,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for version control?',\n    options: ['Git', 'Jenkins', 'Docker', 'Ansible'],\n    answer: 'Git',\n    difficulty: 'easy',\n  },\n  {\n    id: 5,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for container orchestration?',\n    options: ['Kubernetes', 'Docker', 'Git', 'Terraform'],\n    answer: 'Kubernetes',\n    difficulty: 'easy',\n  },\n  {\n    id: 6,\n    category: 'DevOps & Dev Tools',\n    question: 'What is the purpose of Ansible?',\n    options: ['Configuration management', 'Containerization', 'Continuous integration', 'Version control'],\n    answer: 'Configuration management',\n    difficulty: 'easy',\n  },\n  {\n    id: 7,\n    category: 'DevOps & Dev Tools',\n    question: 'What is the primary function of Terraform?',\n    options: ['Infrastructure as Code', 'Container orchestration', 'Continuous delivery', 'Configuration management'],\n    answer: 'Infrastructure as Code',\n    difficulty: 'easy',\n  },\n  {\n    id: 8,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is commonly used for monitoring and alerting?',\n    options: ['Prometheus', 'Docker', 'Git', 'Ansible'],\n    answer: 'Prometheus',\n    difficulty: 'easy',\n  },\n  {\n    id: 9,\n    category: 'DevOps & Dev Tools',\n    question: 'Which scripting language is commonly used for automation in DevOps?',\n    options: ['Python', 'Java', 'C++', 'Ruby'],\n    answer: 'Python',\n    difficulty: 'easy',\n  },\n  {\n    id: 10,\n    category: 'DevOps & Dev Tools',\n    question: 'What does YAML stand for?',\n    options: ['YAML Ain\\'t Markup Language', 'Yet Another Markup Language', 'YAML As Markup Language', 'Yet Another Management Language'],\n    answer: 'YAML Ain\\'t Markup Language',\n    difficulty: 'easy',\n  },\n  {\n    id: 11,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for infrastructure automation?',\n    options: ['Terraform', 'Jenkins', 'Docker', 'Nagios'],\n    answer: 'Terraform',\n    difficulty: 'medium',\n  },\n  {\n    id: 12,\n    category: 'DevOps & Dev Tools',\n    question: 'Which DevOps practice involves managing and provisioning data centers through machine-readable definition files?',\n    options: ['Infrastructure as Code', 'Continuous Integration', 'Configuration Management', 'Containerization'],\n    answer: 'Infrastructure as Code',\n    difficulty: 'medium',\n  },\n  {\n    id: 13,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used to automate cloud resources and infrastructure?',\n    options: ['Terraform', 'Kubernetes', 'Jenkins', 'Ansible'],\n    answer: 'Terraform',\n    difficulty: 'medium',\n  },\n  {\n    id: 14,\n    category: 'DevOps & Dev Tools',\n    question: 'What is the primary purpose of Kubernetes?',\n    options: ['Container orchestration', 'Version control', 'Continuous integration', 'Monitoring'],\n    answer: 'Container orchestration',\n    difficulty: 'medium',\n  },\n  {\n    id: 15,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for automated testing and deployment?',\n    options: ['Jenkins', 'Git', 'Docker', 'Terraform'],\n    answer: 'Jenkins',\n    difficulty: 'medium',\n  },\n  {\n    id: 16,\n    category: 'DevOps & Dev Tools',\n    question: 'What is Prometheus primarily used for?',\n    options: ['Monitoring and alerting', 'Container orchestration', 'Continuous integration', 'Version control'],\n    answer: 'Monitoring and alerting',\n    difficulty: 'medium',\n  },\n  {\n    id: 17,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for continuous delivery and deployment?',\n    options: ['Spinnaker', 'Docker', 'Git', 'Nagios'],\n    answer: 'Spinnaker',\n    difficulty: 'medium',\n  },\n  {\n    id: 18,\n    category: 'DevOps & Dev Tools',\n    question: 'Which configuration management tool uses a domain-specific language based on Ruby?',\n    options: ['Chef', 'Puppet', 'Ansible', 'Terraform'],\n    answer: 'Chef',\n    difficulty: 'medium',\n  },\n  {\n    id: 19,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for logging and monitoring in the ELK stack?',\n    options: ['Kibana', 'Docker', 'Git', 'Ansible'],\n    answer: 'Kibana',\n    difficulty: 'medium',\n  },\n  {\n    id: 20,\n    category: 'DevOps & Dev Tools',\n    question: 'Which DevOps practice involves continuously merging code changes into a shared repository?',\n    options: ['Continuous Integration', 'Infrastructure as Code', 'Configuration Management', 'Containerization'],\n    answer: 'Continuous Integration',\n    difficulty: 'medium',\n  },\n  {\n    id: 21,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool uses declarative language to automate cloud infrastructure provisioning?',\n    options: ['Terraform', 'Jenkins', 'Docker', 'Nagios'],\n    answer: 'Terraform',\n    difficulty: 'hard',\n  },\n  {\n    id: 22,\n    category: 'DevOps & Dev Tools',\n    question: 'What does the term \"immutable infrastructure\" refer to in DevOps?',\n    options: [\n      'Infrastructure components that are replaced instead of being updated',\n      'Infrastructure that cannot be scaled',\n      'Infrastructure that is built only once',\n      'Infrastructure that is always available'\n    ],\n    answer: 'Infrastructure components that are replaced instead of being updated',\n    difficulty: 'hard',\n  },\n  {\n    id: 23,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for secret management and secure introduction in infrastructure?',\n    options: ['Vault', 'Docker', 'Jenkins', 'Prometheus'],\n    answer: 'Vault',\n    difficulty: 'hard',\n  },\n  {\n    id: 24,\n    category: 'DevOps & Dev Tools',\n    question: 'Which container runtime is used by Kubernetes by default?',\n    options: ['containerd', 'Docker', 'rkt', 'LXC'],\n    answer: 'containerd',\n    difficulty: 'hard',\n  },\n  {\n    id: 25,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used to manage and secure container environments?',\n    options: ['Kubernetes', 'Docker', 'Vault', 'Terraform'],\n    answer: 'Kubernetes',\n    difficulty: 'hard',\n  },\n  {\n    id: 26,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for creating, managing, and deploying virtual machine images to on-premises or cloud environments?',\n    options: ['Packer', 'Terraform', 'Docker', 'Kubernetes'],\n    answer: 'Packer',\n    difficulty: 'hard',\n  },\n  {\n    id: 27,\n    category: 'DevOps & Dev Tools',\n    question: 'What is the main purpose of using a service mesh in a microservices architecture?',\n    options: ['Managing service-to-service communication', 'Storing configuration settings', 'Managing container orchestration', 'Automating infrastructure provisioning'],\n    answer: 'Managing service-to-service communication',\n    difficulty: 'hard',\n  },\n  {\n    id: 28,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool is used for container security scanning?',\n    options: ['Clair', 'Kubernetes', 'Jenkins', 'Ansible'],\n    answer: 'Clair',\n    difficulty: 'hard',\n  },\n  {\n    id: 29,\n    category: 'DevOps & Dev Tools',\n    question: 'Which tool provides end-to-end visibility into the performance of microservices?',\n    options: ['Jaeger', 'Prometheus', 'Terraform', 'Kibana'],\n    answer: 'Jaeger',\n    difficulty: 'hard',\n  },\n  {\n    id: 30,\n    category: 'DevOps & Dev Tools',\n    question: 'Which monitoring tool uses time-series data to monitor and alert on system performance?',\n    options: ['Prometheus', 'Nagios', 'Kubernetes', 'Jenkins'],\n    answer: 'Prometheus',\n    difficulty: 'hard',\n  }\n  // Add more questions as needed\n];\n\nexport const unixSystem: Question[] = [\n  {\n    id: 1,\n    category: 'UNIX system terminal',\n    question: 'What command is used to list files in a directory?',\n    options: ['ls', 'dir', 'list', 'show'],\n    answer: 'ls',\n    difficulty: 'easy',\n  },\n  {\n    id: 2,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to change directories?',\n    options: ['cd', 'chdir', 'mv', 'cp'],\n    answer: 'cd',\n    difficulty: 'easy',\n  },\n  {\n    id: 3,\n    category: 'UNIX system terminal',\n    question: 'What does the \"pwd\" command do?',\n    options: ['Prints the current working directory', 'Changes the password', 'Pauses the terminal', 'Prints the date and time'],\n    answer: 'Prints the current working directory',\n    difficulty: 'easy',\n  },\n  {\n    id: 4,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to copy files?',\n    options: ['cp', 'copy', 'mv', 'cfile'],\n    answer: 'cp',\n    difficulty: 'easy',\n  },\n  {\n    id: 5,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to move or rename files?',\n    options: ['mv', 'move', 'rename', 'transfer'],\n    answer: 'mv',\n    difficulty: 'easy',\n  },\n  {\n    id: 6,\n    category: 'UNIX system terminal',\n    question: 'What does the \"rm\" command do?',\n    options: ['Removes files or directories', 'Renames files', 'Reads a file', 'Moves files'],\n    answer: 'Removes files or directories',\n    difficulty: 'easy',\n  },\n  {\n    id: 7,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to create a new directory?',\n    options: ['mkdir', 'newdir', 'createdir', 'makedir'],\n    answer: 'mkdir',\n    difficulty: 'easy',\n  },\n  {\n    id: 8,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display the contents of a file?',\n    options: ['cat', 'show', 'display', 'view'],\n    answer: 'cat',\n    difficulty: 'easy',\n  },\n  {\n    id: 9,\n    category: 'UNIX system terminal',\n    question: 'What does the \"man\" command do?',\n    options: ['Displays the manual for a command', 'Sends a message', 'Manages files', 'Monitors system processes'],\n    answer: 'Displays the manual for a command',\n    difficulty: 'easy',\n  },\n  {\n    id: 10,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to search for a pattern in a file?',\n    options: ['grep', 'find', 'search', 'look'],\n    answer: 'grep',\n    difficulty: 'easy',\n  },\n  {\n    id: 11,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display the last part of a file?',\n    options: ['tail', 'end', 'last', 'bottom'],\n    answer: 'tail',\n    difficulty: 'medium',\n  },\n  {\n    id: 12,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display the first part of a file?',\n    options: ['head', 'top', 'begin', 'start'],\n    answer: 'head',\n    difficulty: 'medium',\n  },\n  {\n    id: 13,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to change file permissions?',\n    options: ['chmod', 'chperm', 'permchange', 'chaccess'],\n    answer: 'chmod',\n    difficulty: 'medium',\n  },\n  {\n    id: 14,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to compress files?',\n    options: ['gzip', 'compress', 'zip', 'tar'],\n    answer: 'gzip',\n    difficulty: 'medium',\n  },\n  {\n    id: 15,\n    category: 'UNIX system terminal',\n    question: 'What does the \"ps\" command do?',\n    options: ['Displays information about active processes', 'Pauses the terminal', 'Prints the shell version', 'Pings a server'],\n    answer: 'Displays information about active processes',\n    difficulty: 'medium',\n  },\n  {\n    id: 16,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display disk usage?',\n    options: ['du', 'df', 'diskuse', 'diskinfo'],\n    answer: 'du',\n    difficulty: 'medium',\n  },\n  {\n    id: 17,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display the amount of free disk space?',\n    options: ['df', 'du', 'freespace', 'diskfree'],\n    answer: 'df',\n    difficulty: 'medium',\n  },\n  {\n    id: 18,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display network interface information?',\n    options: ['ifconfig', 'ipconfig', 'netinfo', 'netstat'],\n    answer: 'ifconfig',\n    difficulty: 'medium',\n  },\n  {\n    id: 19,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to compare two files?',\n    options: ['diff', 'compare', 'filecomp', 'cmp'],\n    answer: 'diff',\n    difficulty: 'medium',\n  },\n  {\n    id: 20,\n    category: 'UNIX system terminal',\n    question: 'What does the \"kill\" command do?',\n    options: ['Terminates a process', 'Pauses a process', 'Restarts a process', 'Starts a process'],\n    answer: 'Terminates a process',\n    difficulty: 'medium',\n  },\n  {\n    id: 21,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to change the owner of a file?',\n    options: ['chown', 'chperm', 'ownchange', 'chgroup'],\n    answer: 'chown',\n    difficulty: 'hard',\n  },\n  {\n    id: 22,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display the routing table?',\n    options: ['netstat -r', 'route', 'traceroute', 'netinfo -r'],\n    answer: 'netstat -r',\n    difficulty: 'hard',\n  },\n  {\n    id: 23,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to check disk errors and repair file systems?',\n    options: ['fsck', 'chkdsk', 'diskcheck', 'repairfs'],\n    answer: 'fsck',\n    difficulty: 'hard',\n  },\n  {\n    id: 24,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to schedule a command or script to run at a specific time?',\n    options: ['cron', 'at', 'schedule', 'timed'],\n    answer: 'at',\n    difficulty: 'hard',\n  },\n  {\n    id: 25,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to change the priority of a process?',\n    options: ['nice', 'renice', 'priority', 'procprio'],\n    answer: 'nice',\n    difficulty: 'hard',\n  },\n  {\n    id: 26,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to view and modify the kernel parameters at runtime?',\n    options: ['sysctl', 'kernel', 'modprobe', 'kmod'],\n    answer: 'sysctl',\n    difficulty: 'hard',\n  },\n  {\n    id: 27,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to send signals to processes?',\n    options: ['kill', 'signal', 'send', 'procctrl'],\n    answer: 'kill',\n    difficulty: 'hard',\n  },\n  {\n    id: 28,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to create a new user account?',\n    options: ['useradd', 'adduser', 'newuser', 'mkuser'],\n    answer: 'useradd',\n    difficulty: 'hard',\n  },\n  {\n    id: 29,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display the manual pages for commands?',\n    options: ['man', 'help', 'info', 'doc'],\n    answer: 'man',\n    difficulty: 'hard',\n  },\n  {\n    id: 30,\n    category: 'UNIX system terminal',\n    question: 'Which command is used to display and configure network interfaces?',\n    options: ['ifconfig', 'netstat', 'route', 'ipconfig'],\n    answer: 'ifconfig',\n    difficulty: 'hard',\n  }\n  // Add more questions as needed\n];\n","import { algorithms, programmingLanguages, webDevelopment, dataBases, devOps, unixSystem } from '../../../types/Question';\n\n// Example category colors\nexport const categoryColors: { [key: string]: string } = {\n  \"Algorithms & Data Structures\": \"#C23334\",\n  \"Programming Languages\": \"#FFFFFF\",\n  \"Web Development\": \"#000000\",\n  \"Data Bases\": \"#447DAB\",\n  \"DevOps & Dev Tools\": \"#939393\",\n  \"UNIX system terminal\": \"#208F43\",\n};\n\n// Example difficulties\nexport const difficulties = [\"easy\", \"medium\", \"hard\"];\n\n// Retrieve questions for a given category\nexport const getCategoryQuestions = (category: string) => {\n  switch (category) {\n    case 'Algorithms & Data Structures':\n      return algorithms;\n    case 'Programming Languages':\n      return programmingLanguages;\n    case 'Web Development':\n      return webDevelopment;\n    case 'Data Bases':\n      return dataBases;\n    case 'DevOps & Dev Tools':\n      return devOps;\n    case 'UNIX system terminal':\n      return unixSystem;\n    default:\n      return [];\n  }\n};\n","import * as THREE from \"three\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"../../styles/GameBoard.css\";\nimport { Player } from \"../../types/Player\";\nimport { useGameLogic } from \"./hooks/useGameLogic\";\nimport { useQuestions } from \"./hooks/useQuestion\";\nimport PlayerStats from \"./PlayerStats\";\nimport QuestionCategories from \"./QuestionCategories\";\nimport GameControls from \"./GameControls\";\nimport QuestionModal from \"./QuestionModal\";\nimport { scene } from '../../utils/dice/scene';\nimport { initDiceSystem, initPlayerTokens } from \"../../utils/threeManager\";\nimport { categoryColors, difficulties, getCategoryQuestions } from \"./utils/categories\";\nimport { loadPlayerTokenModel } from \"../../utils/player/token\";\n\ninterface GameBoardProps {\n  players: Player[];\n  setPlayers: React.Dispatch<React.SetStateAction<Player[]>>;\n  numberOfPlayers: number;\n}\n\nconst GameBoard: React.FC<GameBoardProps> = ({\n  players,\n  setPlayers,\n  numberOfPlayers,\n}) => {\n  const {\n    currentQuestion,\n    answeredQuestions,\n    selectNextQuestion,\n    handleAnswer,\n    resetQuestions,\n    timeLeft,\n    setTimeLeft\n  } = useQuestions({\n    categoryColors,\n    difficulties,\n    getCategoryQuestions,\n    onTimeout: () => {\n      // Time ran out. Call game logic’s answer completion with false.\n      handleAnswerComplete(false);\n    }\n  });\n\n  const {\n    currentPlayer,\n    diceRoll,\n    canThrowDice,\n    setCanThrowDice,\n    handleRollDice,\n    handleDiceRollComplete,\n    playerPositions,\n    winner,\n    showRoulette,\n    handleRouletteSpinComplete,\n    playerAnsweredCategories,\n    handleAnswerComplete,\n    fillBadgesForPlayer\n  } = useGameLogic(\n    players,\n    setPlayers,\n    numberOfPlayers,\n    selectNextQuestion,\n    handleAnswer\n  );\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const rollBtnRef = useRef<HTMLButtonElement>(null);\n  const scoreRef = useRef<HTMLDivElement>(null);\n\n  const [xPos, setXPos] = useState(0);\n  const [zPos, setZPos] = useState(0);\n  const [dummyToken, setDummyToken] = useState<THREE.Object3D | null>(null);\n\n  const toggleDummyToken = (enabled: boolean) => {\n    if (enabled) {\n      loadPlayerTokenModel(\"#800080\", (dummy: THREE.Object3D ) => { // Purple color\n        const dummyToken = dummy.clone();\n        dummyToken.scale.set(3, 3, 3);\n        dummyToken.position.set(0, 0, 0); // Default position\n        scene.add(dummyToken);\n        setDummyToken(dummyToken);\n      });\n    } else if (dummyToken) {\n      scene.remove(dummyToken);\n      setDummyToken(null);\n    }\n  };\n\n  const updateDummyTokenPosition = (x: number, z: number) => {\n    if (dummyToken) {\n      dummyToken.position.set(x, dummyToken.position.y, z);\n    }\n  };\n\n  useEffect(() => {\n    if (canvasRef.current && rollBtnRef.current && scoreRef.current) {\n      initDiceSystem(\n        canvasRef.current,\n        scoreRef.current,\n        rollBtnRef.current,\n        handleDiceRollComplete // Pass the callback here\n      );\n      initPlayerTokens(scene, players);\n    } else {\n      console.error(\"Refs are missing:\", {\n        canvasRef: canvasRef.current,\n        rollBtnRef: rollBtnRef.current,\n        scoreRef: scoreRef.current,\n      });\n    }\n  }, [canvasRef, rollBtnRef, scoreRef]);\n\n  useEffect(() => {\n    updateDummyTokenPosition(xPos, zPos);\n  }, [xPos, zPos]);\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"player-stats-container\">\n        <PlayerStats\n          players={players}\n          playerPositions={playerPositions}\n          playerAnsweredCategories={playerAnsweredCategories}\n          categoryColors={categoryColors}\n        />\n        <QuestionCategories\n          categoryColors={categoryColors}\n          difficulties={difficulties}\n          answeredQuestions={answeredQuestions}\n          getCategoryQuestions={getCategoryQuestions}\n        />\n      </div>\n      <div ref={scoreRef} id=\"score-result\" className=\"score-controls\"></div>\n      <canvas ref={canvasRef} id=\"canvas\" className=\"game-canvas\"></canvas>\n      <GameControls\n        currentPlayer={currentPlayer}\n        diceRoll={diceRoll}\n        canThrowDice={canThrowDice}\n        setCanThrowDice={setCanThrowDice}\n        handleRollDice={handleRollDice}\n        rollBtnRef={rollBtnRef}\n        scoreRef={scoreRef}\n        showRoulette={showRoulette}\n        handleRouletteSpinComplete={handleRouletteSpinComplete}\n        toggleDummyToken={toggleDummyToken}\n        updateDummyTokenPosition={updateDummyTokenPosition}\n        fillBadgesForPlayer={fillBadgesForPlayer}\n        winner={winner}\n      />\n      {currentQuestion && (\n        <QuestionModal\n          question={currentQuestion}\n          onAnswer={handleAnswerComplete}\n          timeLeft={timeLeft ?? 0}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default GameBoard;\n","import { useState, useEffect } from \"react\";\nimport { Question } from \"../../../types/Question\";\n\ninterface UseQuestionsProps {\n  categoryColors: { [key: string]: string };\n  difficulties: string[];\n  getCategoryQuestions: (category: string) => Question[];\n  onTimeout?: () => void;\n}\n\ninterface UseQuestionsReturn {\n  currentQuestion: Question | null;\n  answeredQuestions: { [key: string]: Set<string> };\n  selectNextQuestion: (category: string) => void;\n  handleAnswer: (correct: boolean) => void;\n  resetQuestions: () => void;\n  timeLeft: number | null;\n  setTimeLeft: React.Dispatch<React.SetStateAction<number | null>>;\n}\n\nexport const useQuestions = ({\n  categoryColors,\n  difficulties,\n  getCategoryQuestions,\n  onTimeout,\n}: UseQuestionsProps): UseQuestionsReturn => {\n  const [currentQuestion, setCurrentQuestion] = useState<Question | null>(null);\n  const [answeredQuestions, setAnsweredQuestions] = useState<{\n    [key: string]: Set<string>;\n  }>({});\n  const [timeLeft, setTimeLeft] = useState<number | null>(null);\n\n  // Initialize answered questions map\n  useEffect(() => {\n    const initialAnsweredQuestions: { [key: string]: Set<string> } = {};\n    Object.keys(categoryColors).forEach((category) => {\n      difficulties.forEach((difficulty) => {\n        initialAnsweredQuestions[`${category}-${difficulty}`] = new Set();\n      });\n    });\n    setAnsweredQuestions(initialAnsweredQuestions);\n  }, [categoryColors, difficulties]);\n\n  // Timer effect: counts down the timeLeft whenever a question is active.\n  useEffect(() => {\n    if (currentQuestion && timeLeft !== null) {\n      if (timeLeft <= 0) {\n        // Time is up, treat as an incorrect answer.\n        if (onTimeout) {\n          onTimeout();\n        }\n        handleAnswer(false)\n      } else {\n        const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n        return () => clearTimeout(timer);\n      }\n    }\n  }, [timeLeft, currentQuestion]);\n\n  // Select the next question in a specific category\n  const selectNextQuestion = (category: string) => {\n    const categoryQuestions = getCategoryQuestions(category);\n    const availableQuestions = categoryQuestions.filter(\n      (q) => !answeredQuestions[`${category}-${q.difficulty}`]?.has(String(q.id))\n    );\n\n    if (availableQuestions.length > 0) {\n      const question =\n        availableQuestions[Math.floor(Math.random() * availableQuestions.length)];\n      setCurrentQuestion(question);\n\n      // Set timer based on difficulty\n      switch (question.difficulty) {\n        case \"easy\":\n          setTimeLeft(10);\n          break;\n        case \"medium\":\n          setTimeLeft(20);\n          break;\n        case \"hard\":\n          setTimeLeft(30);\n          break;\n        default:\n          setTimeLeft(30);\n      }\n    } else {\n      setCurrentQuestion(null);\n    }\n  };\n\n  // Handle answering a question\n  const handleAnswer = (correct: boolean) => {\n    if (!currentQuestion) return;\n\n    const questionKey = `${currentQuestion.category}-${currentQuestion.difficulty}`;\n    setAnsweredQuestions((prev) => {\n      const updated = { ...prev };\n      if (!updated[questionKey]) {\n        updated[questionKey] = new Set();\n      }\n      if (correct) {\n        updated[questionKey].add(String(currentQuestion.id));\n      }\n      return updated;\n    });\n\n    // Clear current question and reset timer\n    setCurrentQuestion(null);\n    setTimeLeft(null);\n  };\n\n  // Reset all answered questions\n  const resetQuestions = () => {\n    const resetAnsweredQuestions: { [key: string]: Set<string> } = {};\n    Object.keys(categoryColors).forEach((category) => {\n      difficulties.forEach((difficulty) => {\n        resetAnsweredQuestions[`${category}-${difficulty}`] = new Set();\n      });\n    });\n    setAnsweredQuestions(resetAnsweredQuestions);\n    setCurrentQuestion(null);\n    setTimeLeft(null);\n  };\n\n  return {\n    currentQuestion,\n    answeredQuestions,\n    selectNextQuestion,\n    handleAnswer,\n    resetQuestions,\n    timeLeft,\n    setTimeLeft,\n  };\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport MainMenu from './components/MainMenu';\nimport NewGameSetup from './components/NewGameSetup';\nimport GameBoard from './components/GameBoard/GameBoard';\nimport { Player } from './types/Player';\n\nconst App: React.FC = () => {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [continueGame, setContinueGame] = useState(false);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [numberOfPlayers, setNumberOfPlayers] = useState(0); // State for number of players\n\n  const handleNewGame = () => {\n    setGameStarted(true);\n    setContinueGame(false);\n  };\n\n  const handleContinueGame = () => {\n    setContinueGame(true);\n    setGameStarted(true);\n    // Load saved game session logic here\n  };\n\n  const handleSetupComplete = (sortedPlayers: Player[]) => {\n    const initializedPlayers = sortedPlayers.map((player) => ({ ...player, position: 0 }));\n    setPlayers(initializedPlayers);\n    // Transition to the game board or next phase of the game here\n  };\n\n  const handlePlayerCount = (count: number) => {\n    setNumberOfPlayers(count); // Capture the number of players from NewGameSetup\n  };\n\n  if (!gameStarted) {\n    return <MainMenu onNewGame={handleNewGame} onContinueGame={handleContinueGame} />;\n  }\n\n  if (!continueGame && players.length === 0) {\n    return <NewGameSetup onSetupComplete={handleSetupComplete} onPlayerCount={handlePlayerCount} />;\n  }\n\n  return (\n    <div className=\"App\">\n      <GameBoard players={players} setPlayers={setPlayers} numberOfPlayers={numberOfPlayers} />\n    </div>\n  );\n};\n\nexport default App;\n","import { onCLS, onFID, onFCP, onLCP, onTTFB } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: (metric: any) => void) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n  onCLS(onPerfEntry);\n  onFID(onPerfEntry);\n  onFCP(onPerfEntry);\n  onLCP(onPerfEntry);\n  onTTFB(onPerfEntry);\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: '/api',\n});\n\nexport const fetchQuestions = async () => {\n  const response = await api.get('/questions');\n  return response.data;\n};\n\nexport const fetchPlayers = async () => {\n  const response = await api.get('/players');\n  return response.data;\n};\n\nexport const fetchGameSessions = async () => {\n  const response = await api.get('/game-sessions');\n  return response.data;\n};\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchGameSessions } from '../../services/api';\n\ninterface GameSession {\n  id: number;\n  startTime: Date;\n  endTime: Date;\n  players: number[];\n}\n\ninterface GameState {\n  currentTurn: number;\n  isStarted: boolean;\n  sessions: GameSession[];\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\n  error: string | null;\n}\n\nconst initialState: GameState = {\n  currentTurn: 0,\n  isStarted: false,\n  sessions: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const getGameSessions = createAsyncThunk('game/getGameSessions', async () => {\n  const sessions = await fetchGameSessions();\n  return sessions;\n});\n\nconst gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    startGame(state) {\n      state.isStarted = true;\n    },\n    endGame(state) {\n      state.isStarted = false;\n    },\n    nextTurn(state) {\n      state.currentTurn += 1;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getGameSessions.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(getGameSessions.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.sessions = action.payload;\n      })\n      .addCase(getGameSessions.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message ?? null;\n      });\n  },\n});\n\nexport const { startGame, endGame, nextTurn } = gameSlice.actions;\nexport default gameSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchPlayers } from '../../services/api';\n\ninterface Player {\n  id: number;\n  name: string;\n  position: number;\n  score: number;\n}\n\ninterface PlayersState {\n  players: Player[];\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\n  error: string | null;\n}\n\nconst initialState: PlayersState = {\n  players: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const getPlayers = createAsyncThunk('players/getPlayers', async () => {\n  const players = await fetchPlayers();\n  return players;\n});\n\nconst playersSlice = createSlice({\n  name: 'players',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getPlayers.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(getPlayers.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.players = action.payload;\n      })\n      .addCase(getPlayers.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message ?? null;\n      });\n  },\n});\n\nexport default playersSlice.reducer;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { fetchQuestions } from '../../services/api';\n\ninterface Question {\n  id: number;\n  category: string;\n  question: string;\n  answer: string;\n}\n\ninterface QuestionsState {\n  questions: Question[];\n  status: 'idle' | 'loading' | 'succeeded' | 'failed';\n  error: string | null;\n}\n\nconst initialState: QuestionsState = {\n  questions: [],\n  status: 'idle',\n  error: null,\n};\n\nexport const getQuestions = createAsyncThunk('questions/getQuestions', async () => {\n  const questions = await fetchQuestions();\n  return questions;\n});\n\nconst questionsSlice = createSlice({\n  name: 'questions',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getQuestions.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(getQuestions.fulfilled, (state, action) => {\n        state.status = 'succeeded';\n        state.questions = action.payload;\n      })\n      .addCase(getQuestions.rejected, (state, action) => {\n        state.status = 'failed';\n        state.error = action.error.message ?? null;\n      });\n  },\n});\n\nexport default questionsSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport gameSlice from './slices/gameSlice';\nimport playersSlice from './slices/playersSlice';\nimport questionsSlice from './slices/questionsSlice';\n\nconst rootReducer = combineReducers({\n  game: gameSlice,\n  players: playersSlice,\n  questions: questionsSlice,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport rootReducer from './rootReducer';\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n\n"],"sourceRoot":""}